ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_DMA_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_DMA_Init:
  24              	.LFB723:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "stdint.h"
  24:Src/main.c    **** #include "stdio.h"
  25:Src/main.c    **** #include "stdlib.h"
  26:Src/main.c    **** #include "string.h"
  27:Src/main.c    **** /* this define sets the number of TIM2 overflows
  28:Src/main.c    ****  * to append to the data frame for the LEDs to 
  29:Src/main.c    ****  * load the received data into their registers */
  30:Src/main.c    **** 
  31:Src/main.c    **** #define ARRAY_LEN(x) (sizeof(x) / sizeof((x)[0]))
  32:Src/main.c    **** 
  33:Src/main.c    **** #define NOTE_OFF 0x80
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 2


  34:Src/main.c    **** #define NOTE_ON 0x90
  35:Src/main.c    **** #define POLY_PRESS 0xA0
  36:Src/main.c    **** #define CTRL_CHANGE 0xB0
  37:Src/main.c    **** #define PROG_CHANGE 0xC0
  38:Src/main.c    **** #define CHAN_PRESS 0xD0
  39:Src/main.c    **** #define PITCH_BEND 0xE0
  40:Src/main.c    **** #define SYSTEM 0xF0
  41:Src/main.c    **** 
  42:Src/main.c    **** #define MIDI_C0 0
  43:Src/main.c    **** #define MIDI_D0 2
  44:Src/main.c    **** #define MIDI_E0 4
  45:Src/main.c    **** #define MIDI_F0 5
  46:Src/main.c    **** #define MIDI_G0 7
  47:Src/main.c    **** #define MIDI_A0 9
  48:Src/main.c    **** #define MIDI_B0 11
  49:Src/main.c    **** #define MIDI_C 60
  50:Src/main.c    **** #define MIDI_D 62
  51:Src/main.c    **** #define MIDI_E 64
  52:Src/main.c    **** #define MIDI_F 65
  53:Src/main.c    **** #define MIDI_G 67
  54:Src/main.c    **** #define MIDI_A 69
  55:Src/main.c    **** #define MIDI_B 71
  56:Src/main.c    **** #define MIDI_SHARP 1
  57:Src/main.c    **** #define MIDI_FLAT -1
  58:Src/main.c    **** #define MIDI_OCTAVE 12
  59:Src/main.c    **** 
  60:Src/main.c    **** #define MAX_BRIGHT 0.5 // 0 - 1
  61:Src/main.c    **** 
  62:Src/main.c    **** #define WS2812_DEADPERIOD 40
  63:Src/main.c    **** #define NCHANNELS 4
  64:Src/main.c    **** #define NCOLS 7
  65:Src/main.c    **** #define NLINESCH 2
  66:Src/main.c    **** #define NLEDSCH NCOLS *NLINESCH
  67:Src/main.c    **** #define NCOLSL NCOLS - 1
  68:Src/main.c    **** #define NLEDS NCOLS *NCOLS
  69:Src/main.c    **** #define MAX_DIV 5
  70:Src/main.c    **** 
  71:Src/main.c    **** uint16_t WS2812_IO_High = 0xFFFF;
  72:Src/main.c    **** uint16_t WS2812_IO_Low = 0x0000;
  73:Src/main.c    **** 
  74:Src/main.c    **** volatile uint8_t WS2812_TC = 1;
  75:Src/main.c    **** volatile uint8_t TIM2_overflows = 0;
  76:Src/main.c    **** 
  77:Src/main.c    **** volatile int cntMessage = 0;
  78:Src/main.c    **** volatile int waitForMessage = 0;
  79:Src/main.c    **** volatile int resto = 12;
  80:Src/main.c    **** volatile uint8_t arr[3] = {0, 0, 0};
  81:Src/main.c    **** volatile uint8_t arrCol[13][3] = {
  82:Src/main.c    ****     {50, 0, 0},   //red ~~
  83:Src/main.c    ****     {50, 25, 0},  //orange ~~
  84:Src/main.c    ****     {50, 50, 0},  //amarelo ~~
  85:Src/main.c    ****     {50, 38, 0},  //castanho ~~
  86:Src/main.c    ****     {0, 50, 36},  //azul turquesa ~~
  87:Src/main.c    ****     {25, 0, 50},  //cor de rosa ~~
  88:Src/main.c    ****     {50, 0, 25},  //rosa choque ~~
  89:Src/main.c    ****     {50, 0, 50},  //violeta escuro ~~
  90:Src/main.c    ****     {0, 0, 40},   //azul escuro
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 3


  91:Src/main.c    ****     {30, 30, 30}, //cinzento
  92:Src/main.c    ****     {60, 60, 20}, //branca
  93:Src/main.c    ****     {60, 30, 20}, //red magenta
  94:Src/main.c    ****     {0, 0, 0}};
  95:Src/main.c    **** const uint8_t font4x6[96][2] = {
  96:Src/main.c    ****     {0x00, 0x00}, /*SPACE*/
  97:Src/main.c    ****     {0x49, 0x08}, /*'!'*/
  98:Src/main.c    ****     {0xb4, 0x00}, /*'"'*/
  99:Src/main.c    ****     {0xbe, 0xf6}, /*'#'*/
 100:Src/main.c    ****     {0x7b, 0x7a}, /*'$'*/
 101:Src/main.c    ****     {0xa5, 0x94}, /*'%'*/
 102:Src/main.c    ****     {0x55, 0xb8}, /*'&'*/
 103:Src/main.c    ****     {0x48, 0x00}, /*'''*/
 104:Src/main.c    ****     {0x29, 0x44}, /*'('*/
 105:Src/main.c    ****     {0x44, 0x2a}, /*')'*/
 106:Src/main.c    ****     {0x15, 0xa0}, /*'*'*/
 107:Src/main.c    ****     {0x0b, 0x42}, /*'+'*/
 108:Src/main.c    ****     {0x00, 0x50}, /*','*/
 109:Src/main.c    ****     {0x03, 0x02}, /*'-'*/
 110:Src/main.c    ****     {0x00, 0x08}, /*'.'*/
 111:Src/main.c    ****     {0x25, 0x90}, /*'/'*/
 112:Src/main.c    ****     {0x76, 0xba}, /*'0'*/
 113:Src/main.c    ****     {0x59, 0x5c}, /*'1'*/
 114:Src/main.c    ****     {0xc5, 0x9e}, /*'2'*/
 115:Src/main.c    ****     {0xc5, 0x38}, /*'3'*/
 116:Src/main.c    ****     {0x92, 0xe6}, /*'4'*/
 117:Src/main.c    ****     {0xf3, 0x3a}, /*'5'*/
 118:Src/main.c    ****     {0x73, 0xba}, /*'6'*/
 119:Src/main.c    ****     {0xe5, 0x90}, /*'7'*/
 120:Src/main.c    ****     {0x77, 0xba}, /*'8'*/
 121:Src/main.c    ****     {0x77, 0x3a}, /*'9'*/
 122:Src/main.c    ****     {0x08, 0x40}, /*':'*/
 123:Src/main.c    ****     {0x08, 0x50}, /*';'*/
 124:Src/main.c    ****     {0x2a, 0x44}, /*'<'*/
 125:Src/main.c    ****     {0x1c, 0xe0}, /*'='*/
 126:Src/main.c    ****     {0x88, 0x52}, /*'>'*/
 127:Src/main.c    ****     {0xe5, 0x08}, /*'?'*/
 128:Src/main.c    ****     {0x56, 0x8e}, /*'@'*/
 129:Src/main.c    ****     {0x77, 0xb6}, /*'A'*/
 130:Src/main.c    ****     {0x77, 0xb8}, /*'B'*/
 131:Src/main.c    ****     {0x72, 0x8c}, /*'C'*/
 132:Src/main.c    ****     {0xd6, 0xba}, /*'D'*/
 133:Src/main.c    ****     {0x73, 0x9e}, /*'E'*/
 134:Src/main.c    ****     {0x73, 0x92}, /*'F'*/
 135:Src/main.c    ****     {0x72, 0xae}, /*'G'*/
 136:Src/main.c    ****     {0xb7, 0xb6}, /*'H'*/
 137:Src/main.c    ****     {0xe9, 0x5c}, /*'I'*/
 138:Src/main.c    ****     {0x64, 0xaa}, /*'J'*/
 139:Src/main.c    ****     {0xb7, 0xb4}, /*'K'*/
 140:Src/main.c    ****     {0x92, 0x9c}, /*'L'*/
 141:Src/main.c    ****     {0xbe, 0xb6}, /*'M'*/
 142:Src/main.c    ****     {0xd6, 0xb6}, /*'N'*/
 143:Src/main.c    ****     {0x56, 0xaa}, /*'O'*/
 144:Src/main.c    ****     {0xd7, 0x92}, /*'P'*/
 145:Src/main.c    ****     {0x76, 0xee}, /*'Q'*/
 146:Src/main.c    ****     {0x77, 0xb4}, /*'R'*/
 147:Src/main.c    ****     {0x71, 0x38}, /*'S'*/
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 4


 148:Src/main.c    ****     {0xe9, 0x48}, /*'T'*/
 149:Src/main.c    ****     {0xb6, 0xae}, /*'U'*/
 150:Src/main.c    ****     {0xb6, 0xaa}, /*'V'*/
 151:Src/main.c    ****     {0xb6, 0xf6}, /*'W'*/
 152:Src/main.c    ****     {0xb5, 0xb4}, /*'X'*/
 153:Src/main.c    ****     {0xb5, 0x48}, /*'Y'*/
 154:Src/main.c    ****     {0xe5, 0x9c}, /*'Z'*/
 155:Src/main.c    ****     {0x69, 0x4c}, /*'['*/
 156:Src/main.c    ****     {0x91, 0x24}, /*'\'*/
 157:Src/main.c    ****     {0x64, 0x2e}, /*']'*/
 158:Src/main.c    ****     {0x54, 0x00}, /*'^'*/
 159:Src/main.c    ****     {0x00, 0x1c}, /*'_'*/
 160:Src/main.c    ****     {0x44, 0x00}, /*'`'*/
 161:Src/main.c    ****     {0x0e, 0xae}, /*'a'*/
 162:Src/main.c    ****     {0x9a, 0xba}, /*'b'*/
 163:Src/main.c    ****     {0x0e, 0x8c}, /*'c'*/
 164:Src/main.c    ****     {0x2e, 0xae}, /*'d'*/
 165:Src/main.c    ****     {0x0e, 0xce}, /*'e'*/
 166:Src/main.c    ****     {0x56, 0xd0}, /*'f'*/
 167:Src/main.c    ****     {0x55, 0x3B}, /*'g'*/
 168:Src/main.c    ****     {0x93, 0xb4}, /*'h'*/
 169:Src/main.c    ****     {0x41, 0x44}, /*'i'*/
 170:Src/main.c    ****     {0x41, 0x51}, /*'j'*/
 171:Src/main.c    ****     {0x97, 0xb4}, /*'k'*/
 172:Src/main.c    ****     {0x49, 0x44}, /*'l'*/
 173:Src/main.c    ****     {0x17, 0xb6}, /*'m'*/
 174:Src/main.c    ****     {0x1a, 0xb6}, /*'n'*/
 175:Src/main.c    ****     {0x0a, 0xaa}, /*'o'*/
 176:Src/main.c    ****     {0xd6, 0xd3}, /*'p'*/
 177:Src/main.c    ****     {0x76, 0x67}, /*'q'*/
 178:Src/main.c    ****     {0x17, 0x90}, /*'r'*/
 179:Src/main.c    ****     {0x0f, 0x38}, /*'s'*/
 180:Src/main.c    ****     {0x9a, 0x8c}, /*'t'*/
 181:Src/main.c    ****     {0x16, 0xae}, /*'u'*/
 182:Src/main.c    ****     {0x16, 0xba}, /*'v'*/
 183:Src/main.c    ****     {0x16, 0xf6}, /*'w'*/
 184:Src/main.c    ****     {0x15, 0xb4}, /*'x'*/
 185:Src/main.c    ****     {0xb5, 0x2b}, /*'y'*/
 186:Src/main.c    ****     {0x1c, 0x5e}, /*'z'*/
 187:Src/main.c    ****     {0x6b, 0x4c}, /*'{'*/
 188:Src/main.c    ****     {0x49, 0x48}, /*'|'*/
 189:Src/main.c    ****     {0xc9, 0x5a}, /*'}'*/
 190:Src/main.c    ****     {0x54, 0x00}, /*'~'*/
 191:Src/main.c    ****     {0x56, 0xe2}  /*''*/
 192:Src/main.c    **** };
 193:Src/main.c    **** uint8_t velocity = 0;
 194:Src/main.c    **** typedef struct Notes
 195:Src/main.c    **** {
 196:Src/main.c    ****   char symbol[2];
 197:Src/main.c    ****   char octave[1];
 198:Src/main.c    ****   char note[3];
 199:Src/main.c    **** } Note;
 200:Src/main.c    **** Note note;
 201:Src/main.c    **** 
 202:Src/main.c    **** /* WS2812 framebuffer
 203:Src/main.c    ****  * buffersize = (#LEDs / 16) * 24 */
 204:Src/main.c    **** uint16_t WS2812_IO_framedata[24 * NLEDSCH];
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 5


 205:Src/main.c    **** 
 206:Src/main.c    **** uint8_t currColor[3] = {60, 25, 0};
 207:Src/main.c    **** uint8_t effect[NLEDS][3];
 208:Src/main.c    **** 
 209:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 210:Src/main.c    **** void SystemClock_Config(void);
 211:Src/main.c    **** static void MX_GPIO_Init(void);
 212:Src/main.c    **** static void MX_USART3_UART_Init(void);
 213:Src/main.c    **** static void MX_DMA_Init(void);
 214:Src/main.c    **** static void MX_TIM2_Init(void);
 215:Src/main.c    **** 
 216:Src/main.c    **** unsigned char getFontLine(unsigned char data, int line_num)
 217:Src/main.c    **** {
 218:Src/main.c    ****   const uint8_t index = (data - 32);
 219:Src/main.c    ****   unsigned char pixel = 0;
 220:Src/main.c    ****   if ((font4x6[index][1] & 1) == 1)
 221:Src/main.c    ****     line_num -= 1;
 222:Src/main.c    ****   if (line_num == 0)
 223:Src/main.c    ****   {
 224:Src/main.c    ****     pixel = (font4x6[index][0]) >> 4;
 225:Src/main.c    ****   }
 226:Src/main.c    ****   else if (line_num == 1)
 227:Src/main.c    ****   {
 228:Src/main.c    ****     pixel = (font4x6[index][0]) >> 1;
 229:Src/main.c    ****   }
 230:Src/main.c    ****   else if (line_num == 2)
 231:Src/main.c    ****   {
 232:Src/main.c    ****     // Split over 2 bytes
 233:Src/main.c    ****     return (((font4x6[index][0]) & 0x03) << 2) | (((font4x6[index][1]) & 0x02));
 234:Src/main.c    ****   }
 235:Src/main.c    ****   else if (line_num == 3)
 236:Src/main.c    ****   {
 237:Src/main.c    ****     pixel = (font4x6[index][1]) >> 4;
 238:Src/main.c    ****   }
 239:Src/main.c    ****   else if (line_num == 4)
 240:Src/main.c    ****   {
 241:Src/main.c    ****     pixel = (font4x6[index][1]) >> 1;
 242:Src/main.c    ****   }
 243:Src/main.c    ****   return pixel & 0xE;
 244:Src/main.c    **** }
 245:Src/main.c    **** 
 246:Src/main.c    **** void calculateLeds()
 247:Src/main.c    **** {
 248:Src/main.c    ****   arr[0] = ((arrCol[resto][0] * (velocity + 1)) / 255) * MAX_BRIGHT;
 249:Src/main.c    ****   arr[1] = ((arrCol[resto][1] * (velocity + 1)) / 255) * MAX_BRIGHT;
 250:Src/main.c    ****   arr[2] = ((arrCol[resto][2] * (velocity + 1)) / 255) * MAX_BRIGHT;
 251:Src/main.c    **** }
 252:Src/main.c    **** 
 253:Src/main.c    **** void setVelocity(uint8_t vel)
 254:Src/main.c    **** {
 255:Src/main.c    ****   velocity = vel * 2;
 256:Src/main.c    **** }
 257:Src/main.c    **** 
 258:Src/main.c    **** void setNote(int nt)
 259:Src/main.c    **** {
 260:Src/main.c    ****   resto = nt % MIDI_OCTAVE;
 261:Src/main.c    ****   uint8_t res = nt / MIDI_OCTAVE;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 6


 262:Src/main.c    ****   char resStr[1];
 263:Src/main.c    ****   sprintf(resStr, "%1d", res);
 264:Src/main.c    ****   //strcpy(note.octave,resStr);
 265:Src/main.c    ****   switch (resto)
 266:Src/main.c    ****   {
 267:Src/main.c    ****   case MIDI_C0:
 268:Src/main.c    ****     strcpy(note.symbol, "C");
 269:Src/main.c    ****     break;
 270:Src/main.c    ****   case MIDI_C0 + MIDI_SHARP:
 271:Src/main.c    ****     strcpy(note.symbol, "C#");
 272:Src/main.c    ****     break;
 273:Src/main.c    ****   case MIDI_D0:
 274:Src/main.c    ****     strcpy(note.symbol, "D");
 275:Src/main.c    ****     break;
 276:Src/main.c    ****   case MIDI_E0 + MIDI_FLAT:
 277:Src/main.c    ****     strcpy(note.symbol, "Eb");
 278:Src/main.c    ****     break;
 279:Src/main.c    ****   case MIDI_E0:
 280:Src/main.c    ****     strcpy(note.symbol, "E");
 281:Src/main.c    ****     break;
 282:Src/main.c    ****   case MIDI_F0:
 283:Src/main.c    ****     strcpy(note.symbol, "F");
 284:Src/main.c    ****     break;
 285:Src/main.c    ****   case MIDI_F0 + MIDI_SHARP:
 286:Src/main.c    ****     strcpy(note.symbol, "F#");
 287:Src/main.c    ****     break;
 288:Src/main.c    ****   case MIDI_G0:
 289:Src/main.c    ****     strcpy(note.symbol, "G");
 290:Src/main.c    ****     break;
 291:Src/main.c    ****   case MIDI_A0 + MIDI_FLAT:
 292:Src/main.c    ****     strcpy(note.symbol, "Ab");
 293:Src/main.c    ****     break;
 294:Src/main.c    ****   case MIDI_A0:
 295:Src/main.c    ****     strcpy(note.symbol, "A");
 296:Src/main.c    ****     break;
 297:Src/main.c    ****   case MIDI_B0 + MIDI_FLAT:
 298:Src/main.c    ****     strcpy(note.symbol, "Bb");
 299:Src/main.c    ****     break;
 300:Src/main.c    ****   case MIDI_B0:
 301:Src/main.c    ****     strcpy(note.symbol, "B");
 302:Src/main.c    ****     break;
 303:Src/main.c    ****   }
 304:Src/main.c    **** 
 305:Src/main.c    ****   arr[0] = arrCol[resto][0];
 306:Src/main.c    ****   arr[1] = arrCol[resto][1];
 307:Src/main.c    ****   arr[2] = arrCol[resto][2];
 308:Src/main.c    **** }
 309:Src/main.c    **** 
 310:Src/main.c    **** void WS2812_framedata_setPixel(uint8_t row, uint16_t column, uint8_t red, uint8_t green, uint8_t bl
 311:Src/main.c    **** {
 312:Src/main.c    ****   uint8_t i;
 313:Src/main.c    ****   for (i = 0; i < 8; i++)
 314:Src/main.c    ****   {
 315:Src/main.c    ****     // clear the data for pixel
 316:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + i)] &= ~(0x01 << row);
 317:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] &= ~(0x01 << row);
 318:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] &= ~(0x01 << row);
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 7


 319:Src/main.c    ****     // write new data for pixel
 320:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + i)] |= ((((green << i) & 0x80) >> 7) << row);
 321:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] |= ((((red << i) & 0x80) >> 7) << row);
 322:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] |= ((((blue << i) & 0x80) >> 7) << row);
 323:Src/main.c    ****   }
 324:Src/main.c    **** }
 325:Src/main.c    **** 
 326:Src/main.c    **** /* void WS2812_framedata_setPixel(uint8_t row, uint16_t column, uint8_t red, uint8_t green, uint8_t
 327:Src/main.c    **** {
 328:Src/main.c    ****   uint8_t i;
 329:Src/main.c    ****   for (i = 0; i < 8; i++)
 330:Src/main.c    ****   {
 331:Src/main.c    ****     // write new data for pixel
 332:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + i)] = 0;
 333:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] = 0;
 334:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] = 0b1111111;
 335:Src/main.c    ****   }
 336:Src/main.c    **** } */
 337:Src/main.c    **** 
 338:Src/main.c    **** void WS2812_framedata_setRow(uint8_t row, uint16_t columns, uint8_t red, uint8_t green, uint8_t blu
 339:Src/main.c    **** {
 340:Src/main.c    ****   uint8_t i;
 341:Src/main.c    ****   for (i = 0; i < columns; i++)
 342:Src/main.c    ****   {
 343:Src/main.c    ****     WS2812_framedata_setPixel(row, i, red, green, blue);
 344:Src/main.c    ****   }
 345:Src/main.c    **** }
 346:Src/main.c    **** 
 347:Src/main.c    **** void move(int8_t newX, int8_t newY)
 348:Src/main.c    **** {
 349:Src/main.c    ****   uint8_t tempVector[NLEDS][3];
 350:Src/main.c    ****   uint8_t tempX, tempY;
 351:Src/main.c    ****   for (int y = 0; y < NCOLS; y++)
 352:Src/main.c    ****   {
 353:Src/main.c    ****     for (int x = 0; x < NCOLS; x++)
 354:Src/main.c    ****     {
 355:Src/main.c    ****       for (int z = 0; z < 3; z++)
 356:Src/main.c    ****       {
 357:Src/main.c    ****         tempVector[x + (y * NCOLS)][z] = effect[x + (y * NCOLS)][z];
 358:Src/main.c    ****       }
 359:Src/main.c    ****     }
 360:Src/main.c    ****   }
 361:Src/main.c    **** 
 362:Src/main.c    ****   for (int y = 0; y < NCOLS; y++)
 363:Src/main.c    ****   {
 364:Src/main.c    ****     if ((y - newY) < 0)
 365:Src/main.c    ****     {
 366:Src/main.c    ****       tempY = NCOLS - (-y + newY);
 367:Src/main.c    ****     }
 368:Src/main.c    ****     else if ((y - newY) >= NCOLS)
 369:Src/main.c    ****     {
 370:Src/main.c    ****       tempY = (y - newY) - NCOLS;
 371:Src/main.c    ****     }
 372:Src/main.c    ****     else
 373:Src/main.c    ****       tempY = y - newY;
 374:Src/main.c    **** 
 375:Src/main.c    ****     for (int x = 0; x < NCOLS; x++)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 8


 376:Src/main.c    ****     {
 377:Src/main.c    ****       if ((x - newX) < 0)
 378:Src/main.c    ****       {
 379:Src/main.c    ****         tempX = NCOLS - (-x + newX);
 380:Src/main.c    ****       }
 381:Src/main.c    ****       else if ((x - newX) >= NCOLS)
 382:Src/main.c    ****       {
 383:Src/main.c    ****         tempX = (x - newX) - NCOLS;
 384:Src/main.c    ****       }
 385:Src/main.c    ****       else
 386:Src/main.c    ****         tempX = x - newX;
 387:Src/main.c    **** 
 388:Src/main.c    ****       for (int z = 0; z < 3; z++)
 389:Src/main.c    ****       {
 390:Src/main.c    ****         effect[x + (y * NCOLS)][z] = tempVector[tempX + (tempY * NCOLS)][z];
 391:Src/main.c    ****       }
 392:Src/main.c    ****     }
 393:Src/main.c    ****   }
 394:Src/main.c    **** }
 395:Src/main.c    **** 
 396:Src/main.c    **** void clearFramebuffer()
 397:Src/main.c    **** {
 398:Src/main.c    ****   for (uint8_t i = 0; i < NCHANNELS; i++)
 399:Src/main.c    ****   {
 400:Src/main.c    ****     for (uint8_t j = 0; j < NLINESCH; j++)
 401:Src/main.c    ****     {
 402:Src/main.c    ****       for (uint16_t x = 0; x < NCOLS; x++)
 403:Src/main.c    ****       {
 404:Src/main.c    ****         if ((x + (j * NCOLS) + (i * NLEDSCH)) > NLEDS - 2)
 405:Src/main.c    ****           break;
 406:Src/main.c    ****         WS2812_framedata_setPixel(i, x + (j * NCOLS), arrCol[12][0], arrCol[12][1], arrCol[12][2]);
 407:Src/main.c    ****       }
 408:Src/main.c    ****     }
 409:Src/main.c    ****   }
 410:Src/main.c    **** }
 411:Src/main.c    **** 
 412:Src/main.c    **** void fillFramebuffer()
 413:Src/main.c    **** {
 414:Src/main.c    ****   uint8_t mod, z, tempLine[NCOLS][3];
 415:Src/main.c    ****   for (uint8_t i = 0; i < NCHANNELS; i++)
 416:Src/main.c    ****   {
 417:Src/main.c    ****     for (uint8_t j = 0; j < NLINESCH; j++)
 418:Src/main.c    ****     {
 419:Src/main.c    ****       mod = j % 2;
 420:Src/main.c    ****       for (uint16_t x = 0; x < NCOLS; x++)
 421:Src/main.c    ****       {
 422:Src/main.c    ****         if ((x + (j * NCOLS) + (i * NLEDSCH)) > NLEDS)
 423:Src/main.c    ****           break;
 424:Src/main.c    ****         if (mod == 0)
 425:Src/main.c    ****         {
 426:Src/main.c    ****           for (z = 0; z < 3; z++)
 427:Src/main.c    ****           {
 428:Src/main.c    ****             tempLine[x][z] = effect[x + (j * NCOLS) + (i * NLEDSCH)][z];
 429:Src/main.c    ****           }
 430:Src/main.c    ****         }
 431:Src/main.c    ****         else
 432:Src/main.c    ****         {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 9


 433:Src/main.c    ****           for (z = 0; z < 3; z++)
 434:Src/main.c    ****           {
 435:Src/main.c    ****             tempLine[x][z] = effect[NCOLSL - x + (j * NCOLS) + (i * NLEDSCH)][z];
 436:Src/main.c    ****           }
 437:Src/main.c    ****         }
 438:Src/main.c    ****         WS2812_framedata_setPixel(i, x + (j * NCOLS), tempLine[x][0], tempLine[x][1], tempLine[x][2
 439:Src/main.c    ****       }
 440:Src/main.c    ****     }
 441:Src/main.c    ****   }
 442:Src/main.c    **** }
 443:Src/main.c    **** 
 444:Src/main.c    **** void WS2812_sendbuf(uint32_t buffersize)
 445:Src/main.c    **** {
 446:Src/main.c    ****   // transmission complete flag, indicate that transmission is taking place
 447:Src/main.c    ****   WS2812_TC = 0;
 448:Src/main.c    **** 
 449:Src/main.c    ****   // clear all relevant DMA flags
 450:Src/main.c    ****   LL_DMA_ClearFlag_TE2(DMA1);
 451:Src/main.c    ****   LL_DMA_ClearFlag_TE5(DMA1);
 452:Src/main.c    ****   LL_DMA_ClearFlag_TE7(DMA1);
 453:Src/main.c    ****   // LL_DMA_ClearFlag_GI2(DMA1);
 454:Src/main.c    ****   // LL_DMA_ClearFlag_GI5(DMA1);
 455:Src/main.c    ****   // LL_DMA_ClearFlag_GI7(DMA1);
 456:Src/main.c    **** 
 457:Src/main.c    ****   // configure the number of bytes to be transferred by the DMA controller
 458:Src/main.c    ****   LL_DMA_SetDataLength(DMA1, LL_DMA_CHANNEL_2, buffersize);
 459:Src/main.c    ****   LL_DMA_SetDataLength(DMA1, LL_DMA_CHANNEL_5, buffersize);
 460:Src/main.c    ****   LL_DMA_SetDataLength(DMA1, LL_DMA_CHANNEL_7, buffersize);
 461:Src/main.c    **** 
 462:Src/main.c    ****   // clear all TIM2 flags
 463:Src/main.c    ****   TIM2->SR = 0;
 464:Src/main.c    **** 
 465:Src/main.c    ****   // enable the corresponding DMA channels
 466:Src/main.c    ****   LL_DMA_EnableChannel(DMA1, LL_DMA_CHANNEL_2);
 467:Src/main.c    ****   LL_DMA_EnableChannel(DMA1, LL_DMA_CHANNEL_5);
 468:Src/main.c    ****   LL_DMA_EnableChannel(DMA1, LL_DMA_CHANNEL_7);
 469:Src/main.c    **** 
 470:Src/main.c    ****   // IMPORTANT: enable the TIM2 DMA requests AFTER enabling the DMA channels!
 471:Src/main.c    ****   LL_TIM_EnableDMAReq_CC1(TIM2);
 472:Src/main.c    ****   LL_TIM_EnableDMAReq_CC2(TIM2);
 473:Src/main.c    ****   LL_TIM_EnableDMAReq_UPDATE(TIM2);
 474:Src/main.c    **** 
 475:Src/main.c    ****   // preload counter with 29 so TIM2 generates UEV directly to start DMA transfer
 476:Src/main.c    ****   LL_TIM_SetCounter(TIM2, 29);
 477:Src/main.c    **** 
 478:Src/main.c    ****   // start TIM2
 479:Src/main.c    ****   LL_TIM_EnableCounter(TIM2);
 480:Src/main.c    **** }
 481:Src/main.c    **** 
 482:Src/main.c    **** void drawColor(volatile uint8_t *color)
 483:Src/main.c    **** {
 484:Src/main.c    ****   for (int y = 0; y <= NCOLS; y++)
 485:Src/main.c    ****   {
 486:Src/main.c    ****     for (int x = 0; x <= NCOLS; x++)
 487:Src/main.c    ****     {
 488:Src/main.c    ****       for (int z = 0; z < 3; z++)
 489:Src/main.c    ****       {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 10


 490:Src/main.c    ****         effect[x + (y * NCOLS)][z] = color[z];
 491:Src/main.c    ****       }
 492:Src/main.c    ****     }
 493:Src/main.c    ****   }
 494:Src/main.c    **** }
 495:Src/main.c    **** 
 496:Src/main.c    **** void drawCircle(uint8_t *color_steps)
 497:Src/main.c    **** {
 498:Src/main.c    ****   float z = ((float)NCOLS / 2);
 499:Src/main.c    ****   uint16_t coords = 0;
 500:Src/main.c    ****   uint8_t boarder;
 501:Src/main.c    ****   int16_t temp;
 502:Src/main.c    ****   for (int y = -(NCOLS / 2); y <= (NCOLS / 2); y++)
 503:Src/main.c    ****   {
 504:Src/main.c    ****     for (int x = -(NCOLS / 2); x <= (NCOLS / 2); x++)
 505:Src/main.c    ****     {
 506:Src/main.c    ****       coords = (x + (NCOLS / 2)) + ((y + (NCOLS / 2)) * NCOLS);
 507:Src/main.c    ****       for (int i = 0; i < MAX_DIV; i++)
 508:Src/main.c    ****       {
 509:Src/main.c    ****         boarder = 1;
 510:Src/main.c    ****         float perc = 1 - ((float)i / MAX_DIV);
 511:Src/main.c    ****         // printf("%0.1f\n", perc);
 512:Src/main.c    ****         if ((x * x) + (y * y) <= (z * z) * (perc))
 513:Src/main.c    ****         {
 514:Src/main.c    ****           for (int z = 0; z < 3; z++)
 515:Src/main.c    ****           {
 516:Src/main.c    ****             temp = currColor[z] + i * color_steps[z];
 517:Src/main.c    ****             if (temp < 0)
 518:Src/main.c    ****               temp = 0;
 519:Src/main.c    ****             if (temp > 255)
 520:Src/main.c    ****               temp = 255;
 521:Src/main.c    ****             effect[coords][z] = temp;
 522:Src/main.c    ****           }
 523:Src/main.c    ****           boarder = 0;
 524:Src/main.c    ****         }
 525:Src/main.c    ****       }
 526:Src/main.c    ****       if (boarder)
 527:Src/main.c    ****       {
 528:Src/main.c    ****         if ((x * x) + (y * y) >= (z * z))
 529:Src/main.c    ****         {
 530:Src/main.c    ****           for (int z = 0; z < 3; z++)
 531:Src/main.c    ****           {
 532:Src/main.c    ****             temp = currColor[z] - color_steps[z];
 533:Src/main.c    ****             if (temp < 0)
 534:Src/main.c    ****               temp = 0;
 535:Src/main.c    ****             if (temp > 255)
 536:Src/main.c    ****               temp = 255;
 537:Src/main.c    ****             effect[coords][z] = temp;
 538:Src/main.c    ****           }
 539:Src/main.c    ****         }
 540:Src/main.c    ****       }
 541:Src/main.c    ****     }
 542:Src/main.c    ****   }
 543:Src/main.c    **** }
 544:Src/main.c    **** 
 545:Src/main.c    **** void drawScrollingString(char *frase, uint8_t *background, uint8_t *color, uint16_t interval_ms, ui
 546:Src/main.c    **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 11


 547:Src/main.c    ****   int8_t posX, posY;
 548:Src/main.c    ****   uint8_t fill, val, col, width = 3 + space;
 549:Src/main.c    ****   for (uint8_t i = letter, idx = 0; i < strlen(frase); i++, idx++)
 550:Src/main.c    ****   {
 551:Src/main.c    ****     posX = (idx * width) + offX;
 552:Src/main.c    ****     posY = offY;
 553:Src/main.c    **** 
 554:Src/main.c    ****     for (int8_t y = posY, l = 0; y <= (posY + 5); y++, l++)
 555:Src/main.c    ****     {
 556:Src/main.c    ****       if (y >= (NCOLS - offY))
 557:Src/main.c    ****         break;
 558:Src/main.c    ****       fill = getFontLine(frase[i], l);
 559:Src/main.c    ****       for (int8_t x = posX - pos, aX = 3; x < (posX + width) - pos; x++, aX--)
 560:Src/main.c    ****       {
 561:Src/main.c    ****         if (x >= (NCOLS - offX))
 562:Src/main.c    ****           break;
 563:Src/main.c    ****         if (x >= offX)
 564:Src/main.c    ****         {
 565:Src/main.c    ****           val = fill & (1u << aX) ? 1 : 0;
 566:Src/main.c    ****           for (uint8_t z = 0; z < 3; z++)
 567:Src/main.c    ****           {
 568:Src/main.c    ****             col = val ? color[z] : background[z];
 569:Src/main.c    ****             effect[x + (y * NCOLS)][z] = col;
 570:Src/main.c    ****           }
 571:Src/main.c    ****         }
 572:Src/main.c    ****       }
 573:Src/main.c    ****     }
 574:Src/main.c    ****   }
 575:Src/main.c    ****   fillFramebuffer();
 576:Src/main.c    ****   WS2812_sendbuf(24 * NLEDSCH);
 577:Src/main.c    ****   LL_mDelay(interval_ms);
 578:Src/main.c    ****   clearFramebuffer();
 579:Src/main.c    **** }
 580:Src/main.c    **** 
 581:Src/main.c    **** void drawScrollingLine(char *frase, uint8_t *background, uint8_t *color, uint16_t interval_ms, uint
 582:Src/main.c    **** {
 583:Src/main.c    ****   for (uint8_t i = 0; i < strlen(frase); i++)
 584:Src/main.c    ****   {
 585:Src/main.c    ****     for (uint8_t j = 0; j < 3; j++)
 586:Src/main.c    ****     {
 587:Src/main.c    ****       drawScrollingString(frase, background, color, interval_ms, space, j, i, x, y);
 588:Src/main.c    ****     }
 589:Src/main.c    ****   }
 590:Src/main.c    **** }
 591:Src/main.c    **** 
 592:Src/main.c    **** void drawLetter(char letter, uint8_t *color, uint8_t px, uint8_t py)
 593:Src/main.c    **** {
 594:Src/main.c    ****   uint8_t fill;
 595:Src/main.c    ****   uint8_t val = 0;
 596:Src/main.c    ****   for (uint8_t y = py, l = 0; y <= (py + 5); y++, l++)
 597:Src/main.c    ****   {
 598:Src/main.c    ****     fill = getFontLine(letter, l);
 599:Src/main.c    ****     for (uint8_t x = px, aX = 3; x <= (px + 3); x++, aX--)
 600:Src/main.c    ****     {
 601:Src/main.c    ****       val = fill & (1u << aX) ? 1 : 0;
 602:Src/main.c    ****       if (val)
 603:Src/main.c    ****       {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 12


 604:Src/main.c    ****         for (uint8_t z = 0; z < 3; z++)
 605:Src/main.c    ****         {
 606:Src/main.c    ****           effect[x + (y * NCOLS)][z] = color[z];
 607:Src/main.c    ****         }
 608:Src/main.c    ****       }
 609:Src/main.c    ****     }
 610:Src/main.c    ****   }
 611:Src/main.c    **** }
 612:Src/main.c    **** 
 613:Src/main.c    **** void drawString(char *frase, uint8_t *color, uint8_t px, uint8_t py, uint8_t space)
 614:Src/main.c    **** {
 615:Src/main.c    ****   uint8_t posX, posY, nLine = 0, posI = 0;
 616:Src/main.c    ****   for (size_t i = 0; i < strlen(frase); i++)
 617:Src/main.c    ****   {
 618:Src/main.c    ****     posI = (i * (3 + space)) + px;
 619:Src/main.c    ****     nLine = posI / (NCOLS - 2);
 620:Src/main.c    ****     posY = (nLine * 6) + py;
 621:Src/main.c    ****     posX = posI;
 622:Src/main.c    ****     drawLetter(frase[i], color, posX, posY);
 623:Src/main.c    ****     // posX = (posI - (nLine * (SIZE - 3))) + 1;
 624:Src/main.c    ****   }
 625:Src/main.c    **** }
 626:Src/main.c    **** 
 627:Src/main.c    **** /**
 628:Src/main.c    ****   * @brief  The application entry point.
 629:Src/main.c    ****   * @retval int
 630:Src/main.c    ****   */
 631:Src/main.c    **** int main(void)
 632:Src/main.c    **** {
 633:Src/main.c    ****   /* USER CODE BEGIN 1 */
 634:Src/main.c    **** 
 635:Src/main.c    ****   /* USER CODE END 1 */
 636:Src/main.c    **** 
 637:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 638:Src/main.c    **** 
 639:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 640:Src/main.c    **** 
 641:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_AFIO);
 642:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
 643:Src/main.c    **** 
 644:Src/main.c    ****   NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 645:Src/main.c    **** 
 646:Src/main.c    ****   /* System interrupt init*/
 647:Src/main.c    **** 
 648:Src/main.c    ****   /** DISABLE: JTAG-DP Disabled and SW-DP Disabled 
 649:Src/main.c    ****   */
 650:Src/main.c    ****   LL_GPIO_AF_DisableRemap_SWJ();
 651:Src/main.c    **** 
 652:Src/main.c    ****   /* USER CODE BEGIN Init */
 653:Src/main.c    **** 
 654:Src/main.c    ****   /* USER CODE END Init */
 655:Src/main.c    **** 
 656:Src/main.c    ****   /* Configure the system clock */
 657:Src/main.c    ****   SystemClock_Config();
 658:Src/main.c    **** 
 659:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 660:Src/main.c    **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 13


 661:Src/main.c    ****   /* USER CODE END SysInit */
 662:Src/main.c    **** 
 663:Src/main.c    ****   /* Initialize all configured peripherals */
 664:Src/main.c    ****   MX_GPIO_Init();
 665:Src/main.c    ****   MX_USART3_UART_Init();
 666:Src/main.c    ****   MX_DMA_Init();
 667:Src/main.c    ****   MX_TIM2_Init();
 668:Src/main.c    ****   /* USER CODE BEGIN 2 */
 669:Src/main.c    ****   // uint8_t i = 0;
 670:Src/main.c    ****   // uint8_t color[] = {5, 10, 30};
 671:Src/main.c    ****   uint8_t background[] = {1, 1, 5};
 672:Src/main.c    ****   uint8_t colorLetter[] = {10, 0, 0};
 673:Src/main.c    **** 
 674:Src/main.c    ****   // drawLetter('C', colorLetter, 0, 1);
 675:Src/main.c    ****   // drawLetter('5', colorLetter, 4, 1);
 676:Src/main.c    ****   // drawString("C5", colorLetter, 0, 1, 1);
 677:Src/main.c    ****   clearFramebuffer();
 678:Src/main.c    ****   drawColor(background);
 679:Src/main.c    ****   fillFramebuffer();
 680:Src/main.c    ****   WS2812_sendbuf(24 * NLEDSCH);
 681:Src/main.c    **** 
 682:Src/main.c    ****   drawScrollingLine("Ordem dos Engenheiros Tecnicos", background, colorLetter, 500, 1, 0, 0);
 683:Src/main.c    **** 
 684:Src/main.c    ****   /* Infinite loop */
 685:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 686:Src/main.c    ****   while (1)
 687:Src/main.c    ****   {
 688:Src/main.c    ****     // set two pixels (columns) in the defined row (channel 0) to the
 689:Src/main.c    ****     // color values defined in the colors array
 690:Src/main.c    ****     /* for (i = 0; i < 6; i++)
 691:Src/main.c    ****     {
 692:Src/main.c    ****       // wait until the last frame was transmitted
 693:Src/main.c    ****       while (!WS2812_TC)
 694:Src/main.c    ****         ; 
 695:Src/main.c    ****       // move(1, 0);
 696:Src/main.c    ****       // fillFramebuffer();
 697:Src/main.c    **** 
 698:Src/main.c    ****       // fillFramebufferColor(RGB[i]);
 699:Src/main.c    ****       // WS2812_framedata_setPixel(0, 0, 0xFF, 0, 0);
 700:Src/main.c    ****       // WS2812_framedata_setPixel(0, 1, 0xFF, 0, 0);
 701:Src/main.c    ****       // WS2812_framedata_setPixel(0, 2, 0xFF, 0, 0);
 702:Src/main.c    ****       // WS2812_framedata_setPixel(0, 3, 0xFF, 0, 0);
 703:Src/main.c    ****       // WS2812_framedata_setPixel(0, 4, 0, 0xFF, 0);
 704:Src/main.c    ****       // WS2812_framedata_setPixel(0, 5, 0, 0xFF, 0);
 705:Src/main.c    ****       // WS2812_framedata_setPixel(0, 6, 0, 0xFF, 0);
 706:Src/main.c    ****       // WS2812_framedata_setPixel(0, 7, 0, 0, 0xFF);
 707:Src/main.c    ****       // WS2812_framedata_setPixel(0, 8, 0, 0, 0xFF);
 708:Src/main.c    ****       // WS2812_framedata_setPixel(0, 9, 0, 0, 0xFF);
 709:Src/main.c    ****       // WS2812_framedata_setPixel(0, 1, 0b11111111, 0, 0);
 710:Src/main.c    ****       move(0, 1);
 711:Src/main.c    ****       // drawCircle(color);
 712:Src/main.c    ****       fillFramebuffer();
 713:Src/main.c    ****       WS2812_sendbuf(24 * NLEDSCH);
 714:Src/main.c    ****       //   // wait some amount of time
 715:Src/main.c    ****       LL_mDelay(1000);
 716:Src/main.c    ****     } */
 717:Src/main.c    ****   }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 14


 718:Src/main.c    ****   /* USER CODE END 3 */
 719:Src/main.c    **** }
 720:Src/main.c    **** 
 721:Src/main.c    **** /**
 722:Src/main.c    ****   * @brief System Clock Configuration
 723:Src/main.c    ****   * @retval None
 724:Src/main.c    ****   */
 725:Src/main.c    **** void SystemClock_Config(void)
 726:Src/main.c    **** {
 727:Src/main.c    ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_2);
 728:Src/main.c    **** 
 729:Src/main.c    ****   if (LL_FLASH_GetLatency() != LL_FLASH_LATENCY_2)
 730:Src/main.c    ****   {
 731:Src/main.c    ****     Error_Handler();
 732:Src/main.c    ****   }
 733:Src/main.c    ****   LL_RCC_HSE_Enable();
 734:Src/main.c    **** 
 735:Src/main.c    ****   /* Wait till HSE is ready */
 736:Src/main.c    ****   while (LL_RCC_HSE_IsReady() != 1)
 737:Src/main.c    ****   {
 738:Src/main.c    ****   }
 739:Src/main.c    ****   LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSE_DIV_1, LL_RCC_PLL_MUL_9);
 740:Src/main.c    ****   LL_RCC_PLL_Enable();
 741:Src/main.c    **** 
 742:Src/main.c    ****   /* Wait till PLL is ready */
 743:Src/main.c    ****   while (LL_RCC_PLL_IsReady() != 1)
 744:Src/main.c    ****   {
 745:Src/main.c    ****   }
 746:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 747:Src/main.c    ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_2);
 748:Src/main.c    ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 749:Src/main.c    ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 750:Src/main.c    **** 
 751:Src/main.c    ****   /* Wait till System clock is ready */
 752:Src/main.c    ****   while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL)
 753:Src/main.c    ****   {
 754:Src/main.c    ****   }
 755:Src/main.c    ****   LL_Init1msTick(72000000);
 756:Src/main.c    ****   LL_SYSTICK_SetClkSource(LL_SYSTICK_CLKSOURCE_HCLK);
 757:Src/main.c    ****   LL_SetSystemCoreClock(72000000);
 758:Src/main.c    **** }
 759:Src/main.c    **** 
 760:Src/main.c    **** LL_TIM_InitTypeDef TIM_InitStruct = {0};
 761:Src/main.c    **** LL_TIM_OC_InitTypeDef TIM_OC_InitStruct = {0};
 762:Src/main.c    **** LL_GPIO_InitTypeDef GPIO_InitStruct = {0};
 763:Src/main.c    **** LL_DMA_InitTypeDef DMA_InitStruct = {0};
 764:Src/main.c    **** LL_USART_InitTypeDef USART_InitStruct = {0};
 765:Src/main.c    **** 
 766:Src/main.c    **** static void MX_TIM2_Init(void)
 767:Src/main.c    **** {
 768:Src/main.c    ****   /* Peripheral clock enable */
 769:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM2);
 770:Src/main.c    **** 
 771:Src/main.c    ****   /* TIM2 DMA Init */
 772:Src/main.c    ****   LL_DMA_DeInit(DMA1, LL_DMA_CHANNEL_2);
 773:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcAddress = (uint32_t)&GPIOA->ODR;
 774:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_High;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 15


 775:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 776:Src/main.c    ****   DMA_InitStruct.NbData = 0;
 777:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 778:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_NOINCREMENT;
 779:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 780:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 781:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 782:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 783:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_2, &DMA_InitStruct);
 784:Src/main.c    **** 
 785:Src/main.c    ****   LL_DMA_DeInit(DMA1, LL_DMA_CHANNEL_5);
 786:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcAddress = (uint32_t)&GPIOA->ODR;
 787:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_framedata;
 788:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 789:Src/main.c    ****   DMA_InitStruct.NbData = 0;
 790:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 791:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_INCREMENT;
 792:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 793:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 794:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 795:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 796:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_5, &DMA_InitStruct);
 797:Src/main.c    **** 
 798:Src/main.c    ****   /* TIM2_CH2_CH4 Init */
 799:Src/main.c    ****   LL_DMA_DeInit(DMA1, LL_DMA_CHANNEL_7);
 800:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcAddress = (uint32_t)&GPIOA->ODR;
 801:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_Low;
 802:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 803:Src/main.c    ****   DMA_InitStruct.NbData = 0;
 804:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 805:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_NOINCREMENT;
 806:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 807:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 808:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 809:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 810:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_7, &DMA_InitStruct);
 811:Src/main.c    **** 
 812:Src/main.c    ****   /* TIM2 interrupt Init */
 813:Src/main.c    ****   NVIC_SetPriority(TIM2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
 814:Src/main.c    ****   NVIC_EnableIRQ(TIM2_IRQn);
 815:Src/main.c    **** 
 816:Src/main.c    ****   LL_DMA_EnableIT_TC(DMA1, LL_DMA_CHANNEL_7);
 817:Src/main.c    **** 
 818:Src/main.c    ****   uint16_t PrescalerValue;
 819:Src/main.c    **** 
 820:Src/main.c    ****   PrescalerValue = (uint16_t)(SystemCoreClock / 24000000) - 1;
 821:Src/main.c    ****   /* Time base configuration */
 822:Src/main.c    ****   TIM_InitStruct.Autoreload = 29; // 800kHz
 823:Src/main.c    ****   TIM_InitStruct.Prescaler = PrescalerValue;
 824:Src/main.c    ****   TIM_InitStruct.ClockDivision = 0;
 825:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 826:Src/main.c    ****   LL_TIM_Init(TIM2, &TIM_InitStruct);
 827:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM2);
 828:Src/main.c    **** 
 829:Src/main.c    ****   /* Timing Mode configuration: Channel 1 */
 830:Src/main.c    ****   TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_FROZEN;
 831:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 16


 832:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 8;
 833:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH1, &TIM_OC_InitStruct);
 834:Src/main.c    ****   LL_TIM_OC_DisablePreload(TIM2, LL_TIM_CHANNEL_CH1);
 835:Src/main.c    **** 
 836:Src/main.c    ****   /* Timing Mode configuration: Channel 2 */
 837:Src/main.c    ****   TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_PWM1;
 838:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 839:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 17;
 840:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH2, &TIM_OC_InitStruct);
 841:Src/main.c    ****   LL_TIM_OC_DisablePreload(TIM2, LL_TIM_CHANNEL_CH2);
 842:Src/main.c    **** }
 843:Src/main.c    **** 
 844:Src/main.c    **** /** 
 845:Src/main.c    ****   * Enable DMA controller clock
 846:Src/main.c    ****   */
 847:Src/main.c    **** static void MX_DMA_Init(void)
 848:Src/main.c    **** {
  26              		.loc 1 848 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
 849:Src/main.c    ****   /* Init with LL driver */
 850:Src/main.c    ****   /* DMA controller clock enable */
 851:Src/main.c    ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMA1);
  34              		.loc 1 851 3 view .LVU1
  35              	.LVL0:
  36              	.LBB142:
  37              	.LBI142:
  38              		.file 2 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @file    stm32f1xx_ll_bus.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****     [..]  
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****     [..]  
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @attention
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 17


  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *      without specific prior written permission.
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   ******************************************************************************
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #ifndef __STM32F1xx_LL_BUS_H
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define __STM32F1xx_LL_BUS_H
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #ifdef __cplusplus
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** extern "C" {
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #include "stm32f1xx.h"
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @addtogroup STM32F1xx_LL_Driver
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC)
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC_AHBRSTR_OTGFSRST) || defined(RCC_AHBRSTR_ETHMACRST)
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define RCC_AHBRSTR_SUPPORT
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /* RCC_AHBRSTR_OTGFSRST || RCC_AHBRSTR_ETHMACRST */
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 18


  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(DMA2)
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA2           RCC_AHBENR_DMA2EN
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*DMA2*/
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ETH)
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMAC         RCC_AHBENR_ETHMACEN
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACRX       RCC_AHBENR_ETHMACRXEN
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ETHMACTX       RCC_AHBENR_ETHMACTXEN
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ETH*/
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLITFEN
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(FSMC_Bank1)
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FSMC           RCC_AHBENR_FSMCEN
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*FSMC_Bank1*/
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USB_OTG_FS)
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_OTGFS          RCC_AHBENR_OTGFSEN
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USB_OTG_FS*/
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SDIO)
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SDIO           RCC_AHBENR_SDIOEN
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SDIO*/
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBENR_SRAMEN
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_BKP            RCC_APB1ENR_BKPEN
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CAN1)
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN1           RCC_APB1ENR_CAN1EN
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CAN1*/
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CAN2)
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CAN2           RCC_APB1ENR_CAN2EN
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CAN2*/
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(CEC)
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APB1ENR_CECEN
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*CEC*/
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(DAC)
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*DAC*/
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(I2C2)
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 19


 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*I2C2*/
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SPI2)
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SPI2*/
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(SPI3)
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI3           RCC_APB1ENR_SPI3EN
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*SPI3*/
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM12)
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM12          RCC_APB1ENR_TIM12EN
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM12*/
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM13)
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM13          RCC_APB1ENR_TIM13EN
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM13*/
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM14)
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM14          RCC_APB1ENR_TIM14EN
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM14*/
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM4)
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM4           RCC_APB1ENR_TIM4EN
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM4*/
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM5)
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM5           RCC_APB1ENR_TIM5EN
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM5*/
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM6)
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM6*/
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM7)
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM7*/
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(UART4)
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART4          RCC_APB1ENR_UART4EN
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*UART4*/
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(UART5)
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UART5          RCC_APB1ENR_UART5EN
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*UART5*/
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USART3)
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APB1ENR_USART3EN
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USART3*/
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(USB)
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*USB*/
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ADC2)
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC2           RCC_APB2ENR_ADC2EN
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ADC2*/
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 20


 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(ADC3)
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC3           RCC_APB2ENR_ADC3EN
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*ADC3*/
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_AFIO           RCC_APB2ENR_AFIOEN
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOA          RCC_APB2ENR_IOPAEN
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOB          RCC_APB2ENR_IOPBEN
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOC          RCC_APB2ENR_IOPCEN
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOD          RCC_APB2ENR_IOPDEN
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOE)
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOE          RCC_APB2ENR_IOPEEN
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOE*/
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOF)
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOF          RCC_APB2ENR_IOPFEN
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOF*/
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(GPIOG)
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_GPIOG          RCC_APB2ENR_IOPGEN
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*GPIOG*/
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM10)
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM10          RCC_APB2ENR_TIM10EN
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM10*/
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM11)
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM11          RCC_APB2ENR_TIM11EN
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM11*/
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM15)
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APB2ENR_TIM15EN
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM15*/
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM16)
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APB2ENR_TIM16EN
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM16*/
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM17)
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APB2ENR_TIM17EN
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM17*/
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APB2ENR_TIM1EN
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM8)
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM8           RCC_APB2ENR_TIM8EN
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM8*/
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(TIM9)
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM9           RCC_APB2ENR_TIM9EN
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /*TIM9*/
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 21


 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_EnableClock\n
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_EnableClock\n
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_EnableClock\n
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_EnableClock\n
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_EnableClock\n
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_EnableClock\n
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_EnableClock\n
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_EnableClock\n
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_EnableClock
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
  39              		.loc 2 285 22 view .LVU2
  40              	.LBB143:
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
  41              		.loc 2 287 3 view .LVU3
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
  42              		.loc 2 288 3 view .LVU4
  43 0002 0A4B     		ldr	r3, .L3
  44 0004 5A69     		ldr	r2, [r3, #20]
  45 0006 42F00102 		orr	r2, r2, #1
  46 000a 5A61     		str	r2, [r3, #20]
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
  47              		.loc 2 290 3 view .LVU5
  48              		.loc 2 290 12 is_stmt 0 view .LVU6
  49 000c 5B69     		ldr	r3, [r3, #20]
  50 000e 03F00103 		and	r3, r3, #1
  51              		.loc 2 290 10 view .LVU7
  52 0012 0193     		str	r3, [sp, #4]
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
  53              		.loc 2 291 3 is_stmt 1 view .LVU8
  54 0014 019B     		ldr	r3, [sp, #4]
  55              	.LVL1:
  56              		.loc 2 291 3 is_stmt 0 view .LVU9
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 22


  57              	.LBE143:
  58              	.LBE142:
 852:Src/main.c    **** 
 853:Src/main.c    ****   /* DMA interrupt init */
 854:Src/main.c    ****   /* DMA1_Channel2_IRQn interrupt configuration */
 855:Src/main.c    ****   // NVIC_SetPriority(DMA1_Channel2_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
 856:Src/main.c    ****   // NVIC_EnableIRQ(DMA1_Channel2_IRQn);
 857:Src/main.c    ****   // /* DMA1_Channel5_IRQn interrupt configuration */
 858:Src/main.c    ****   // NVIC_SetPriority(DMA1_Channel5_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
 859:Src/main.c    ****   // NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 860:Src/main.c    ****   /* DMA1_Channel7_IRQn interrupt configuration */
 861:Src/main.c    ****   NVIC_SetPriority(DMA1_Channel7_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
  59              		.loc 1 861 3 is_stmt 1 view .LVU10
  60              	.LBB144:
  61              	.LBI144:
  62              		.file 3 "Drivers/CMSIS/Include/core_cm3.h"
   1:Drivers/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:Drivers/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm3.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm3.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm3.h **** 
   9:Drivers/CMSIS/Include/core_cm3.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm3.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm3.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm3.h ****    *
  21:Drivers/CMSIS/Include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm3.h **** 
  34:Drivers/CMSIS/Include/core_cm3.h **** 
  35:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm3.h **** #endif
  40:Drivers/CMSIS/Include/core_cm3.h **** 
  41:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 23


  42:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm3.h **** 
  44:Drivers/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm3.h **** 
  46:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm3.h **** #endif
  49:Drivers/CMSIS/Include/core_cm3.h **** 
  50:Drivers/CMSIS/Include/core_cm3.h **** /**
  51:Drivers/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm3.h **** 
  54:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm3.h **** 
  57:Drivers/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm3.h **** 
  60:Drivers/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm3.h ****  */
  63:Drivers/CMSIS/Include/core_cm3.h **** 
  64:Drivers/CMSIS/Include/core_cm3.h **** 
  65:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm3.h **** /**
  69:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  70:Drivers/CMSIS/Include/core_cm3.h ****   @{
  71:Drivers/CMSIS/Include/core_cm3.h ****  */
  72:Drivers/CMSIS/Include/core_cm3.h **** 
  73:Drivers/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm3.h **** 
  79:Drivers/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm3.h **** 
  81:Drivers/CMSIS/Include/core_cm3.h **** 
  82:Drivers/CMSIS/Include/core_cm3.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm3.h **** 
  87:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm3.h **** 
  92:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm3.h **** 
  97:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 24


  99:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm3.h **** 
 102:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm3.h **** 
 106:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm3.h **** 
 111:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm3.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm3.h **** 
 117:Drivers/CMSIS/Include/core_cm3.h **** #else
 118:Drivers/CMSIS/Include/core_cm3.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm3.h **** #endif
 120:Drivers/CMSIS/Include/core_cm3.h **** 
 121:Drivers/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
 123:Drivers/CMSIS/Include/core_cm3.h **** */
 124:Drivers/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm3.h **** 
 126:Drivers/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm3.h **** 
 131:Drivers/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm3.h **** 
 136:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
 137:Drivers/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm3.h **** 
 141:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm3.h **** 
 146:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 147:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm3.h **** 
 151:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 25


 156:Drivers/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm3.h **** 
 161:Drivers/CMSIS/Include/core_cm3.h **** #endif
 162:Drivers/CMSIS/Include/core_cm3.h **** 
 163:Drivers/CMSIS/Include/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm3.h **** 
 166:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm3.h **** }
 168:Drivers/CMSIS/Include/core_cm3.h **** #endif
 169:Drivers/CMSIS/Include/core_cm3.h **** 
 170:Drivers/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm3.h **** 
 172:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm3.h **** 
 174:Drivers/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:Drivers/CMSIS/Include/core_cm3.h **** 
 177:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm3.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm3.h **** #endif
 180:Drivers/CMSIS/Include/core_cm3.h **** 
 181:Drivers/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 184:Drivers/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm3.h **** 
 188:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:Drivers/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm3.h **** 
 193:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:Drivers/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm3.h **** 
 198:Drivers/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:Drivers/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:Drivers/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:Drivers/CMSIS/Include/core_cm3.h ****   #endif
 202:Drivers/CMSIS/Include/core_cm3.h **** #endif
 203:Drivers/CMSIS/Include/core_cm3.h **** 
 204:Drivers/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:Drivers/CMSIS/Include/core_cm3.h **** /**
 206:Drivers/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:Drivers/CMSIS/Include/core_cm3.h **** 
 208:Drivers/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:Drivers/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:Drivers/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:Drivers/CMSIS/Include/core_cm3.h **** */
 212:Drivers/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 26


 213:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:Drivers/CMSIS/Include/core_cm3.h **** #else
 215:Drivers/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:Drivers/CMSIS/Include/core_cm3.h **** #endif
 217:Drivers/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:Drivers/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:Drivers/CMSIS/Include/core_cm3.h **** 
 220:Drivers/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 221:Drivers/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:Drivers/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:Drivers/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:Drivers/CMSIS/Include/core_cm3.h **** 
 225:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:Drivers/CMSIS/Include/core_cm3.h **** 
 227:Drivers/CMSIS/Include/core_cm3.h **** 
 228:Drivers/CMSIS/Include/core_cm3.h **** 
 229:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 230:Drivers/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 231:Drivers/CMSIS/Include/core_cm3.h ****   Core Register contain:
 232:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register
 233:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 234:Drivers/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 235:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 236:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 237:Drivers/CMSIS/Include/core_cm3.h ****   - Core MPU Register
 238:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 239:Drivers/CMSIS/Include/core_cm3.h **** /**
 240:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:Drivers/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:Drivers/CMSIS/Include/core_cm3.h **** */
 243:Drivers/CMSIS/Include/core_cm3.h **** 
 244:Drivers/CMSIS/Include/core_cm3.h **** /**
 245:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 248:Drivers/CMSIS/Include/core_cm3.h ****   @{
 249:Drivers/CMSIS/Include/core_cm3.h ****  */
 250:Drivers/CMSIS/Include/core_cm3.h **** 
 251:Drivers/CMSIS/Include/core_cm3.h **** /**
 252:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:Drivers/CMSIS/Include/core_cm3.h ****  */
 254:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 255:Drivers/CMSIS/Include/core_cm3.h **** {
 256:Drivers/CMSIS/Include/core_cm3.h ****   struct
 257:Drivers/CMSIS/Include/core_cm3.h ****   {
 258:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:Drivers/CMSIS/Include/core_cm3.h **** } APSR_Type;
 267:Drivers/CMSIS/Include/core_cm3.h **** 
 268:Drivers/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 269:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 27


 270:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:Drivers/CMSIS/Include/core_cm3.h **** 
 272:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:Drivers/CMSIS/Include/core_cm3.h **** 
 275:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm3.h **** 
 278:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm3.h **** 
 281:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm3.h **** 
 284:Drivers/CMSIS/Include/core_cm3.h **** 
 285:Drivers/CMSIS/Include/core_cm3.h **** /**
 286:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:Drivers/CMSIS/Include/core_cm3.h ****  */
 288:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 289:Drivers/CMSIS/Include/core_cm3.h **** {
 290:Drivers/CMSIS/Include/core_cm3.h ****   struct
 291:Drivers/CMSIS/Include/core_cm3.h ****   {
 292:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:Drivers/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 297:Drivers/CMSIS/Include/core_cm3.h **** 
 298:Drivers/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 299:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:Drivers/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:Drivers/CMSIS/Include/core_cm3.h **** 
 302:Drivers/CMSIS/Include/core_cm3.h **** 
 303:Drivers/CMSIS/Include/core_cm3.h **** /**
 304:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:Drivers/CMSIS/Include/core_cm3.h ****  */
 306:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 307:Drivers/CMSIS/Include/core_cm3.h **** {
 308:Drivers/CMSIS/Include/core_cm3.h ****   struct
 309:Drivers/CMSIS/Include/core_cm3.h ****   {
 310:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 322:Drivers/CMSIS/Include/core_cm3.h **** 
 323:Drivers/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 28


 327:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:Drivers/CMSIS/Include/core_cm3.h **** 
 330:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:Drivers/CMSIS/Include/core_cm3.h **** 
 333:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:Drivers/CMSIS/Include/core_cm3.h **** 
 336:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm3.h **** 
 339:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm3.h **** 
 342:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm3.h **** 
 345:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:Drivers/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm3.h **** 
 348:Drivers/CMSIS/Include/core_cm3.h **** 
 349:Drivers/CMSIS/Include/core_cm3.h **** /**
 350:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:Drivers/CMSIS/Include/core_cm3.h ****  */
 352:Drivers/CMSIS/Include/core_cm3.h **** typedef union
 353:Drivers/CMSIS/Include/core_cm3.h **** {
 354:Drivers/CMSIS/Include/core_cm3.h ****   struct
 355:Drivers/CMSIS/Include/core_cm3.h ****   {
 356:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:Drivers/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:Drivers/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:Drivers/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 362:Drivers/CMSIS/Include/core_cm3.h **** 
 363:Drivers/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 364:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:Drivers/CMSIS/Include/core_cm3.h **** 
 367:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:Drivers/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:Drivers/CMSIS/Include/core_cm3.h **** 
 370:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:Drivers/CMSIS/Include/core_cm3.h **** 
 372:Drivers/CMSIS/Include/core_cm3.h **** 
 373:Drivers/CMSIS/Include/core_cm3.h **** /**
 374:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:Drivers/CMSIS/Include/core_cm3.h ****   @{
 378:Drivers/CMSIS/Include/core_cm3.h ****  */
 379:Drivers/CMSIS/Include/core_cm3.h **** 
 380:Drivers/CMSIS/Include/core_cm3.h **** /**
 381:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:Drivers/CMSIS/Include/core_cm3.h ****  */
 383:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 29


 384:Drivers/CMSIS/Include/core_cm3.h **** {
 385:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:Drivers/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 399:Drivers/CMSIS/Include/core_cm3.h **** 
 400:Drivers/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:Drivers/CMSIS/Include/core_cm3.h **** 
 404:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:Drivers/CMSIS/Include/core_cm3.h **** 
 406:Drivers/CMSIS/Include/core_cm3.h **** 
 407:Drivers/CMSIS/Include/core_cm3.h **** /**
 408:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:Drivers/CMSIS/Include/core_cm3.h ****   @{
 412:Drivers/CMSIS/Include/core_cm3.h ****  */
 413:Drivers/CMSIS/Include/core_cm3.h **** 
 414:Drivers/CMSIS/Include/core_cm3.h **** /**
 415:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:Drivers/CMSIS/Include/core_cm3.h ****  */
 417:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 418:Drivers/CMSIS/Include/core_cm3.h **** {
 419:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:Drivers/CMSIS/Include/core_cm3.h **** } SCB_Type;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 30


 441:Drivers/CMSIS/Include/core_cm3.h **** 
 442:Drivers/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm3.h **** 
 446:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:Drivers/CMSIS/Include/core_cm3.h **** 
 449:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm3.h **** 
 452:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm3.h **** 
 455:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm3.h **** 
 458:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:Drivers/CMSIS/Include/core_cm3.h **** 
 462:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:Drivers/CMSIS/Include/core_cm3.h **** 
 465:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm3.h **** 
 468:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm3.h **** 
 471:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm3.h **** 
 474:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm3.h **** 
 477:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm3.h **** 
 480:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm3.h **** 
 483:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm3.h **** 
 486:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm3.h **** 
 489:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:Drivers/CMSIS/Include/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm3.h **** 
 494:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm3.h **** #else
 497:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 31


 498:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm3.h **** #endif
 500:Drivers/CMSIS/Include/core_cm3.h **** 
 501:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm3.h **** 
 505:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm3.h **** 
 508:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm3.h **** 
 511:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm3.h **** 
 514:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm3.h **** 
 517:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm3.h **** 
 520:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm3.h **** 
 523:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 524:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm3.h **** 
 527:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm3.h **** 
 530:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm3.h **** 
 533:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm3.h **** 
 537:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm3.h **** 
 540:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm3.h **** 
 543:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm3.h **** 
 546:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm3.h **** 
 549:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm3.h **** 
 552:Drivers/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 32


 555:Drivers/CMSIS/Include/core_cm3.h **** 
 556:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm3.h **** 
 559:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm3.h **** 
 562:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm3.h **** 
 565:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm3.h **** 
 568:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm3.h **** 
 571:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm3.h **** 
 574:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm3.h **** 
 577:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm3.h **** 
 580:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm3.h **** 
 583:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm3.h **** 
 586:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm3.h **** 
 589:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm3.h **** 
 592:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm3.h **** 
 595:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm3.h **** 
 599:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm3.h **** 
 602:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm3.h **** 
 605:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm3.h **** 
 609:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 33


 612:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm3.h **** 
 615:Drivers/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm3.h **** 
 619:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm3.h **** 
 622:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm3.h **** 
 625:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm3.h **** 
 628:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm3.h **** 
 631:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:Drivers/CMSIS/Include/core_cm3.h **** 
 633:Drivers/CMSIS/Include/core_cm3.h **** 
 634:Drivers/CMSIS/Include/core_cm3.h **** /**
 635:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:Drivers/CMSIS/Include/core_cm3.h ****   @{
 639:Drivers/CMSIS/Include/core_cm3.h ****  */
 640:Drivers/CMSIS/Include/core_cm3.h **** 
 641:Drivers/CMSIS/Include/core_cm3.h **** /**
 642:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:Drivers/CMSIS/Include/core_cm3.h ****  */
 644:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 645:Drivers/CMSIS/Include/core_cm3.h **** {
 646:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:Drivers/CMSIS/Include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:Drivers/CMSIS/Include/core_cm3.h **** #else
 651:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:Drivers/CMSIS/Include/core_cm3.h **** #endif
 653:Drivers/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 654:Drivers/CMSIS/Include/core_cm3.h **** 
 655:Drivers/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:Drivers/CMSIS/Include/core_cm3.h **** 
 659:Drivers/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:Drivers/CMSIS/Include/core_cm3.h **** 
 661:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:Drivers/CMSIS/Include/core_cm3.h **** 
 664:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:Drivers/CMSIS/Include/core_cm3.h **** 
 667:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 34


 669:Drivers/CMSIS/Include/core_cm3.h **** 
 670:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:Drivers/CMSIS/Include/core_cm3.h **** 
 672:Drivers/CMSIS/Include/core_cm3.h **** 
 673:Drivers/CMSIS/Include/core_cm3.h **** /**
 674:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:Drivers/CMSIS/Include/core_cm3.h ****   @{
 678:Drivers/CMSIS/Include/core_cm3.h ****  */
 679:Drivers/CMSIS/Include/core_cm3.h **** 
 680:Drivers/CMSIS/Include/core_cm3.h **** /**
 681:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:Drivers/CMSIS/Include/core_cm3.h ****  */
 683:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 684:Drivers/CMSIS/Include/core_cm3.h **** {
 685:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:Drivers/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 690:Drivers/CMSIS/Include/core_cm3.h **** 
 691:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:Drivers/CMSIS/Include/core_cm3.h **** 
 695:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:Drivers/CMSIS/Include/core_cm3.h **** 
 698:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:Drivers/CMSIS/Include/core_cm3.h **** 
 701:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:Drivers/CMSIS/Include/core_cm3.h **** 
 704:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:Drivers/CMSIS/Include/core_cm3.h **** 
 708:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 709:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:Drivers/CMSIS/Include/core_cm3.h **** 
 712:Drivers/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:Drivers/CMSIS/Include/core_cm3.h **** 
 716:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:Drivers/CMSIS/Include/core_cm3.h **** 
 719:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:Drivers/CMSIS/Include/core_cm3.h **** 
 722:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:Drivers/CMSIS/Include/core_cm3.h **** 
 724:Drivers/CMSIS/Include/core_cm3.h **** 
 725:Drivers/CMSIS/Include/core_cm3.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 35


 726:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:Drivers/CMSIS/Include/core_cm3.h ****   @{
 730:Drivers/CMSIS/Include/core_cm3.h ****  */
 731:Drivers/CMSIS/Include/core_cm3.h **** 
 732:Drivers/CMSIS/Include/core_cm3.h **** /**
 733:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:Drivers/CMSIS/Include/core_cm3.h ****  */
 735:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 736:Drivers/CMSIS/Include/core_cm3.h **** {
 737:Drivers/CMSIS/Include/core_cm3.h ****   __OM  union
 738:Drivers/CMSIS/Include/core_cm3.h ****   {
 739:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:Drivers/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:Drivers/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:Drivers/CMSIS/Include/core_cm3.h **** } ITM_Type;
 770:Drivers/CMSIS/Include/core_cm3.h **** 
 771:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:Drivers/CMSIS/Include/core_cm3.h **** 
 775:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:Drivers/CMSIS/Include/core_cm3.h **** 
 779:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:Drivers/CMSIS/Include/core_cm3.h **** 
 782:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 36


 783:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:Drivers/CMSIS/Include/core_cm3.h **** 
 785:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:Drivers/CMSIS/Include/core_cm3.h **** 
 788:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:Drivers/CMSIS/Include/core_cm3.h **** 
 791:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:Drivers/CMSIS/Include/core_cm3.h **** 
 794:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:Drivers/CMSIS/Include/core_cm3.h **** 
 797:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:Drivers/CMSIS/Include/core_cm3.h **** 
 800:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:Drivers/CMSIS/Include/core_cm3.h **** 
 803:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:Drivers/CMSIS/Include/core_cm3.h **** 
 807:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm3.h **** 
 811:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:Drivers/CMSIS/Include/core_cm3.h **** 
 815:Drivers/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:Drivers/CMSIS/Include/core_cm3.h **** 
 819:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:Drivers/CMSIS/Include/core_cm3.h **** 
 822:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm3.h **** 
 825:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:Drivers/CMSIS/Include/core_cm3.h **** 
 827:Drivers/CMSIS/Include/core_cm3.h **** 
 828:Drivers/CMSIS/Include/core_cm3.h **** /**
 829:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:Drivers/CMSIS/Include/core_cm3.h ****   @{
 833:Drivers/CMSIS/Include/core_cm3.h ****  */
 834:Drivers/CMSIS/Include/core_cm3.h **** 
 835:Drivers/CMSIS/Include/core_cm3.h **** /**
 836:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:Drivers/CMSIS/Include/core_cm3.h ****  */
 838:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 839:Drivers/CMSIS/Include/core_cm3.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 37


 840:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:Drivers/CMSIS/Include/core_cm3.h **** } DWT_Type;
 864:Drivers/CMSIS/Include/core_cm3.h **** 
 865:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 866:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:Drivers/CMSIS/Include/core_cm3.h **** 
 869:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:Drivers/CMSIS/Include/core_cm3.h **** 
 872:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:Drivers/CMSIS/Include/core_cm3.h **** 
 875:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:Drivers/CMSIS/Include/core_cm3.h **** 
 878:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:Drivers/CMSIS/Include/core_cm3.h **** 
 881:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:Drivers/CMSIS/Include/core_cm3.h **** 
 884:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:Drivers/CMSIS/Include/core_cm3.h **** 
 887:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:Drivers/CMSIS/Include/core_cm3.h **** 
 890:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:Drivers/CMSIS/Include/core_cm3.h **** 
 893:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:Drivers/CMSIS/Include/core_cm3.h **** 
 896:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 38


 897:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:Drivers/CMSIS/Include/core_cm3.h **** 
 899:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:Drivers/CMSIS/Include/core_cm3.h **** 
 902:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:Drivers/CMSIS/Include/core_cm3.h **** 
 905:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:Drivers/CMSIS/Include/core_cm3.h **** 
 908:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:Drivers/CMSIS/Include/core_cm3.h **** 
 911:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:Drivers/CMSIS/Include/core_cm3.h **** 
 914:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:Drivers/CMSIS/Include/core_cm3.h **** 
 917:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:Drivers/CMSIS/Include/core_cm3.h **** 
 920:Drivers/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:Drivers/CMSIS/Include/core_cm3.h **** 
 924:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:Drivers/CMSIS/Include/core_cm3.h **** 
 928:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:Drivers/CMSIS/Include/core_cm3.h **** 
 932:Drivers/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:Drivers/CMSIS/Include/core_cm3.h **** 
 936:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:Drivers/CMSIS/Include/core_cm3.h **** 
 940:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:Drivers/CMSIS/Include/core_cm3.h **** 
 944:Drivers/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:Drivers/CMSIS/Include/core_cm3.h **** 
 948:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:Drivers/CMSIS/Include/core_cm3.h **** 
 951:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 39


 954:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:Drivers/CMSIS/Include/core_cm3.h **** 
 957:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:Drivers/CMSIS/Include/core_cm3.h **** 
 960:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:Drivers/CMSIS/Include/core_cm3.h **** 
 963:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:Drivers/CMSIS/Include/core_cm3.h **** 
 966:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:Drivers/CMSIS/Include/core_cm3.h **** 
 969:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:Drivers/CMSIS/Include/core_cm3.h **** 
 972:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:Drivers/CMSIS/Include/core_cm3.h **** 
 974:Drivers/CMSIS/Include/core_cm3.h **** 
 975:Drivers/CMSIS/Include/core_cm3.h **** /**
 976:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:Drivers/CMSIS/Include/core_cm3.h ****   @{
 980:Drivers/CMSIS/Include/core_cm3.h ****  */
 981:Drivers/CMSIS/Include/core_cm3.h **** 
 982:Drivers/CMSIS/Include/core_cm3.h **** /**
 983:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:Drivers/CMSIS/Include/core_cm3.h ****  */
 985:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
 986:Drivers/CMSIS/Include/core_cm3.h **** {
 987:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:Drivers/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 40


1011:Drivers/CMSIS/Include/core_cm3.h **** } TPI_Type;
1012:Drivers/CMSIS/Include/core_cm3.h **** 
1013:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:Drivers/CMSIS/Include/core_cm3.h **** 
1017:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:Drivers/CMSIS/Include/core_cm3.h **** 
1021:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:Drivers/CMSIS/Include/core_cm3.h **** 
1025:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:Drivers/CMSIS/Include/core_cm3.h **** 
1028:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:Drivers/CMSIS/Include/core_cm3.h **** 
1031:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:Drivers/CMSIS/Include/core_cm3.h **** 
1034:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:Drivers/CMSIS/Include/core_cm3.h **** 
1038:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:Drivers/CMSIS/Include/core_cm3.h **** 
1041:Drivers/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:Drivers/CMSIS/Include/core_cm3.h **** 
1045:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:Drivers/CMSIS/Include/core_cm3.h **** 
1049:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:Drivers/CMSIS/Include/core_cm3.h **** 
1052:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:Drivers/CMSIS/Include/core_cm3.h **** 
1055:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:Drivers/CMSIS/Include/core_cm3.h **** 
1058:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:Drivers/CMSIS/Include/core_cm3.h **** 
1061:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:Drivers/CMSIS/Include/core_cm3.h **** 
1064:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:Drivers/CMSIS/Include/core_cm3.h **** 
1067:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 41


1068:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:Drivers/CMSIS/Include/core_cm3.h **** 
1071:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm3.h **** 
1075:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm3.h **** 
1078:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:Drivers/CMSIS/Include/core_cm3.h **** 
1081:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:Drivers/CMSIS/Include/core_cm3.h **** 
1084:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:Drivers/CMSIS/Include/core_cm3.h **** 
1087:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:Drivers/CMSIS/Include/core_cm3.h **** 
1090:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:Drivers/CMSIS/Include/core_cm3.h **** 
1093:Drivers/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:Drivers/CMSIS/Include/core_cm3.h **** 
1097:Drivers/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:Drivers/CMSIS/Include/core_cm3.h **** 
1101:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:Drivers/CMSIS/Include/core_cm3.h **** 
1105:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:Drivers/CMSIS/Include/core_cm3.h **** 
1108:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:Drivers/CMSIS/Include/core_cm3.h **** 
1111:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:Drivers/CMSIS/Include/core_cm3.h **** 
1114:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:Drivers/CMSIS/Include/core_cm3.h **** 
1117:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:Drivers/CMSIS/Include/core_cm3.h **** 
1120:Drivers/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm3.h **** 
1124:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 42


1125:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm3.h **** 
1127:Drivers/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:Drivers/CMSIS/Include/core_cm3.h **** 
1129:Drivers/CMSIS/Include/core_cm3.h **** 
1130:Drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:Drivers/CMSIS/Include/core_cm3.h **** /**
1132:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:Drivers/CMSIS/Include/core_cm3.h ****   @{
1136:Drivers/CMSIS/Include/core_cm3.h ****  */
1137:Drivers/CMSIS/Include/core_cm3.h **** 
1138:Drivers/CMSIS/Include/core_cm3.h **** /**
1139:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:Drivers/CMSIS/Include/core_cm3.h ****  */
1141:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1142:Drivers/CMSIS/Include/core_cm3.h **** {
1143:Drivers/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:Drivers/CMSIS/Include/core_cm3.h **** } MPU_Type;
1155:Drivers/CMSIS/Include/core_cm3.h **** 
1156:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1157:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:Drivers/CMSIS/Include/core_cm3.h **** 
1160:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:Drivers/CMSIS/Include/core_cm3.h **** 
1163:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:Drivers/CMSIS/Include/core_cm3.h **** 
1166:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1167:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:Drivers/CMSIS/Include/core_cm3.h **** 
1170:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:Drivers/CMSIS/Include/core_cm3.h **** 
1173:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:Drivers/CMSIS/Include/core_cm3.h **** 
1176:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:Drivers/CMSIS/Include/core_cm3.h **** 
1180:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 43


1182:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm3.h **** 
1184:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:Drivers/CMSIS/Include/core_cm3.h **** 
1187:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:Drivers/CMSIS/Include/core_cm3.h **** 
1190:Drivers/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:Drivers/CMSIS/Include/core_cm3.h **** 
1194:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:Drivers/CMSIS/Include/core_cm3.h **** 
1197:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:Drivers/CMSIS/Include/core_cm3.h **** 
1200:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:Drivers/CMSIS/Include/core_cm3.h **** 
1203:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm3.h **** 
1206:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm3.h **** 
1209:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm3.h **** 
1212:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm3.h **** 
1215:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm3.h **** 
1218:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm3.h **** 
1221:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:Drivers/CMSIS/Include/core_cm3.h **** #endif
1223:Drivers/CMSIS/Include/core_cm3.h **** 
1224:Drivers/CMSIS/Include/core_cm3.h **** 
1225:Drivers/CMSIS/Include/core_cm3.h **** /**
1226:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:Drivers/CMSIS/Include/core_cm3.h ****   @{
1230:Drivers/CMSIS/Include/core_cm3.h ****  */
1231:Drivers/CMSIS/Include/core_cm3.h **** 
1232:Drivers/CMSIS/Include/core_cm3.h **** /**
1233:Drivers/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:Drivers/CMSIS/Include/core_cm3.h ****  */
1235:Drivers/CMSIS/Include/core_cm3.h **** typedef struct
1236:Drivers/CMSIS/Include/core_cm3.h **** {
1237:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:Drivers/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 44


1239:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:Drivers/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:Drivers/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1242:Drivers/CMSIS/Include/core_cm3.h **** 
1243:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:Drivers/CMSIS/Include/core_cm3.h **** 
1247:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:Drivers/CMSIS/Include/core_cm3.h **** 
1250:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:Drivers/CMSIS/Include/core_cm3.h **** 
1253:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:Drivers/CMSIS/Include/core_cm3.h **** 
1256:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:Drivers/CMSIS/Include/core_cm3.h **** 
1259:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:Drivers/CMSIS/Include/core_cm3.h **** 
1262:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:Drivers/CMSIS/Include/core_cm3.h **** 
1265:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:Drivers/CMSIS/Include/core_cm3.h **** 
1268:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:Drivers/CMSIS/Include/core_cm3.h **** 
1271:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:Drivers/CMSIS/Include/core_cm3.h **** 
1274:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:Drivers/CMSIS/Include/core_cm3.h **** 
1277:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:Drivers/CMSIS/Include/core_cm3.h **** 
1280:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:Drivers/CMSIS/Include/core_cm3.h **** 
1284:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:Drivers/CMSIS/Include/core_cm3.h **** 
1287:Drivers/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:Drivers/CMSIS/Include/core_cm3.h **** 
1291:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:Drivers/CMSIS/Include/core_cm3.h **** 
1294:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 45


1296:Drivers/CMSIS/Include/core_cm3.h **** 
1297:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:Drivers/CMSIS/Include/core_cm3.h **** 
1300:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:Drivers/CMSIS/Include/core_cm3.h **** 
1303:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:Drivers/CMSIS/Include/core_cm3.h **** 
1306:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:Drivers/CMSIS/Include/core_cm3.h **** 
1309:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:Drivers/CMSIS/Include/core_cm3.h **** 
1312:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:Drivers/CMSIS/Include/core_cm3.h **** 
1315:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:Drivers/CMSIS/Include/core_cm3.h **** 
1318:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:Drivers/CMSIS/Include/core_cm3.h **** 
1321:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:Drivers/CMSIS/Include/core_cm3.h **** 
1324:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:Drivers/CMSIS/Include/core_cm3.h **** 
1327:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:Drivers/CMSIS/Include/core_cm3.h **** 
1329:Drivers/CMSIS/Include/core_cm3.h **** 
1330:Drivers/CMSIS/Include/core_cm3.h **** /**
1331:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:Drivers/CMSIS/Include/core_cm3.h ****   @{
1335:Drivers/CMSIS/Include/core_cm3.h ****  */
1336:Drivers/CMSIS/Include/core_cm3.h **** 
1337:Drivers/CMSIS/Include/core_cm3.h **** /**
1338:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1342:Drivers/CMSIS/Include/core_cm3.h **** */
1343:Drivers/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:Drivers/CMSIS/Include/core_cm3.h **** 
1345:Drivers/CMSIS/Include/core_cm3.h **** /**
1346:Drivers/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:Drivers/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register.
1349:Drivers/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:Drivers/CMSIS/Include/core_cm3.h **** */
1351:Drivers/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 46


1353:Drivers/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:Drivers/CMSIS/Include/core_cm3.h **** 
1355:Drivers/CMSIS/Include/core_cm3.h **** 
1356:Drivers/CMSIS/Include/core_cm3.h **** /**
1357:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:Drivers/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:Drivers/CMSIS/Include/core_cm3.h ****   @{
1361:Drivers/CMSIS/Include/core_cm3.h ****  */
1362:Drivers/CMSIS/Include/core_cm3.h **** 
1363:Drivers/CMSIS/Include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:Drivers/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:Drivers/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:Drivers/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:Drivers/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:Drivers/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:Drivers/CMSIS/Include/core_cm3.h **** 
1373:Drivers/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:Drivers/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:Drivers/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:Drivers/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:Drivers/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:Drivers/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:Drivers/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:Drivers/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:Drivers/CMSIS/Include/core_cm3.h **** 
1382:Drivers/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:Drivers/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:Drivers/CMSIS/Include/core_cm3.h **** #endif
1386:Drivers/CMSIS/Include/core_cm3.h **** 
1387:Drivers/CMSIS/Include/core_cm3.h **** /*@} */
1388:Drivers/CMSIS/Include/core_cm3.h **** 
1389:Drivers/CMSIS/Include/core_cm3.h **** 
1390:Drivers/CMSIS/Include/core_cm3.h **** 
1391:Drivers/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1392:Drivers/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1393:Drivers/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1394:Drivers/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1395:Drivers/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1396:Drivers/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1397:Drivers/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1398:Drivers/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1399:Drivers/CMSIS/Include/core_cm3.h **** /**
1400:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:Drivers/CMSIS/Include/core_cm3.h **** */
1402:Drivers/CMSIS/Include/core_cm3.h **** 
1403:Drivers/CMSIS/Include/core_cm3.h **** 
1404:Drivers/CMSIS/Include/core_cm3.h **** 
1405:Drivers/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:Drivers/CMSIS/Include/core_cm3.h **** /**
1407:Drivers/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:Drivers/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:Drivers/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 47


1410:Drivers/CMSIS/Include/core_cm3.h ****   @{
1411:Drivers/CMSIS/Include/core_cm3.h ****  */
1412:Drivers/CMSIS/Include/core_cm3.h **** 
1413:Drivers/CMSIS/Include/core_cm3.h **** /**
1414:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1415:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:Drivers/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:Drivers/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1418:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:Drivers/CMSIS/Include/core_cm3.h ****  */
1422:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:Drivers/CMSIS/Include/core_cm3.h **** {
1424:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1425:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:Drivers/CMSIS/Include/core_cm3.h **** 
1427:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:Drivers/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:Drivers/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:Drivers/CMSIS/Include/core_cm3.h **** }
1434:Drivers/CMSIS/Include/core_cm3.h **** 
1435:Drivers/CMSIS/Include/core_cm3.h **** 
1436:Drivers/CMSIS/Include/core_cm3.h **** /**
1437:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1438:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:Drivers/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:Drivers/CMSIS/Include/core_cm3.h ****  */
1441:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
  63              		.loc 3 1441 26 view .LVU11
  64              	.LBB145:
1442:Drivers/CMSIS/Include/core_cm3.h **** {
1443:Drivers/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  65              		.loc 3 1443 3 view .LVU12
  66              		.loc 3 1443 26 is_stmt 0 view .LVU13
  67 0016 064B     		ldr	r3, .L3+4
  68 0018 DB68     		ldr	r3, [r3, #12]
  69              	.LVL2:
  70              		.loc 3 1443 26 view .LVU14
  71              	.LBE145:
  72              	.LBE144:
1444:Drivers/CMSIS/Include/core_cm3.h **** }
1445:Drivers/CMSIS/Include/core_cm3.h **** 
1446:Drivers/CMSIS/Include/core_cm3.h **** 
1447:Drivers/CMSIS/Include/core_cm3.h **** /**
1448:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Enable External Interrupt
1449:Drivers/CMSIS/Include/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:Drivers/CMSIS/Include/core_cm3.h ****  */
1452:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:Drivers/CMSIS/Include/core_cm3.h **** {
1454:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1455:Drivers/CMSIS/Include/core_cm3.h **** }
1456:Drivers/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 48


1457:Drivers/CMSIS/Include/core_cm3.h **** 
1458:Drivers/CMSIS/Include/core_cm3.h **** /**
1459:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Disable External Interrupt
1460:Drivers/CMSIS/Include/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1461:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1462:Drivers/CMSIS/Include/core_cm3.h ****  */
1463:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1464:Drivers/CMSIS/Include/core_cm3.h **** {
1465:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1466:Drivers/CMSIS/Include/core_cm3.h **** }
1467:Drivers/CMSIS/Include/core_cm3.h **** 
1468:Drivers/CMSIS/Include/core_cm3.h **** 
1469:Drivers/CMSIS/Include/core_cm3.h **** /**
1470:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1471:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1472:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1473:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1474:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1475:Drivers/CMSIS/Include/core_cm3.h ****  */
1476:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1477:Drivers/CMSIS/Include/core_cm3.h **** {
1478:Drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1479:Drivers/CMSIS/Include/core_cm3.h **** }
1480:Drivers/CMSIS/Include/core_cm3.h **** 
1481:Drivers/CMSIS/Include/core_cm3.h **** 
1482:Drivers/CMSIS/Include/core_cm3.h **** /**
1483:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1484:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1485:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1486:Drivers/CMSIS/Include/core_cm3.h ****  */
1487:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1488:Drivers/CMSIS/Include/core_cm3.h **** {
1489:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1490:Drivers/CMSIS/Include/core_cm3.h **** }
1491:Drivers/CMSIS/Include/core_cm3.h **** 
1492:Drivers/CMSIS/Include/core_cm3.h **** 
1493:Drivers/CMSIS/Include/core_cm3.h **** /**
1494:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1495:Drivers/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1496:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:Drivers/CMSIS/Include/core_cm3.h ****  */
1498:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1499:Drivers/CMSIS/Include/core_cm3.h **** {
1500:Drivers/CMSIS/Include/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1501:Drivers/CMSIS/Include/core_cm3.h **** }
1502:Drivers/CMSIS/Include/core_cm3.h **** 
1503:Drivers/CMSIS/Include/core_cm3.h **** 
1504:Drivers/CMSIS/Include/core_cm3.h **** /**
1505:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1506:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1507:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1508:Drivers/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1509:Drivers/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1510:Drivers/CMSIS/Include/core_cm3.h ****  */
1511:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1512:Drivers/CMSIS/Include/core_cm3.h **** {
1513:Drivers/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 49


1514:Drivers/CMSIS/Include/core_cm3.h **** }
1515:Drivers/CMSIS/Include/core_cm3.h **** 
1516:Drivers/CMSIS/Include/core_cm3.h **** 
1517:Drivers/CMSIS/Include/core_cm3.h **** /**
1518:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1519:Drivers/CMSIS/Include/core_cm3.h ****   \details Sets the priority of an interrupt.
1520:Drivers/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1521:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1522:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1523:Drivers/CMSIS/Include/core_cm3.h ****  */
1524:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1525:Drivers/CMSIS/Include/core_cm3.h **** {
1526:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1527:Drivers/CMSIS/Include/core_cm3.h ****   {
1528:Drivers/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1529:Drivers/CMSIS/Include/core_cm3.h ****   }
1530:Drivers/CMSIS/Include/core_cm3.h ****   else
1531:Drivers/CMSIS/Include/core_cm3.h ****   {
1532:Drivers/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1533:Drivers/CMSIS/Include/core_cm3.h ****   }
1534:Drivers/CMSIS/Include/core_cm3.h **** }
1535:Drivers/CMSIS/Include/core_cm3.h **** 
1536:Drivers/CMSIS/Include/core_cm3.h **** 
1537:Drivers/CMSIS/Include/core_cm3.h **** /**
1538:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1539:Drivers/CMSIS/Include/core_cm3.h ****   \details Reads the priority of an interrupt.
1540:Drivers/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1541:Drivers/CMSIS/Include/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1542:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1543:Drivers/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1544:Drivers/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1545:Drivers/CMSIS/Include/core_cm3.h ****  */
1546:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1547:Drivers/CMSIS/Include/core_cm3.h **** {
1548:Drivers/CMSIS/Include/core_cm3.h **** 
1549:Drivers/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1550:Drivers/CMSIS/Include/core_cm3.h ****   {
1551:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1552:Drivers/CMSIS/Include/core_cm3.h ****   }
1553:Drivers/CMSIS/Include/core_cm3.h ****   else
1554:Drivers/CMSIS/Include/core_cm3.h ****   {
1555:Drivers/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1556:Drivers/CMSIS/Include/core_cm3.h ****   }
1557:Drivers/CMSIS/Include/core_cm3.h **** }
1558:Drivers/CMSIS/Include/core_cm3.h **** 
1559:Drivers/CMSIS/Include/core_cm3.h **** 
1560:Drivers/CMSIS/Include/core_cm3.h **** /**
1561:Drivers/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1562:Drivers/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1563:Drivers/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1564:Drivers/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1565:Drivers/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1566:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1567:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1568:Drivers/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1569:Drivers/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1570:Drivers/CMSIS/Include/core_cm3.h ****  */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 50


1571:Drivers/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1572:Drivers/CMSIS/Include/core_cm3.h **** {
1573:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
  73              		.loc 3 1573 3 is_stmt 1 view .LVU15
1574:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
  74              		.loc 3 1574 3 view .LVU16
1575:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
  75              		.loc 3 1575 3 view .LVU17
1576:Drivers/CMSIS/Include/core_cm3.h **** 
1577:Drivers/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
  76              		.loc 3 1577 3 view .LVU18
1578:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
  77              		.loc 3 1578 3 view .LVU19
1579:Drivers/CMSIS/Include/core_cm3.h **** 
1580:Drivers/CMSIS/Include/core_cm3.h ****   return (
  78              		.loc 3 1580 3 view .LVU20
  79              	.LBB146:
  80              	.LBI146:
1524:Drivers/CMSIS/Include/core_cm3.h **** {
  81              		.loc 3 1524 22 view .LVU21
  82              	.LBB147:
1526:Drivers/CMSIS/Include/core_cm3.h ****   {
  83              		.loc 3 1526 3 view .LVU22
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
  84              		.loc 3 1532 5 view .LVU23
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
  85              		.loc 3 1532 55 is_stmt 0 view .LVU24
  86 001a 064B     		ldr	r3, .L3+8
  87 001c 0022     		movs	r2, #0
  88 001e 83F81123 		strb	r2, [r3, #785]
  89              	.LVL3:
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
  90              		.loc 3 1532 55 view .LVU25
  91              	.LBE147:
  92              	.LBE146:
 862:Src/main.c    ****   NVIC_EnableIRQ(DMA1_Channel7_IRQn);
  93              		.loc 1 862 3 is_stmt 1 view .LVU26
  94              	.LBB148:
  95              	.LBI148:
1452:Drivers/CMSIS/Include/core_cm3.h **** {
  96              		.loc 3 1452 22 view .LVU27
  97              	.LBB149:
1454:Drivers/CMSIS/Include/core_cm3.h **** }
  98              		.loc 3 1454 3 view .LVU28
1454:Drivers/CMSIS/Include/core_cm3.h **** }
  99              		.loc 3 1454 50 is_stmt 0 view .LVU29
 100 0022 4FF40032 		mov	r2, #131072
 101 0026 1A60     		str	r2, [r3]
 102              	.LVL4:
1454:Drivers/CMSIS/Include/core_cm3.h **** }
 103              		.loc 3 1454 50 view .LVU30
 104              	.LBE149:
 105              	.LBE148:
 863:Src/main.c    **** }
 106              		.loc 1 863 1 view .LVU31
 107 0028 02B0     		add	sp, sp, #8
 108              	.LCFI1:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 51


 109              		.cfi_def_cfa_offset 0
 110              		@ sp needed
 111 002a 7047     		bx	lr
 112              	.L4:
 113              		.align	2
 114              	.L3:
 115 002c 00100240 		.word	1073876992
 116 0030 00ED00E0 		.word	-536810240
 117 0034 00E100E0 		.word	-536813312
 118              		.cfi_endproc
 119              	.LFE723:
 121              		.section	.text.MX_GPIO_Init,"ax",%progbits
 122              		.align	1
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	MX_GPIO_Init:
 129              	.LFB724:
 864:Src/main.c    **** 
 865:Src/main.c    **** /**
 866:Src/main.c    ****   * @brief GPIO Initialization Function
 867:Src/main.c    ****   * @param None
 868:Src/main.c    ****   * @retval None
 869:Src/main.c    ****   */
 870:Src/main.c    **** static void MX_GPIO_Init(void)
 871:Src/main.c    **** {
 130              		.loc 1 871 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 16
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 30B5     		push	{r4, r5, lr}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 12
 137              		.cfi_offset 4, -12
 138              		.cfi_offset 5, -8
 139              		.cfi_offset 14, -4
 140 0002 85B0     		sub	sp, sp, #20
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 32
 872:Src/main.c    **** 
 873:Src/main.c    ****   /* GPIO Ports Clock Enable */
 874:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOC);
 143              		.loc 1 874 3 view .LVU33
 144              	.LVL5:
 145              	.LBB150:
 146              	.LBI150:
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_IsEnabledClock\n
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_IsEnabledClock\n
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_IsEnabledClock\n
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_IsEnabledClock\n
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 52


 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_IsEnabledClock\n
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_IsEnabledClock\n
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_IsEnabledClock\n
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_IsEnabledClock\n
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_IsEnabledClock
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       DMA2EN        LL_AHB1_GRP1_DisableClock\n
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACEN      LL_AHB1_GRP1_DisableClock\n
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACRXEN    LL_AHB1_GRP1_DisableClock\n
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       ETHMACTXEN    LL_AHB1_GRP1_DisableClock\n
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FLITFEN       LL_AHB1_GRP1_DisableClock\n
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       FSMCEN        LL_AHB1_GRP1_DisableClock\n
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       OTGFSEN       LL_AHB1_GRP1_DisableClock\n
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SDIOEN        LL_AHB1_GRP1_DisableClock\n
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBENR       SRAMEN        LL_AHB1_GRP1_DisableClock
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA2 (*)
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACRX (*)
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMACTX (*)
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FSMC (*)
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SDIO (*)
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 53


 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #if defined(RCC_AHBRSTR_SUPPORT)
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBRSTR      ETHMACRST     LL_AHB1_GRP1_ForceReset\n
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBRSTR      OTGFSRST      LL_AHB1_GRP1_ForceReset
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll AHBRSTR      ETHMACRST     LL_AHB1_GRP1_ReleaseReset\n
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         AHBRSTR      OTGFSRST      LL_AHB1_GRP1_ReleaseReset
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ETHMAC (*)
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_OTGFS (*)
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** #endif /* RCC_AHBRSTR_SUPPORT */
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_EnableClock\n
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_EnableClock\n
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_EnableClock\n
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_EnableClock\n
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_EnableClock\n
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_EnableClock\n
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_EnableClock\n
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_EnableClock\n
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 54


 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_EnableClock\n
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_EnableClock\n
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_EnableClock\n
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_EnableClock\n
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_EnableClock\n
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_EnableClock\n
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_EnableClock\n
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_EnableClock\n
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_EnableClock\n
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_EnableClock\n
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_EnableClock\n
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_EnableClock\n
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_EnableClock\n
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_EnableClock\n
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_EnableClock\n
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_EnableClock\n
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_EnableClock
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 55


 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_IsEnabledClock\n
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_IsEnabledClock\n
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_IsEnabledClock\n
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_IsEnabledClock\n
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_IsEnabledClock\n
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_IsEnabledClock\n
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_IsEnabledClock\n
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_IsEnabledClock\n
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_IsEnabledClock\n
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_IsEnabledClock\n
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_IsEnabledClock\n
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_IsEnabledClock\n
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_IsEnabledClock\n
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_IsEnabledClock\n
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_IsEnabledClock
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 56


 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1ENR      BKPEN         LL_APB1_GRP1_DisableClock\n
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN1EN        LL_APB1_GRP1_DisableClock\n
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CAN2EN        LL_APB1_GRP1_DisableClock\n
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      CECEN         LL_APB1_GRP1_DisableClock\n
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      DACEN         LL_APB1_GRP1_DisableClock\n
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C1EN        LL_APB1_GRP1_DisableClock\n
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      I2C2EN        LL_APB1_GRP1_DisableClock\n
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      PWREN         LL_APB1_GRP1_DisableClock\n
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI2EN        LL_APB1_GRP1_DisableClock\n
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      SPI3EN        LL_APB1_GRP1_DisableClock\n
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM12EN       LL_APB1_GRP1_DisableClock\n
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM13EN       LL_APB1_GRP1_DisableClock\n
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM14EN       LL_APB1_GRP1_DisableClock\n
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM2EN        LL_APB1_GRP1_DisableClock\n
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM3EN        LL_APB1_GRP1_DisableClock\n
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM4EN        LL_APB1_GRP1_DisableClock\n
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM5EN        LL_APB1_GRP1_DisableClock\n
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM6EN        LL_APB1_GRP1_DisableClock\n
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      TIM7EN        LL_APB1_GRP1_DisableClock\n
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART4EN       LL_APB1_GRP1_DisableClock\n
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      UART5EN       LL_APB1_GRP1_DisableClock\n
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART2EN      LL_APB1_GRP1_DisableClock\n
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USART3EN      LL_APB1_GRP1_DisableClock\n
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      USBEN         LL_APB1_GRP1_DisableClock\n
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1ENR      WWDGEN        LL_APB1_GRP1_DisableClock
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 57


 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1RSTR     BKPRST        LL_APB1_GRP1_ForceReset\n
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN1RST       LL_APB1_GRP1_ForceReset\n
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN2RST       LL_APB1_GRP1_ForceReset\n
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ForceReset\n
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ForceReset\n
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ForceReset\n
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ForceReset\n
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ForceReset\n
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ForceReset\n
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI3RST       LL_APB1_GRP1_ForceReset\n
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM12RST      LL_APB1_GRP1_ForceReset\n
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM13RST      LL_APB1_GRP1_ForceReset\n
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ForceReset\n
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM2RST       LL_APB1_GRP1_ForceReset\n
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ForceReset\n
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM4RST       LL_APB1_GRP1_ForceReset\n
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM5RST       LL_APB1_GRP1_ForceReset\n
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ForceReset\n
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ForceReset\n
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART4RST      LL_APB1_GRP1_ForceReset\n
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART5RST      LL_APB1_GRP1_ForceReset\n
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ForceReset\n
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ForceReset\n
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ForceReset\n
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ForceReset
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 58


 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB1RSTR     BKPRST        LL_APB1_GRP1_ReleaseReset\n
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN1RST       LL_APB1_GRP1_ReleaseReset\n
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CAN2RST       LL_APB1_GRP1_ReleaseReset\n
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     CECRST        LL_APB1_GRP1_ReleaseReset\n
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     DACRST        LL_APB1_GRP1_ReleaseReset\n
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     SPI3RST       LL_APB1_GRP1_ReleaseReset\n
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM12RST      LL_APB1_GRP1_ReleaseReset\n
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM13RST      LL_APB1_GRP1_ReleaseReset\n
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM14RST      LL_APB1_GRP1_ReleaseReset\n
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM4RST       LL_APB1_GRP1_ReleaseReset\n
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM5RST       LL_APB1_GRP1_ReleaseReset\n
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART4RST      LL_APB1_GRP1_ReleaseReset\n
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     UART5RST      LL_APB1_GRP1_ReleaseReset\n
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     USBRST        LL_APB1_GRP1_ReleaseReset\n
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB1RSTR     WWDGRST       LL_APB1_GRP1_ReleaseReset
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_BKP
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN1 (*)
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CAN2 (*)
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC (*)
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI3 (*)
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM12 (*)
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM13 (*)
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM14 (*)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 59


 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM4 (*)
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM5 (*)
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART4 (*)
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UART5 (*)
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3 (*)
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @}
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @{
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   */
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** 
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** /**
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @rmtoll APB2ENR      ADC1EN        LL_APB2_GRP1_EnableClock\n
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      ADC2EN        LL_APB2_GRP1_EnableClock\n
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      ADC3EN        LL_APB2_GRP1_EnableClock\n
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      AFIOEN        LL_APB2_GRP1_EnableClock\n
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPAEN        LL_APB2_GRP1_EnableClock\n
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPBEN        LL_APB2_GRP1_EnableClock\n
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPCEN        LL_APB2_GRP1_EnableClock\n
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPDEN        LL_APB2_GRP1_EnableClock\n
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPEEN        LL_APB2_GRP1_EnableClock\n
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPFEN        LL_APB2_GRP1_EnableClock\n
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      IOPGEN        LL_APB2_GRP1_EnableClock\n
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM10EN       LL_APB2_GRP1_EnableClock\n
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM11EN       LL_APB2_GRP1_EnableClock\n
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM15EN       LL_APB2_GRP1_EnableClock\n
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM16EN       LL_APB2_GRP1_EnableClock\n
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM17EN       LL_APB2_GRP1_EnableClock\n
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM1EN        LL_APB2_GRP1_EnableClock\n
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM8EN        LL_APB2_GRP1_EnableClock\n
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      TIM9EN        LL_APB2_GRP1_EnableClock\n
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC2 (*)
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC3 (*)
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_AFIO
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 60


 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOA
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOB
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOC
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOD
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOE (*)
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOF (*)
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_GPIOG (*)
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM10 (*)
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM11 (*)
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16 (*)
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17 (*)
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM8 (*)
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM9 (*)
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   *         (*) value not defined in all devices.
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   * @retval None
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** */
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 147              		.loc 2 779 22 view .LVU34
 148              	.LBB151:
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   __IO uint32_t tmpreg;
 149              		.loc 2 781 3 view .LVU35
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 150              		.loc 2 782 3 view .LVU36
 151 0004 1F4B     		ldr	r3, .L7
 152 0006 9A69     		ldr	r2, [r3, #24]
 153 0008 42F01002 		orr	r2, r2, #16
 154 000c 9A61     		str	r2, [r3, #24]
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 155              		.loc 2 784 3 view .LVU37
 156              		.loc 2 784 12 is_stmt 0 view .LVU38
 157 000e 9A69     		ldr	r2, [r3, #24]
 158 0010 02F01002 		and	r2, r2, #16
 159              		.loc 2 784 10 view .LVU39
 160 0014 0392     		str	r2, [sp, #12]
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 161              		.loc 2 785 3 is_stmt 1 view .LVU40
 162 0016 039A     		ldr	r2, [sp, #12]
 163              	.LVL6:
 164              		.loc 2 785 3 is_stmt 0 view .LVU41
 165              	.LBE151:
 166              	.LBE150:
 875:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOD);
 167              		.loc 1 875 3 is_stmt 1 view .LVU42
 168              	.LBB152:
 169              	.LBI152:
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 170              		.loc 2 779 22 view .LVU43
 171              	.LBB153:
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 172              		.loc 2 781 3 view .LVU44
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 61


 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 173              		.loc 2 782 3 view .LVU45
 174 0018 9A69     		ldr	r2, [r3, #24]
 175 001a 42F02002 		orr	r2, r2, #32
 176 001e 9A61     		str	r2, [r3, #24]
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 177              		.loc 2 784 3 view .LVU46
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 178              		.loc 2 784 12 is_stmt 0 view .LVU47
 179 0020 9A69     		ldr	r2, [r3, #24]
 180 0022 02F02002 		and	r2, r2, #32
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 181              		.loc 2 784 10 view .LVU48
 182 0026 0292     		str	r2, [sp, #8]
 183              		.loc 2 785 3 is_stmt 1 view .LVU49
 184 0028 029A     		ldr	r2, [sp, #8]
 185              	.LVL7:
 186              		.loc 2 785 3 is_stmt 0 view .LVU50
 187              	.LBE153:
 188              	.LBE152:
 876:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOA);
 189              		.loc 1 876 3 is_stmt 1 view .LVU51
 190              	.LBB154:
 191              	.LBI154:
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 192              		.loc 2 779 22 view .LVU52
 193              	.LBB155:
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 194              		.loc 2 781 3 view .LVU53
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 195              		.loc 2 782 3 view .LVU54
 196 002a 9A69     		ldr	r2, [r3, #24]
 197 002c 42F00402 		orr	r2, r2, #4
 198 0030 9A61     		str	r2, [r3, #24]
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 199              		.loc 2 784 3 view .LVU55
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 200              		.loc 2 784 12 is_stmt 0 view .LVU56
 201 0032 9A69     		ldr	r2, [r3, #24]
 202 0034 02F00402 		and	r2, r2, #4
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 203              		.loc 2 784 10 view .LVU57
 204 0038 0192     		str	r2, [sp, #4]
 205              		.loc 2 785 3 is_stmt 1 view .LVU58
 206 003a 019A     		ldr	r2, [sp, #4]
 207              	.LVL8:
 208              		.loc 2 785 3 is_stmt 0 view .LVU59
 209              	.LBE155:
 210              	.LBE154:
 877:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOB);
 211              		.loc 1 877 3 is_stmt 1 view .LVU60
 212              	.LBB156:
 213              	.LBI156:
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 214              		.loc 2 779 22 view .LVU61
 215              	.LBB157:
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 62


 216              		.loc 2 781 3 view .LVU62
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 217              		.loc 2 782 3 view .LVU63
 218 003c 9A69     		ldr	r2, [r3, #24]
 219 003e 42F00802 		orr	r2, r2, #8
 220 0042 9A61     		str	r2, [r3, #24]
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 221              		.loc 2 784 3 view .LVU64
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 222              		.loc 2 784 12 is_stmt 0 view .LVU65
 223 0044 9B69     		ldr	r3, [r3, #24]
 224 0046 03F00803 		and	r3, r3, #8
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 225              		.loc 2 784 10 view .LVU66
 226 004a 0093     		str	r3, [sp]
 227              		.loc 2 785 3 is_stmt 1 view .LVU67
 228 004c 009B     		ldr	r3, [sp]
 229              	.LVL9:
 230              		.loc 2 785 3 is_stmt 0 view .LVU68
 231              	.LBE157:
 232              	.LBE156:
 878:Src/main.c    ****   // GPIOA Periph clock enable
 879:Src/main.c    **** 
 880:Src/main.c    ****   // GPIOA pins WS2812 data outputs
 881:Src/main.c    ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_ALL;
 233              		.loc 1 881 3 is_stmt 1 view .LVU69
 234              		.loc 1 881 23 is_stmt 0 view .LVU70
 235 004e 0E4C     		ldr	r4, .L7+4
 236 0050 6FF07B43 		mvn	r3, #-83886080
 237 0054 2360     		str	r3, [r4]
 882:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 238              		.loc 1 882 3 is_stmt 1 view .LVU71
 239              		.loc 1 882 24 is_stmt 0 view .LVU72
 240 0056 0125     		movs	r5, #1
 241 0058 6560     		str	r5, [r4, #4]
 883:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 242              		.loc 1 883 3 is_stmt 1 view .LVU73
 243              		.loc 1 883 25 is_stmt 0 view .LVU74
 244 005a 0323     		movs	r3, #3
 245 005c A360     		str	r3, [r4, #8]
 884:Src/main.c    ****   LL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 246              		.loc 1 884 3 is_stmt 1 view .LVU75
 247 005e 2146     		mov	r1, r4
 248 0060 0A48     		ldr	r0, .L7+8
 249 0062 FFF7FEFF 		bl	LL_GPIO_Init
 250              	.LVL10:
 885:Src/main.c    **** 
 886:Src/main.c    ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_13;
 251              		.loc 1 886 3 view .LVU76
 252              		.loc 1 886 23 is_stmt 0 view .LVU77
 253 0066 0A4B     		ldr	r3, .L7+12
 254 0068 2360     		str	r3, [r4]
 887:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 255              		.loc 1 887 3 is_stmt 1 view .LVU78
 256              		.loc 1 887 24 is_stmt 0 view .LVU79
 257 006a 6560     		str	r5, [r4, #4]
 888:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 63


 258              		.loc 1 888 3 is_stmt 1 view .LVU80
 259              		.loc 1 888 25 is_stmt 0 view .LVU81
 260 006c 0223     		movs	r3, #2
 261 006e A360     		str	r3, [r4, #8]
 889:Src/main.c    ****   LL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 262              		.loc 1 889 3 is_stmt 1 view .LVU82
 263 0070 084D     		ldr	r5, .L7+16
 264 0072 2146     		mov	r1, r4
 265 0074 2846     		mov	r0, r5
 266 0076 FFF7FEFF 		bl	LL_GPIO_Init
 267              	.LVL11:
 890:Src/main.c    ****   LL_GPIO_ResetOutputPin(GPIOC, LL_GPIO_PIN_13);
 268              		.loc 1 890 3 view .LVU83
 269              	.LBB158:
 270              	.LBI158:
 271              		.file 4 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @file    stm32f1xx_ll_gpio.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *      without specific prior written permission.
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   ******************************************************************************
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #ifndef __STM32F1xx_LL_GPIO_H
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define __STM32F1xx_LL_GPIO_H
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #ifdef __cplusplus
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** extern "C" {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 64


  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #include "stm32f1xx.h"
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @addtogroup STM32F1xx_LL_Driver
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Constants GPIO Private Constants
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Defines used for Pin Mask Initialization */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define GPIO_PIN_MASK_POS   8U
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define GPIO_PIN_NB         16U
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** typedef struct
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 65


  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_0                    ((GPIO_BSRR_BS0  << GPIO_PIN_MASK_POS) | 0x00000001U)  /*!
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_1                    ((GPIO_BSRR_BS1  << GPIO_PIN_MASK_POS) | 0x00000002U)  /*!
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_2                    ((GPIO_BSRR_BS2  << GPIO_PIN_MASK_POS) | 0x00000004U)  /*!
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_3                    ((GPIO_BSRR_BS3  << GPIO_PIN_MASK_POS) | 0x00000008U)  /*!
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_4                    ((GPIO_BSRR_BS4  << GPIO_PIN_MASK_POS) | 0x00000010U)  /*!
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_5                    ((GPIO_BSRR_BS5  << GPIO_PIN_MASK_POS) | 0x00000020U)  /*!
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_6                    ((GPIO_BSRR_BS6  << GPIO_PIN_MASK_POS) | 0x00000040U)  /*!
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_7                    ((GPIO_BSRR_BS7  << GPIO_PIN_MASK_POS) | 0x00000080U)  /*!
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_8                    ((GPIO_BSRR_BS8  << GPIO_PIN_MASK_POS) | 0x04000001U)  /*!
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_9                    ((GPIO_BSRR_BS9  << GPIO_PIN_MASK_POS) | 0x04000002U)  /*!
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_10                   ((GPIO_BSRR_BS10 << GPIO_PIN_MASK_POS) | 0x04000004U)  /*!
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_11                   ((GPIO_BSRR_BS11 << GPIO_PIN_MASK_POS) | 0x04000008U)  /*!
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_12                   ((GPIO_BSRR_BS12 << GPIO_PIN_MASK_POS) | 0x04000010U)  /*!
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_13                   ((GPIO_BSRR_BS13 << GPIO_PIN_MASK_POS) | 0x04000020U)  /*!
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_14                   ((GPIO_BSRR_BS14 << GPIO_PIN_MASK_POS) | 0x04000040U)  /*!
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_15                   ((GPIO_BSRR_BS15 << GPIO_PIN_MASK_POS) | 0x04000080U)  /*!
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                  (LL_GPIO_PIN_0  | LL_GPIO_PIN_1  | LL_GPIO_PIN_2  | \
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_3  | LL_GPIO_PIN_4  | LL_GPIO_PIN_5  | \
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_6  | LL_GPIO_PIN_7  | LL_GPIO_PIN_8  | \
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_9  | LL_GPIO_PIN_10 | LL_GPIO_PIN_11 | \
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_12 | LL_GPIO_PIN_13 | LL_GPIO_PIN_14 | \
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****                                           LL_GPIO_PIN_15)                                      /*!<
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 66


 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG              0x00000000U       /*!< Select analog mode */
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_FLOATING            GPIO_CRL_CNF0_0   /*!< Select floating mode */
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT               GPIO_CRL_CNF0_1   /*!< Select input mode */
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT              GPIO_CRL_MODE0_0  /*!< Select general purpose output mode 
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE           (GPIO_CRL_CNF0_1 | GPIO_CRL_MODE0_0) /*!< Select alternate
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL          0x00000000U                /*!< Select push-pull as output
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN         GPIO_CRL_CNF0_0            /*!< Select open-drain as outpu
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_10MHz        GPIO_CRL_MODE0_0            /*!< Select Output mode, max s
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_2MHz         GPIO_CRL_MODE0_1            /*!< Select Output mode, max s
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT_50MHz        GPIO_CRL_MODE0              /*!< Select Output mode, max s
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW           LL_GPIO_MODE_OUTPUT_2MHz    /*!< Select I/O low output spe
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM        LL_GPIO_MODE_OUTPUT_10MHz   /*!< Select I/O medium output 
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH          LL_GPIO_MODE_OUTPUT_50MHz   /*!< Select I/O high output sp
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                0x00000000U    /*!< Select I/O pull down */
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                  GPIO_ODR_ODR0  /*!< Select I/O pull up */
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EVENTOUT_PIN EVENTOUT Pin
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_0        AFIO_EVCR_PIN_PX0   /*!< EVENTOUT on pin 0 */
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_1        AFIO_EVCR_PIN_PX1   /*!< EVENTOUT on pin 1 */
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_2        AFIO_EVCR_PIN_PX2   /*!< EVENTOUT on pin 2 */
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_3        AFIO_EVCR_PIN_PX3   /*!< EVENTOUT on pin 3 */
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_4        AFIO_EVCR_PIN_PX4   /*!< EVENTOUT on pin 4 */
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_5        AFIO_EVCR_PIN_PX5   /*!< EVENTOUT on pin 5 */
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_6        AFIO_EVCR_PIN_PX6   /*!< EVENTOUT on pin 6 */
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_7        AFIO_EVCR_PIN_PX7   /*!< EVENTOUT on pin 7 */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 67


 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_8        AFIO_EVCR_PIN_PX8   /*!< EVENTOUT on pin 8 */
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_9        AFIO_EVCR_PIN_PX9   /*!< EVENTOUT on pin 9 */
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_10       AFIO_EVCR_PIN_PX10  /*!< EVENTOUT on pin 10 */
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_11       AFIO_EVCR_PIN_PX11  /*!< EVENTOUT on pin 11 */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_12       AFIO_EVCR_PIN_PX12  /*!< EVENTOUT on pin 12 */
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_13       AFIO_EVCR_PIN_PX13  /*!< EVENTOUT on pin 13 */
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_14       AFIO_EVCR_PIN_PX14  /*!< EVENTOUT on pin 14 */
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PIN_15       AFIO_EVCR_PIN_PX15  /*!< EVENTOUT on pin 15 */
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EVENTOUT_PORT EVENTOUT Port
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_A       AFIO_EVCR_PORT_PA  /*!< EVENTOUT on port A */
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_B       AFIO_EVCR_PORT_PB  /*!< EVENTOUT on port B */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_C       AFIO_EVCR_PORT_PC  /*!< EVENTOUT on port C */
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_D       AFIO_EVCR_PORT_PD  /*!< EVENTOUT on port D */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EVENTOUT_PORT_E       AFIO_EVCR_PORT_PE  /*!< EVENTOUT on port E */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_EXTI_PORT GPIO EXTI PORT
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTA            0U   /*!< EXTI PORT A */
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTB            1U   /*!< EXTI PORT B */
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTC            2U   /*!< EXTI PORT C */
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTD            3U   /*!< EXTI PORT D */
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTE            4U   /*!< EXTI PORT E */
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTF            5U   /*!< EXTI PORT F */
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_PORTG            6U   /*!< EXTI PORT G */
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_EXTI_LINE GPIO EXTI LINE
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE0            (0x000FU << 16U | 0U)  /*!< EXTI_POSITION_0  | EXTICR[0] *
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE1            (0x00F0U << 16U | 0U)  /*!< EXTI_POSITION_4  | EXTICR[0] *
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE2            (0x0F00U << 16U | 0U)  /*!< EXTI_POSITION_8  | EXTICR[0] *
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE3            (0xF000U << 16U | 0U)  /*!< EXTI_POSITION_12 | EXTICR[0] *
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE4            (0x000FU << 16U | 1U)  /*!< EXTI_POSITION_0  | EXTICR[1] *
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE5            (0x00F0U << 16U | 1U)  /*!< EXTI_POSITION_4  | EXTICR[1] *
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE6            (0x0F00U << 16U | 1U)  /*!< EXTI_POSITION_8  | EXTICR[1] *
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE7            (0xF000U << 16U | 1U)  /*!< EXTI_POSITION_12 | EXTICR[1] *
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE8            (0x000FU << 16U | 2U)  /*!< EXTI_POSITION_0  | EXTICR[2] *
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE9            (0x00F0U << 16U | 2U)  /*!< EXTI_POSITION_4  | EXTICR[2] *
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE10           (0x0F00U << 16U | 2U)  /*!< EXTI_POSITION_8  | EXTICR[2] *
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE11           (0xF000U << 16U | 2U)  /*!< EXTI_POSITION_12 | EXTICR[2] *
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE12           (0x000FU << 16U | 3U)  /*!< EXTI_POSITION_0  | EXTICR[3] *
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 68


 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE13           (0x00F0U << 16U | 3U)  /*!< EXTI_POSITION_4  | EXTICR[3] *
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE14           (0x0F00U << 16U | 3U)  /*!< EXTI_POSITION_8  | EXTICR[3] *
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_AF_EXTI_LINE15           (0xF000U << 16U | 3U)  /*!< EXTI_POSITION_12 | EXTICR[3] *
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Register value
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O mode can be Analog, Floating input, Input with pull-up/pull-down, General purpose O
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         Alternate function Output.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 69


 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        CNFy         LL_GPIO_SetPinMode
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        MODEy        LL_GPIO_SetPinMode
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        CNFy         LL_GPIO_SetPinMode
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        MODEy        LL_GPIO_SetPinMode
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_FLOATING
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, ((GPIO_CRL_CNF0 | GPIO_CRL_MODE0) << (POSITION_VAL(Pin) * 4U)), (Mode << (POSIT
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O mode can be Analog, Floating input, Input with pull-up/pull-down, General purpose O
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         Alternate function Output.
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        CNFy         LL_GPIO_GetPinMode
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL        MODEy        LL_GPIO_GetPinMode
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        CNFy         LL_GPIO_GetPinMode
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH        MODEy        LL_GPIO_GetPinMode
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 70


 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_FLOATING
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, ((GPIO_CRL_CNF0 | GPIO_CRL_MODE0) << (POSITION_VAL(Pin) * 4U))) >> (POSIT
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium or Fast speed.
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL      MODEy       LL_GPIO_SetPinSpeed
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH      MODEy       LL_GPIO_SetPinSpeed
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, (GPIO_CRL_MODE0 << (POSITION_VAL(Pin) * 4U)),
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****              (Speed << (POSITION_VAL(Pin) * 4U)));
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 71


 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL      MODEy       LL_GPIO_GetPinSpeed
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH      MODEy       LL_GPIO_GetPinSpeed
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, (GPIO_CRL_MODE0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U)
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL       MODEy           LL_GPIO_SetPinOutputType
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH       MODEy           LL_GPIO_SetPinOutputType
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be a combination of the following values:
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 72


 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t OutputTyp
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(*pReg, (GPIO_CRL_CNF0_0 << (POSITION_VAL(Pin) * 4U)),
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****              (OutputType << (POSITION_VAL(Pin) * 4U)));
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRL       MODEy       LL_GPIO_GetPinOutputType
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll CRH       MODEy       LL_GPIO_GetPinOutputType
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)(&GPIOx->CRL) + (Pin >> 24));
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(*pReg, (GPIO_CRL_CNF0_0 << (POSITION_VAL(Pin) * 4U))) >> (POSITION_VAL(Pin) * 4U
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 73


 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR        ODR         LL_GPIO_SetPinPull
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   MODIFY_REG(GPIOx->ODR, (Pin >> GPIO_PIN_MASK_POS), Pull << (POSITION_VAL(Pin >> GPIO_PIN_MASK_POS
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR        ODR         LL_GPIO_GetPinPull
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 74


 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, (GPIO_ODR_ODR0 << (POSITION_VAL(Pin >> GPIO_PIN_MASK_POS)))) >> (POS
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         next reset.
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         (control and alternate function registers).
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   __IO uint32_t temp;
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   (void) temp;
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 75


 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU)) == ((PinMask >> GPI
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK));
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Input data register value of port
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_REG(GPIOx->IDR));
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 76


 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->IDR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU) == ((PinMask >> GPIO_P
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval Output data register value of port
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 77


 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU) == ((PinMask >> GPIO_P
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 78


 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 272              		.loc 4 849 22 view .LVU84
 273              	.LBB159:
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, (PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU);
 274              		.loc 4 851 3 view .LVU85
 275 007a 4FF40053 		mov	r3, #8192
 276 007e 6B61     		str	r3, [r5, #20]
 277              	.LVL12:
 278              		.loc 4 851 3 is_stmt 0 view .LVU86
 279              	.LBE159:
 280              	.LBE158:
 891:Src/main.c    **** }
 281              		.loc 1 891 1 view .LVU87
 282 0080 05B0     		add	sp, sp, #20
 283              	.LCFI4:
 284              		.cfi_def_cfa_offset 12
 285              		@ sp needed
 286 0082 30BD     		pop	{r4, r5, pc}
 287              	.L8:
 288              		.align	2
 289              	.L7:
 290 0084 00100240 		.word	1073876992
 291 0088 00000000 		.word	.LANCHOR0
 292 008c 00080140 		.word	1073809408
 293 0090 20002004 		.word	69206048
 294 0094 00100140 		.word	1073811456
 295              		.cfi_endproc
 296              	.LFE724:
 298              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 299              		.align	1
 300              		.syntax unified
 301              		.thumb
 302              		.thumb_func
 303              		.fpu softvfp
 305              	MX_USART3_UART_Init:
 306              	.LFB725:
 892:Src/main.c    **** 
 893:Src/main.c    **** static void MX_USART3_UART_Init(void)
 894:Src/main.c    **** {
 307              		.loc 1 894 1 is_stmt 1 view -0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 312              	.LCFI5:
 313              		.cfi_def_cfa_offset 20
 314              		.cfi_offset 4, -20
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 79


 315              		.cfi_offset 5, -16
 316              		.cfi_offset 6, -12
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 83B0     		sub	sp, sp, #12
 320              	.LCFI6:
 321              		.cfi_def_cfa_offset 32
 895:Src/main.c    **** 
 896:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_USART3);
 322              		.loc 1 896 3 view .LVU89
 323              	.LVL13:
 324              	.LBB160:
 325              	.LBI160:
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 326              		.loc 2 463 22 view .LVU90
 327              	.LBB161:
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 328              		.loc 2 465 3 view .LVU91
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 329              		.loc 2 466 3 view .LVU92
 330 0004 274B     		ldr	r3, .L11
 331 0006 DA69     		ldr	r2, [r3, #28]
 332 0008 42F48022 		orr	r2, r2, #262144
 333 000c DA61     		str	r2, [r3, #28]
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 334              		.loc 2 468 3 view .LVU93
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 335              		.loc 2 468 12 is_stmt 0 view .LVU94
 336 000e DA69     		ldr	r2, [r3, #28]
 337 0010 02F48022 		and	r2, r2, #262144
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 338              		.loc 2 468 10 view .LVU95
 339 0014 0192     		str	r2, [sp, #4]
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 340              		.loc 2 469 3 is_stmt 1 view .LVU96
 341 0016 019A     		ldr	r2, [sp, #4]
 342              	.LVL14:
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 343              		.loc 2 469 3 is_stmt 0 view .LVU97
 344              	.LBE161:
 345              	.LBE160:
 897:Src/main.c    **** 
 898:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_GPIOB);
 346              		.loc 1 898 3 is_stmt 1 view .LVU98
 347              	.LBB162:
 348              	.LBI162:
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 349              		.loc 2 779 22 view .LVU99
 350              	.LBB163:
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 351              		.loc 2 781 3 view .LVU100
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 352              		.loc 2 782 3 view .LVU101
 353 0018 9A69     		ldr	r2, [r3, #24]
 354 001a 42F00802 		orr	r2, r2, #8
 355 001e 9A61     		str	r2, [r3, #24]
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 80


 356              		.loc 2 784 3 view .LVU102
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 357              		.loc 2 784 12 is_stmt 0 view .LVU103
 358 0020 9B69     		ldr	r3, [r3, #24]
 359 0022 03F00803 		and	r3, r3, #8
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 360              		.loc 2 784 10 view .LVU104
 361 0026 0093     		str	r3, [sp]
 362              		.loc 2 785 3 is_stmt 1 view .LVU105
 363 0028 009B     		ldr	r3, [sp]
 364              	.LVL15:
 365              		.loc 2 785 3 is_stmt 0 view .LVU106
 366              	.LBE163:
 367              	.LBE162:
 899:Src/main.c    ****   /**USART3 GPIO Configuration
 900:Src/main.c    ****   PB10   ------> USART3_TX
 901:Src/main.c    ****   PB11   ------> USART3_RX
 902:Src/main.c    ****   */
 903:Src/main.c    ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_10;
 368              		.loc 1 903 3 is_stmt 1 view .LVU107
 369              		.loc 1 903 23 is_stmt 0 view .LVU108
 370 002a 1F4C     		ldr	r4, .L11+4
 371 002c 1F4B     		ldr	r3, .L11+8
 372 002e 2360     		str	r3, [r4]
 904:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 373              		.loc 1 904 3 is_stmt 1 view .LVU109
 374              		.loc 1 904 24 is_stmt 0 view .LVU110
 375 0030 0923     		movs	r3, #9
 376 0032 6360     		str	r3, [r4, #4]
 905:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_HIGH;
 377              		.loc 1 905 3 is_stmt 1 view .LVU111
 378              		.loc 1 905 25 is_stmt 0 view .LVU112
 379 0034 0323     		movs	r3, #3
 380 0036 A360     		str	r3, [r4, #8]
 906:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 381              		.loc 1 906 3 is_stmt 1 view .LVU113
 382              		.loc 1 906 30 is_stmt 0 view .LVU114
 383 0038 0025     		movs	r5, #0
 384 003a E560     		str	r5, [r4, #12]
 907:Src/main.c    ****   LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 385              		.loc 1 907 3 is_stmt 1 view .LVU115
 386 003c 1C4F     		ldr	r7, .L11+12
 387 003e 2146     		mov	r1, r4
 388 0040 3846     		mov	r0, r7
 389 0042 FFF7FEFF 		bl	LL_GPIO_Init
 390              	.LVL16:
 908:Src/main.c    **** 
 909:Src/main.c    ****   GPIO_InitStruct.Pin = LL_GPIO_PIN_11;
 391              		.loc 1 909 3 view .LVU116
 392              		.loc 1 909 23 is_stmt 0 view .LVU117
 393 0046 1B4B     		ldr	r3, .L11+16
 394 0048 2360     		str	r3, [r4]
 910:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_FLOATING;
 395              		.loc 1 910 3 is_stmt 1 view .LVU118
 396              		.loc 1 910 24 is_stmt 0 view .LVU119
 397 004a 0426     		movs	r6, #4
 398 004c 6660     		str	r6, [r4, #4]
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 81


 911:Src/main.c    ****   LL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 399              		.loc 1 911 3 is_stmt 1 view .LVU120
 400 004e 2146     		mov	r1, r4
 401 0050 3846     		mov	r0, r7
 402 0052 FFF7FEFF 		bl	LL_GPIO_Init
 403              	.LVL17:
 912:Src/main.c    **** 
 913:Src/main.c    ****   /* USART3 interrupt Init */
 914:Src/main.c    ****   NVIC_SetPriority(USART3_IRQn, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 0, 0));
 404              		.loc 1 914 3 view .LVU121
 405              	.LBB164:
 406              	.LBI164:
1441:Drivers/CMSIS/Include/core_cm3.h **** {
 407              		.loc 3 1441 26 view .LVU122
 408              	.LBB165:
1443:Drivers/CMSIS/Include/core_cm3.h **** }
 409              		.loc 3 1443 3 view .LVU123
1443:Drivers/CMSIS/Include/core_cm3.h **** }
 410              		.loc 3 1443 26 is_stmt 0 view .LVU124
 411 0056 184B     		ldr	r3, .L11+20
 412 0058 DB68     		ldr	r3, [r3, #12]
 413              	.LVL18:
1443:Drivers/CMSIS/Include/core_cm3.h **** }
 414              		.loc 3 1443 26 view .LVU125
 415              	.LBE165:
 416              	.LBE164:
1573:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
 417              		.loc 3 1573 3 is_stmt 1 view .LVU126
1574:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
 418              		.loc 3 1574 3 view .LVU127
1575:Drivers/CMSIS/Include/core_cm3.h **** 
 419              		.loc 3 1575 3 view .LVU128
1577:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 420              		.loc 3 1577 3 view .LVU129
1578:Drivers/CMSIS/Include/core_cm3.h **** 
 421              		.loc 3 1578 3 view .LVU130
 422              		.loc 3 1580 3 view .LVU131
 423              	.LBB166:
 424              	.LBI166:
1524:Drivers/CMSIS/Include/core_cm3.h **** {
 425              		.loc 3 1524 22 view .LVU132
 426              	.LBB167:
1526:Drivers/CMSIS/Include/core_cm3.h ****   {
 427              		.loc 3 1526 3 view .LVU133
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
 428              		.loc 3 1532 5 view .LVU134
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
 429              		.loc 3 1532 55 is_stmt 0 view .LVU135
 430 005a 184B     		ldr	r3, .L11+24
 431 005c 83F82753 		strb	r5, [r3, #807]
 432              	.LVL19:
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
 433              		.loc 3 1532 55 view .LVU136
 434              	.LBE167:
 435              	.LBE166:
 915:Src/main.c    ****   NVIC_EnableIRQ(USART3_IRQn);
 436              		.loc 1 915 3 is_stmt 1 view .LVU137
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 82


 437              	.LBB168:
 438              	.LBI168:
1452:Drivers/CMSIS/Include/core_cm3.h **** {
 439              		.loc 3 1452 22 view .LVU138
 440              	.LBB169:
1454:Drivers/CMSIS/Include/core_cm3.h **** }
 441              		.loc 3 1454 3 view .LVU139
1454:Drivers/CMSIS/Include/core_cm3.h **** }
 442              		.loc 3 1454 50 is_stmt 0 view .LVU140
 443 0060 8022     		movs	r2, #128
 444 0062 5A60     		str	r2, [r3, #4]
 445              	.LVL20:
1454:Drivers/CMSIS/Include/core_cm3.h **** }
 446              		.loc 3 1454 50 view .LVU141
 447              	.LBE169:
 448              	.LBE168:
 916:Src/main.c    **** 
 917:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 1 */
 918:Src/main.c    **** 
 919:Src/main.c    ****   /* USER CODE END USART3_Init 1 */
 920:Src/main.c    ****   USART_InitStruct.BaudRate = 31250;
 449              		.loc 1 920 3 is_stmt 1 view .LVU142
 450              		.loc 1 920 29 is_stmt 0 view .LVU143
 451 0064 1649     		ldr	r1, .L11+28
 452 0066 47F61223 		movw	r3, #31250
 453 006a 0B60     		str	r3, [r1]
 921:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 454              		.loc 1 921 3 is_stmt 1 view .LVU144
 455              		.loc 1 921 30 is_stmt 0 view .LVU145
 456 006c 4D60     		str	r5, [r1, #4]
 922:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 457              		.loc 1 922 3 is_stmt 1 view .LVU146
 458              		.loc 1 922 29 is_stmt 0 view .LVU147
 459 006e 8D60     		str	r5, [r1, #8]
 923:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 460              		.loc 1 923 3 is_stmt 1 view .LVU148
 461              		.loc 1 923 27 is_stmt 0 view .LVU149
 462 0070 CD60     		str	r5, [r1, #12]
 924:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_RX;
 463              		.loc 1 924 3 is_stmt 1 view .LVU150
 464              		.loc 1 924 38 is_stmt 0 view .LVU151
 465 0072 0E61     		str	r6, [r1, #16]
 925:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 466              		.loc 1 925 3 is_stmt 1 view .LVU152
 467              		.loc 1 925 40 is_stmt 0 view .LVU153
 468 0074 4D61     		str	r5, [r1, #20]
 926:Src/main.c    ****   LL_USART_Init(USART3, &USART_InitStruct);
 469              		.loc 1 926 3 is_stmt 1 view .LVU154
 470 0076 134C     		ldr	r4, .L11+32
 471 0078 2046     		mov	r0, r4
 472 007a FFF7FEFF 		bl	LL_USART_Init
 473              	.LVL21:
 927:Src/main.c    ****   LL_USART_ConfigAsyncMode(USART3);
 474              		.loc 1 927 3 view .LVU155
 475              	.LBB170:
 476              	.LBI170:
 477              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h"
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 83


   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @file    stm32f1xx_ll_usart.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *      without specific prior written permission.
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   ******************************************************************************
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #ifndef __STM32F1xx_LL_USART_H
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __STM32F1xx_LL_USART_H
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #ifdef __cplusplus
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** extern "C" {
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #include "stm32f1xx.h"
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @addtogroup STM32F1xx_LL_Driver
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (UART4) || defined (UART5)
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL USART
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 84


  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Defines used for the bit position in the register and perform offsets*/
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define USART_POSITION_GTPR_GT                  USART_GTPR_GT_Pos
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** typedef struct
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 85


 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USART_CR1_OVER8)
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** } LL_USART_InitTypeDef;
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** typedef struct
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                            For more details, refer to description of this function.
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 86


 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_PE                          USART_SR_PE                   /*!< Parity error fla
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_FE                          USART_SR_FE                   /*!< Framing error fl
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_NE                          USART_SR_NE                   /*!< Noise detected f
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_ORE                         USART_SR_ORE                  /*!< Overrun error fl
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_IDLE                        USART_SR_IDLE                 /*!< Idle line detect
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_RXNE                        USART_SR_RXNE                 /*!< Read data regist
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_TC                          USART_SR_TC                   /*!< Transmission com
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_TXE                         USART_SR_TXE                  /*!< Transmit data re
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_LBD                         USART_SR_LBD                  /*!< LIN break detect
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_SR_CTS                         USART_SR_CTS                  /*!< CTS flag */
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */ 
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 87


 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USART_CR1_OVER8)
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 88


 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 89


 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Write a value in USART register
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __REG__ Register to be written
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Read a value in USART register
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __REG__ Register to be read
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Register value
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8_100(__PERIPHCLK__, __BAUDRATE__)      (((__PERIPHCLK__)*25)/(2*(__
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (__LL_USART_DIV_SAMPLING8_10
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (((__LL_USART_DIV_SAMPLING8_
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* UART BRR = mantissa + overflow + fraction
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****             = (UART DIVMANT << 4) + ((UART DIVFRAQ & 0xF8) << 1) + (UART DIVFRAQ & 0x07) */
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)             (((__LL_USART_DIVMANT_SAM
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                                                            ((__LL_USART_DIVFRAQ_SAM
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16_100(__PERIPHCLK__, __BAUDRATE__)     (((__PERIPHCLK__)*25)/(4*(__
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     (__LL_USART_DIV_SAMPLING16_1
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     (((__LL_USART_DIV_SAMPLING16
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* USART BRR = mantissa + overflow + fraction
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 90


 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****             = (USART DIVMANT << 4) + (USART DIVFRAQ & 0xF0) + (USART DIVFRAQ & 0x0F) */
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)            (((__LL_USART_DIVMANT_SAM
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  USART Enable
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         flags, in the USARTx_SR are set to their default values.
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 91


 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Receiver Disable
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Transmitter Enable
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Transmitter Disable
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         of Transmitter and Receiver
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 92


 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 93


 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_SetDataWidth
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_GetDataWidth
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USART_CR1_OVER8)
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 94


 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Oversampling mode
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 95


 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 96


 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 97


 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set the length of the stop bits
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR1          M             LL_USART_ConfigCharacter\n
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 98


 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                               uint32_t StopBits)
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Address of the USART node.
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         for wake up with address mark detection.
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_SetNodeAddress
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  NodeAddress 4 bit Address of the USART node.
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetNodeAddress(USART_TypeDef *USARTx, uint32_t NodeAddress)
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD, (NodeAddress & USART_CR2_ADD));
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return 4 bit Address of the USART node as set in ADD field of CR2.
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD));
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 99


 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 100


 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USART_CR3_ONEBIT)
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable One bit sampling method
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OneBitSampling_Feature */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 101


1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #if defined(USART_CR1_OVER8)
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (Baud rate value != 0)
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****                                           uint32_t BaudRate)
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   else
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Baud Rate
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   register uint32_t brrresult = 0x0U;
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     if ((usartdiv & 0xFFF7U) != 0U)
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     {
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****       usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     }
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 102


1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   else
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     {
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     }
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (brrresult);
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #else
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (Baud rate value != 0)
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudR
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Baud Rate
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk)
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   register uint32_t brrresult = 0x0U;
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   if ((usartdiv & 0xFFFFU) != 0U)
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   {
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****     brrresult = PeriphClk / usartdiv;
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   }
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (brrresult);
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** #endif /* USART_OverSampling_Feature */
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 103


1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable IrDA mode
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable IrDA mode
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN));
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 104


1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 105


1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK));
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 106


1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN));
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 107


1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, GuardTime << USART_POSITION_GTPR_GT);
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_POSITION_GTPR_GT);
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 108


1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL));
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable LIN mode
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 109


1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Disable LIN mode
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN));
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
1534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         dedicated functions
1536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
1537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
1538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
1539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 110


1540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
1541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
 478              		.loc 5 1544 22 view .LVU156
 479              	.LBB171:
1545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
1547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
1548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 480              		.loc 5 1549 3 view .LVU157
 481 007e 2369     		ldr	r3, [r4, #16]
 482 0080 23F49043 		bic	r3, r3, #18432
 483 0084 2361     		str	r3, [r4, #16]
1550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 484              		.loc 5 1550 3 view .LVU158
 485 0086 6369     		ldr	r3, [r4, #20]
 486 0088 23F02A03 		bic	r3, r3, #42
 487 008c 6361     		str	r3, [r4, #20]
 488              	.LVL22:
 489              		.loc 5 1550 3 is_stmt 0 view .LVU159
 490              	.LBE171:
 491              	.LBE170:
 928:Src/main.c    ****   LL_USART_Enable(USART3);
 492              		.loc 1 928 3 is_stmt 1 view .LVU160
 493              	.LBB172:
 494              	.LBI172:
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
 495              		.loc 5 429 22 view .LVU161
 496              	.LBB173:
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 497              		.loc 5 431 3 view .LVU162
 498 008e E368     		ldr	r3, [r4, #12]
 499 0090 43F40053 		orr	r3, r3, #8192
 500 0094 E360     		str	r3, [r4, #12]
 501              	.LVL23:
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
 502              		.loc 5 431 3 is_stmt 0 view .LVU163
 503              	.LBE173:
 504              	.LBE172:
 929:Src/main.c    ****   /* USER CODE BEGIN USART3_Init 2 */
 930:Src/main.c    ****   LL_USART_EnableIT_RXNE(USART3);
 505              		.loc 1 930 3 is_stmt 1 view .LVU164
 506              	.LBB174:
 507              	.LBI174:
1551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
1555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
1556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 111


1561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
1570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
1571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         dedicated functions
1572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
1573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
1574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
1575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
1576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
1577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
1581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
1583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
1588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
1593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
1594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
1608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
1609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
1610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         dedicated functions
1611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
1612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
1613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
1614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
1615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
1616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
1617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 112


1618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
1621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
1623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
1624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
1626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
1627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
1628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
1633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
1634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
1639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
1647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
1648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         dedicated functions
1650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
1651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
1652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
1653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
1654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
1655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
1659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
1661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.*/
1663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
1665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
1666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
1671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
1672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 113


1675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
1676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
1677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
1678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
1687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
1688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         dedicated functions
1690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
1691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
1692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
1693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
1694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
1695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
1699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
1701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.*/
1703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
1705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
1706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* Synchronous mode is activated by default */
1707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
1708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
1709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
1714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
1715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
1720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
1729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
1730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         dedicated functions
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 114


1732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
1733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
1734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
1735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
1736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
1737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
1738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
1742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
1744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
1745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.*/
1746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
1747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
1749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
1754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
1755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
1756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
1757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
1769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
1770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         dedicated functions
1771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
1772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
1773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
1774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
1775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
1776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
1780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
1782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 115


1789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
1790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
1793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
1794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
1798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_IsActiveFlag_PE
1799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
1803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_PE) == (USART_SR_PE));
1805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
1809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_IsActiveFlag_FE
1810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
1814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_FE) == (USART_SR_FE));
1816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
1820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_IsActiveFlag_NE
1821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
1825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_NE) == (USART_SR_NE));
1827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
1831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_IsActiveFlag_ORE
1832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
1836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_ORE) == (USART_SR_ORE));
1838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
1842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_IsActiveFlag_IDLE
1843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 116


1846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
1847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_IDLE) == (USART_SR_IDLE));
1849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
1853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           RXNE          LL_USART_IsActiveFlag_RXNE
1854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
1858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_RXNE) == (USART_SR_RXNE));
1860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
1864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           TC            LL_USART_IsActiveFlag_TC
1865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
1869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_TC) == (USART_SR_TC));
1871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
1875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           TXE           LL_USART_IsActiveFlag_TXE
1876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
1880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_TXE) == (USART_SR_TXE));
1882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
1886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           LBD           LL_USART_IsActiveFlag_LBD
1889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
1893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_LBD) == (USART_SR_LBD));
1895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
1899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           CTS           LL_USART_IsActiveFlag_nCTS
1902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 117


1903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
1906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_CTS) == (USART_SR_CTS));
1908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
1912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          SBK           LL_USART_IsActiveFlag_SBK
1913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
1917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_SBK) == (USART_CR1_SBK));
1919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
1923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RWU           LL_USART_IsActiveFlag_RWU
1924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
1928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_RWU) == (USART_CR1_RWU));
1930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
1934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as 
1937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         NE, FE, ORE, IDLE would also be cleared.
1938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_ClearFlag_PE
1939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
1943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
1945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
1946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
1947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
1948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
1949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
1953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as 
1956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         PE, NE, ORE, IDLE would also be cleared.
1957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_ClearFlag_FE
1958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 118


1960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
1962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
1964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
1965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
1966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
1967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
1968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear Noise detected Flag
1972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as 
1975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         PE, FE, ORE, IDLE would also be cleared.
1976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_ClearFlag_NE
1977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
1981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
1982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
1983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
1984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
1985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
1986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
1987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
1988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
1989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
1990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
1991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as 
1994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         PE, NE, FE, IDLE would also be cleared.
1995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_ClearFlag_ORE
1996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
1997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
1998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
1999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
2000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
2001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
2002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
2003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
2004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
2005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
2006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
2007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
2009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
2010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
2011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
2012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as 
2013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         PE, NE, FE, ORE would also be cleared.
2014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_ClearFlag_IDLE
2015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
2016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 119


2017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
2019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
2020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   __IO uint32_t tmpreg;
2021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->SR;
2022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
2023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   tmpreg = USARTx->DR;
2024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   (void) tmpreg;
2025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
2026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
2028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear Transmission Complete Flag
2029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           TC            LL_USART_ClearFlag_TC
2030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
2031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
2032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TC(USART_TypeDef *USARTx)
2034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
2035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   WRITE_REG(USARTx->SR , ~(USART_SR_TC));
2036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
2037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
2039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear RX Not Empty Flag
2040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           RXNE          LL_USART_ClearFlag_RXNE
2041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
2042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
2043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_RXNE(USART_TypeDef *USARTx)
2045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
2046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   WRITE_REG(USARTx->SR , ~(USART_SR_RXNE));
2047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
2048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
2050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear LIN Break Detection Flag
2051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           LBD           LL_USART_ClearFlag_LBD
2054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
2055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
2056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_LBD(USART_TypeDef *USARTx)
2058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
2059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   WRITE_REG(USARTx->SR , ~(USART_SR_LBD));
2060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
2061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
2063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Clear CTS Interrupt Flag
2064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll SR           CTS           LL_USART_ClearFlag_nCTS
2067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
2068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
2069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_nCTS(USART_TypeDef *USARTx)
2071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
2072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   WRITE_REG(USARTx->SR , ~(USART_SR_CTS));
2073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 120


2074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
2076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @}
2077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /** @defgroup USART_LL_EF_IT_Management IT_Management
2080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @{
2081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
2084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable IDLE Interrupt
2085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_EnableIT_IDLE
2086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
2087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
2088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_IDLE(USART_TypeDef *USARTx)
2090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
2091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_IDLEIE);
2092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** }
2093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** 
2094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** /**
2095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @brief  Enable RX Not Empty Interrupt
2096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
2097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @param  USARTx USART Instance
2098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   * @retval None
2099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   */
2100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
 508              		.loc 5 2100 22 view .LVU165
 509              	.LBB175:
2101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h **** {
2102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 510              		.loc 5 2102 3 view .LVU166
 511 0096 E368     		ldr	r3, [r4, #12]
 512 0098 43F02003 		orr	r3, r3, #32
 513 009c E360     		str	r3, [r4, #12]
 514              	.LVL24:
 515              		.loc 5 2102 3 is_stmt 0 view .LVU167
 516              	.LBE175:
 517              	.LBE174:
 931:Src/main.c    ****   /* USER CODE END USART3_Init 2 */
 932:Src/main.c    **** }
 518              		.loc 1 932 1 view .LVU168
 519 009e 03B0     		add	sp, sp, #12
 520              	.LCFI7:
 521              		.cfi_def_cfa_offset 20
 522              		@ sp needed
 523 00a0 F0BD     		pop	{r4, r5, r6, r7, pc}
 524              	.L12:
 525 00a2 00BF     		.align	2
 526              	.L11:
 527 00a4 00100240 		.word	1073876992
 528 00a8 00000000 		.word	.LANCHOR0
 529 00ac 04000404 		.word	67371012
 530 00b0 000C0140 		.word	1073810432
 531 00b4 08000804 		.word	67633160
 532 00b8 00ED00E0 		.word	-536810240
 533 00bc 00E100E0 		.word	-536813312
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 121


 534 00c0 00000000 		.word	.LANCHOR1
 535 00c4 00480040 		.word	1073760256
 536              		.cfi_endproc
 537              	.LFE725:
 539              		.section	.text.MX_TIM2_Init,"ax",%progbits
 540              		.align	1
 541              		.syntax unified
 542              		.thumb
 543              		.thumb_func
 544              		.fpu softvfp
 546              	MX_TIM2_Init:
 547              	.LFB722:
 767:Src/main.c    ****   /* Peripheral clock enable */
 548              		.loc 1 767 1 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 8
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 553              	.LCFI8:
 554              		.cfi_def_cfa_offset 36
 555              		.cfi_offset 4, -36
 556              		.cfi_offset 5, -32
 557              		.cfi_offset 6, -28
 558              		.cfi_offset 7, -24
 559              		.cfi_offset 8, -20
 560              		.cfi_offset 9, -16
 561              		.cfi_offset 10, -12
 562              		.cfi_offset 11, -8
 563              		.cfi_offset 14, -4
 564 0004 83B0     		sub	sp, sp, #12
 565              	.LCFI9:
 566              		.cfi_def_cfa_offset 48
 769:Src/main.c    **** 
 567              		.loc 1 769 3 view .LVU170
 568              	.LVL25:
 569              	.LBB176:
 570              	.LBI176:
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 571              		.loc 2 463 22 view .LVU171
 572              	.LBB177:
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 573              		.loc 2 465 3 view .LVU172
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 574              		.loc 2 466 3 view .LVU173
 575 0006 514B     		ldr	r3, .L15
 576 0008 DA69     		ldr	r2, [r3, #28]
 577 000a 42F00102 		orr	r2, r2, #1
 578 000e DA61     		str	r2, [r3, #28]
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 579              		.loc 2 468 3 view .LVU174
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 580              		.loc 2 468 12 is_stmt 0 view .LVU175
 581 0010 DB69     		ldr	r3, [r3, #28]
 582 0012 03F00103 		and	r3, r3, #1
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 583              		.loc 2 468 10 view .LVU176
 584 0016 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 122


 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 585              		.loc 2 469 3 is_stmt 1 view .LVU177
 586 0018 019B     		ldr	r3, [sp, #4]
 587              	.LVL26:
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 588              		.loc 2 469 3 is_stmt 0 view .LVU178
 589              	.LBE177:
 590              	.LBE176:
 772:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcAddress = (uint32_t)&GPIOA->ODR;
 591              		.loc 1 772 3 is_stmt 1 view .LVU179
 592 001a 4D4E     		ldr	r6, .L15+4
 593 001c 0221     		movs	r1, #2
 594 001e 3046     		mov	r0, r6
 595 0020 FFF7FEFF 		bl	LL_DMA_DeInit
 596              	.LVL27:
 773:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_High;
 597              		.loc 1 773 3 view .LVU180
 773:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_High;
 598              		.loc 1 773 40 is_stmt 0 view .LVU181
 599 0024 4B4C     		ldr	r4, .L15+8
 600 0026 DFF858B1 		ldr	fp, .L15+52
 601 002a C4F800B0 		str	fp, [r4]
 774:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 602              		.loc 1 774 3 is_stmt 1 view .LVU182
 774:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 603              		.loc 1 774 42 is_stmt 0 view .LVU183
 604 002e 4A4B     		ldr	r3, .L15+12
 774:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 605              		.loc 1 774 40 view .LVU184
 606 0030 6360     		str	r3, [r4, #4]
 775:Src/main.c    ****   DMA_InitStruct.NbData = 0;
 607              		.loc 1 775 3 is_stmt 1 view .LVU185
 775:Src/main.c    ****   DMA_InitStruct.NbData = 0;
 608              		.loc 1 775 28 is_stmt 0 view .LVU186
 609 0032 1027     		movs	r7, #16
 610 0034 A760     		str	r7, [r4, #8]
 776:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 611              		.loc 1 776 3 is_stmt 1 view .LVU187
 776:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 612              		.loc 1 776 25 is_stmt 0 view .LVU188
 613 0036 0025     		movs	r5, #0
 614 0038 2562     		str	r5, [r4, #32]
 777:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_NOINCREMENT;
 615              		.loc 1 777 3 is_stmt 1 view .LVU189
 777:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_NOINCREMENT;
 616              		.loc 1 777 40 is_stmt 0 view .LVU190
 617 003a 2561     		str	r5, [r4, #16]
 778:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 618              		.loc 1 778 3 is_stmt 1 view .LVU191
 778:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 619              		.loc 1 778 40 is_stmt 0 view .LVU192
 620 003c 6561     		str	r5, [r4, #20]
 779:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 621              		.loc 1 779 3 is_stmt 1 view .LVU193
 779:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 622              		.loc 1 779 41 is_stmt 0 view .LVU194
 623 003e 4FF4007A 		mov	r10, #512
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 123


 624 0042 C4F818A0 		str	r10, [r4, #24]
 780:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 625              		.loc 1 780 3 is_stmt 1 view .LVU195
 780:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 626              		.loc 1 780 41 is_stmt 0 view .LVU196
 627 0046 4FF48069 		mov	r9, #1024
 628 004a C4F81C90 		str	r9, [r4, #28]
 781:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 629              		.loc 1 781 3 is_stmt 1 view .LVU197
 781:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 630              		.loc 1 781 23 is_stmt 0 view .LVU198
 631 004e E560     		str	r5, [r4, #12]
 782:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_2, &DMA_InitStruct);
 632              		.loc 1 782 3 is_stmt 1 view .LVU199
 782:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_2, &DMA_InitStruct);
 633              		.loc 1 782 27 is_stmt 0 view .LVU200
 634 0050 4FF44058 		mov	r8, #12288
 635 0054 C4F82480 		str	r8, [r4, #36]
 783:Src/main.c    **** 
 636              		.loc 1 783 3 is_stmt 1 view .LVU201
 637 0058 2246     		mov	r2, r4
 638 005a 0221     		movs	r1, #2
 639 005c 3046     		mov	r0, r6
 640 005e FFF7FEFF 		bl	LL_DMA_Init
 641              	.LVL28:
 785:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcAddress = (uint32_t)&GPIOA->ODR;
 642              		.loc 1 785 3 view .LVU202
 643 0062 0521     		movs	r1, #5
 644 0064 3046     		mov	r0, r6
 645 0066 FFF7FEFF 		bl	LL_DMA_DeInit
 646              	.LVL29:
 786:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_framedata;
 647              		.loc 1 786 3 view .LVU203
 786:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_framedata;
 648              		.loc 1 786 40 is_stmt 0 view .LVU204
 649 006a C4F800B0 		str	fp, [r4]
 787:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 650              		.loc 1 787 3 is_stmt 1 view .LVU205
 787:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 651              		.loc 1 787 42 is_stmt 0 view .LVU206
 652 006e 3B4B     		ldr	r3, .L15+16
 787:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 653              		.loc 1 787 40 view .LVU207
 654 0070 6360     		str	r3, [r4, #4]
 788:Src/main.c    ****   DMA_InitStruct.NbData = 0;
 655              		.loc 1 788 3 is_stmt 1 view .LVU208
 788:Src/main.c    ****   DMA_InitStruct.NbData = 0;
 656              		.loc 1 788 28 is_stmt 0 view .LVU209
 657 0072 A760     		str	r7, [r4, #8]
 789:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 658              		.loc 1 789 3 is_stmt 1 view .LVU210
 789:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 659              		.loc 1 789 25 is_stmt 0 view .LVU211
 660 0074 2562     		str	r5, [r4, #32]
 790:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_INCREMENT;
 661              		.loc 1 790 3 is_stmt 1 view .LVU212
 790:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_INCREMENT;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 124


 662              		.loc 1 790 40 is_stmt 0 view .LVU213
 663 0076 2561     		str	r5, [r4, #16]
 791:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 664              		.loc 1 791 3 is_stmt 1 view .LVU214
 791:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 665              		.loc 1 791 40 is_stmt 0 view .LVU215
 666 0078 8023     		movs	r3, #128
 667 007a 6361     		str	r3, [r4, #20]
 792:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 668              		.loc 1 792 3 is_stmt 1 view .LVU216
 792:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 669              		.loc 1 792 41 is_stmt 0 view .LVU217
 670 007c C4F818A0 		str	r10, [r4, #24]
 793:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 671              		.loc 1 793 3 is_stmt 1 view .LVU218
 793:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 672              		.loc 1 793 41 is_stmt 0 view .LVU219
 673 0080 C4F81C90 		str	r9, [r4, #28]
 794:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 674              		.loc 1 794 3 is_stmt 1 view .LVU220
 794:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 675              		.loc 1 794 23 is_stmt 0 view .LVU221
 676 0084 E560     		str	r5, [r4, #12]
 795:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_5, &DMA_InitStruct);
 677              		.loc 1 795 3 is_stmt 1 view .LVU222
 795:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_5, &DMA_InitStruct);
 678              		.loc 1 795 27 is_stmt 0 view .LVU223
 679 0086 C4F82480 		str	r8, [r4, #36]
 796:Src/main.c    **** 
 680              		.loc 1 796 3 is_stmt 1 view .LVU224
 681 008a 2246     		mov	r2, r4
 682 008c 0521     		movs	r1, #5
 683 008e 3046     		mov	r0, r6
 684 0090 FFF7FEFF 		bl	LL_DMA_Init
 685              	.LVL30:
 799:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcAddress = (uint32_t)&GPIOA->ODR;
 686              		.loc 1 799 3 view .LVU225
 687 0094 0721     		movs	r1, #7
 688 0096 3046     		mov	r0, r6
 689 0098 FFF7FEFF 		bl	LL_DMA_DeInit
 690              	.LVL31:
 800:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_Low;
 691              		.loc 1 800 3 view .LVU226
 800:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstAddress = (uint32_t)&WS2812_IO_Low;
 692              		.loc 1 800 40 is_stmt 0 view .LVU227
 693 009c C4F800B0 		str	fp, [r4]
 801:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 694              		.loc 1 801 3 is_stmt 1 view .LVU228
 801:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 695              		.loc 1 801 42 is_stmt 0 view .LVU229
 696 00a0 2F4B     		ldr	r3, .L15+20
 801:Src/main.c    ****   DMA_InitStruct.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 697              		.loc 1 801 40 view .LVU230
 698 00a2 6360     		str	r3, [r4, #4]
 802:Src/main.c    ****   DMA_InitStruct.NbData = 0;
 699              		.loc 1 802 3 is_stmt 1 view .LVU231
 802:Src/main.c    ****   DMA_InitStruct.NbData = 0;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 125


 700              		.loc 1 802 28 is_stmt 0 view .LVU232
 701 00a4 A760     		str	r7, [r4, #8]
 803:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 702              		.loc 1 803 3 is_stmt 1 view .LVU233
 803:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcIncMode = LL_DMA_PERIPH_NOINCREMENT;
 703              		.loc 1 803 25 is_stmt 0 view .LVU234
 704 00a6 2562     		str	r5, [r4, #32]
 804:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_NOINCREMENT;
 705              		.loc 1 804 3 is_stmt 1 view .LVU235
 804:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_NOINCREMENT;
 706              		.loc 1 804 40 is_stmt 0 view .LVU236
 707 00a8 2561     		str	r5, [r4, #16]
 805:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 708              		.loc 1 805 3 is_stmt 1 view .LVU237
 805:Src/main.c    ****   DMA_InitStruct.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_WORD;
 709              		.loc 1 805 40 is_stmt 0 view .LVU238
 710 00aa 6561     		str	r5, [r4, #20]
 806:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 711              		.loc 1 806 3 is_stmt 1 view .LVU239
 806:Src/main.c    ****   DMA_InitStruct.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_HALFWORD;
 712              		.loc 1 806 41 is_stmt 0 view .LVU240
 713 00ac C4F818A0 		str	r10, [r4, #24]
 807:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 714              		.loc 1 807 3 is_stmt 1 view .LVU241
 807:Src/main.c    ****   DMA_InitStruct.Mode = LL_DMA_MODE_NORMAL;
 715              		.loc 1 807 41 is_stmt 0 view .LVU242
 716 00b0 C4F81C90 		str	r9, [r4, #28]
 808:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 717              		.loc 1 808 3 is_stmt 1 view .LVU243
 808:Src/main.c    ****   DMA_InitStruct.Priority = LL_DMA_PRIORITY_VERYHIGH;
 718              		.loc 1 808 23 is_stmt 0 view .LVU244
 719 00b4 E560     		str	r5, [r4, #12]
 809:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_7, &DMA_InitStruct);
 720              		.loc 1 809 3 is_stmt 1 view .LVU245
 809:Src/main.c    ****   LL_DMA_Init(DMA1, LL_DMA_CHANNEL_7, &DMA_InitStruct);
 721              		.loc 1 809 27 is_stmt 0 view .LVU246
 722 00b6 C4F82480 		str	r8, [r4, #36]
 810:Src/main.c    **** 
 723              		.loc 1 810 3 is_stmt 1 view .LVU247
 724 00ba 2246     		mov	r2, r4
 725 00bc 0721     		movs	r1, #7
 726 00be 3046     		mov	r0, r6
 727 00c0 FFF7FEFF 		bl	LL_DMA_Init
 728              	.LVL32:
 813:Src/main.c    ****   NVIC_EnableIRQ(TIM2_IRQn);
 729              		.loc 1 813 3 view .LVU248
 730              	.LBB178:
 731              	.LBI178:
1441:Drivers/CMSIS/Include/core_cm3.h **** {
 732              		.loc 3 1441 26 view .LVU249
 733              	.LBB179:
1443:Drivers/CMSIS/Include/core_cm3.h **** }
 734              		.loc 3 1443 3 view .LVU250
1443:Drivers/CMSIS/Include/core_cm3.h **** }
 735              		.loc 3 1443 26 is_stmt 0 view .LVU251
 736 00c4 274B     		ldr	r3, .L15+24
 737 00c6 DB68     		ldr	r3, [r3, #12]
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 126


 738              	.LVL33:
1443:Drivers/CMSIS/Include/core_cm3.h **** }
 739              		.loc 3 1443 26 view .LVU252
 740              	.LBE179:
 741              	.LBE178:
1573:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
 742              		.loc 3 1573 3 is_stmt 1 view .LVU253
1574:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
 743              		.loc 3 1574 3 view .LVU254
1575:Drivers/CMSIS/Include/core_cm3.h **** 
 744              		.loc 3 1575 3 view .LVU255
1577:Drivers/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 745              		.loc 3 1577 3 view .LVU256
1578:Drivers/CMSIS/Include/core_cm3.h **** 
 746              		.loc 3 1578 3 view .LVU257
 747              		.loc 3 1580 3 view .LVU258
 748              	.LBB180:
 749              	.LBI180:
1524:Drivers/CMSIS/Include/core_cm3.h **** {
 750              		.loc 3 1524 22 view .LVU259
 751              	.LBB181:
1526:Drivers/CMSIS/Include/core_cm3.h ****   {
 752              		.loc 3 1526 3 view .LVU260
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
 753              		.loc 3 1532 5 view .LVU261
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
 754              		.loc 3 1532 55 is_stmt 0 view .LVU262
 755 00c8 274B     		ldr	r3, .L15+28
 756 00ca 83F81C53 		strb	r5, [r3, #796]
 757              	.LVL34:
1532:Drivers/CMSIS/Include/core_cm3.h ****   }
 758              		.loc 3 1532 55 view .LVU263
 759              	.LBE181:
 760              	.LBE180:
 814:Src/main.c    **** 
 761              		.loc 1 814 3 is_stmt 1 view .LVU264
 762              	.LBB182:
 763              	.LBI182:
1452:Drivers/CMSIS/Include/core_cm3.h **** {
 764              		.loc 3 1452 22 view .LVU265
 765              	.LBB183:
1454:Drivers/CMSIS/Include/core_cm3.h **** }
 766              		.loc 3 1454 3 view .LVU266
1454:Drivers/CMSIS/Include/core_cm3.h **** }
 767              		.loc 3 1454 50 is_stmt 0 view .LVU267
 768 00ce 4FF08052 		mov	r2, #268435456
 769 00d2 1A60     		str	r2, [r3]
 770              	.LVL35:
1454:Drivers/CMSIS/Include/core_cm3.h **** }
 771              		.loc 3 1454 50 view .LVU268
 772              	.LBE183:
 773              	.LBE182:
 816:Src/main.c    **** 
 774              		.loc 1 816 3 is_stmt 1 view .LVU269
 775              	.LBB184:
 776              	.LBI184:
 777              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 127


   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @file    stm32f1xx_ll_dma.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *      without specific prior written permission.
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   ******************************************************************************
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #ifndef __STM32F1xx_LL_DMA_H
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __STM32F1xx_LL_DMA_H
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #ifdef __cplusplus
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** extern "C" {
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #include "stm32f1xx.h"
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @addtogroup STM32F1xx_LL_Driver
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined (DMA1) || defined (DMA2)
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 128


  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** };
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** typedef struct
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 129


 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         is incremented or not.
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         is incremented or not.
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 130


 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 131


 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000001U /*!< DMA Channel 1 */
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000002U /*!< DMA Channel 2 */
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000003U /*!< DMA Channel 3 */
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000004U /*!< DMA Channel 4 */
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000005U /*!< DMA Channel 5 */
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000006U /*!< DMA Channel 6 */
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000007U /*!< DMA Channel 7 */
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 132


 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 133


 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Write a value in DMA register
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __REG__ Register to be written
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Read a value in DMA register
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __REG__ Register to be read
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Register value
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval DMAx
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined(DMA2)
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)   \
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) > ((uint32_t)DMA1_Channel7)) ?  DMA2 : DMA1)
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #else
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined (DMA2)
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel1)) ? LL_DMA_CHANNEL_1 : \
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel2)) ? LL_DMA_CHANNEL_2 : \
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel3)) ? LL_DMA_CHANNEL_3 : \
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel4)) ? LL_DMA_CHANNEL_4 : \
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA2_Channel5)) ? LL_DMA_CHANNEL_5 : \
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #else
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 134


 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval DMAx_Channely
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #if defined (DMA2)
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA2)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  DMA1_Channel7)
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #else
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  DMA1_Channel7)
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** #endif
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  * @{
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****  */
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 135


 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Enable DMA channel.
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Disable DMA channel.
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_EN) == (DMA_CCR_EN));
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 136


 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              Configuration);
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 137


 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              Mode);
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 138


 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_CIRC));
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 139


 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_PINC));
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_MINC));
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Peripheral size.
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 140


 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Peripheral size.
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Memory size.
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 141


 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Memory size.
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Channel priority level.
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              Priority);
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 142


 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel priority level.
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CCR_PL));
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   This action has no effect if
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         channel is enabled.
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         remaining bytes to be transmitted.
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 143


 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                    DMA_CNDTR_NDT));
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Each IP using DMA provides an API to get directly the register adress (LL_PPP_DMA_GetRe
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   /* Direction Memory to Periph */
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   {
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   }
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   else
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   {
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   }
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set the Memory address.
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 144


 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set the Peripheral address.
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Memory address.
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 145


1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Peripheral address.
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 146


1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EF_FLAG_Management FLAG_Management
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 147


1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 1 global interrupt flag.
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          GIF1          LL_DMA_IsActiveFlag_GI1
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI1(DMA_TypeDef *DMAx)
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF1) == (DMA_ISR_GIF1));
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 2 global interrupt flag.
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          GIF2          LL_DMA_IsActiveFlag_GI2
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI2(DMA_TypeDef *DMAx)
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF2) == (DMA_ISR_GIF2));
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 3 global interrupt flag.
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          GIF3          LL_DMA_IsActiveFlag_GI3
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI3(DMA_TypeDef *DMAx)
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF3) == (DMA_ISR_GIF3));
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 4 global interrupt flag.
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          GIF4          LL_DMA_IsActiveFlag_GI4
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI4(DMA_TypeDef *DMAx)
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF4) == (DMA_ISR_GIF4));
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 5 global interrupt flag.
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          GIF5          LL_DMA_IsActiveFlag_GI5
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI5(DMA_TypeDef *DMAx)
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF5) == (DMA_ISR_GIF5));
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 6 global interrupt flag.
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          GIF6          LL_DMA_IsActiveFlag_GI6
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 148


1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI6(DMA_TypeDef *DMAx)
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF6) == (DMA_ISR_GIF6));
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 7 global interrupt flag.
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          GIF7          LL_DMA_IsActiveFlag_GI7
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI7(DMA_TypeDef *DMAx)
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_GIF7) == (DMA_ISR_GIF7));
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 1 transfer complete flag.
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TCIF1         LL_DMA_IsActiveFlag_TC1
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC1(DMA_TypeDef *DMAx)
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF1) == (DMA_ISR_TCIF1));
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 2 transfer complete flag.
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TCIF2         LL_DMA_IsActiveFlag_TC2
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC2(DMA_TypeDef *DMAx)
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF2) == (DMA_ISR_TCIF2));
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 3 transfer complete flag.
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TCIF3         LL_DMA_IsActiveFlag_TC3
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC3(DMA_TypeDef *DMAx)
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF3) == (DMA_ISR_TCIF3));
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 4 transfer complete flag.
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TCIF4         LL_DMA_IsActiveFlag_TC4
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 149


1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC4(DMA_TypeDef *DMAx)
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF4) == (DMA_ISR_TCIF4));
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 5 transfer complete flag.
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TCIF5         LL_DMA_IsActiveFlag_TC5
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC5(DMA_TypeDef *DMAx)
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF5) == (DMA_ISR_TCIF5));
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 6 transfer complete flag.
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TCIF6         LL_DMA_IsActiveFlag_TC6
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC6(DMA_TypeDef *DMAx)
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF6) == (DMA_ISR_TCIF6));
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 7 transfer complete flag.
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TCIF7         LL_DMA_IsActiveFlag_TC7
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC7(DMA_TypeDef *DMAx)
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TCIF7) == (DMA_ISR_TCIF7));
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 1 half transfer flag.
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          HTIF1         LL_DMA_IsActiveFlag_HT1
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT1(DMA_TypeDef *DMAx)
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF1) == (DMA_ISR_HTIF1));
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 2 half transfer flag.
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          HTIF2         LL_DMA_IsActiveFlag_HT2
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT2(DMA_TypeDef *DMAx)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 150


1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF2) == (DMA_ISR_HTIF2));
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 3 half transfer flag.
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          HTIF3         LL_DMA_IsActiveFlag_HT3
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT3(DMA_TypeDef *DMAx)
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF3) == (DMA_ISR_HTIF3));
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 4 half transfer flag.
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          HTIF4         LL_DMA_IsActiveFlag_HT4
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT4(DMA_TypeDef *DMAx)
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF4) == (DMA_ISR_HTIF4));
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 5 half transfer flag.
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          HTIF5         LL_DMA_IsActiveFlag_HT5
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT5(DMA_TypeDef *DMAx)
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF5) == (DMA_ISR_HTIF5));
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 6 half transfer flag.
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          HTIF6         LL_DMA_IsActiveFlag_HT6
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT6(DMA_TypeDef *DMAx)
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF6) == (DMA_ISR_HTIF6));
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 7 half transfer flag.
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          HTIF7         LL_DMA_IsActiveFlag_HT7
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT7(DMA_TypeDef *DMAx)
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_HTIF7) == (DMA_ISR_HTIF7));
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 151


1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 1 transfer error flag.
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TEIF1         LL_DMA_IsActiveFlag_TE1
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE1(DMA_TypeDef *DMAx)
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF1) == (DMA_ISR_TEIF1));
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 2 transfer error flag.
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TEIF2         LL_DMA_IsActiveFlag_TE2
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE2(DMA_TypeDef *DMAx)
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF2) == (DMA_ISR_TEIF2));
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 3 transfer error flag.
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TEIF3         LL_DMA_IsActiveFlag_TE3
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE3(DMA_TypeDef *DMAx)
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF3) == (DMA_ISR_TEIF3));
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 4 transfer error flag.
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TEIF4         LL_DMA_IsActiveFlag_TE4
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE4(DMA_TypeDef *DMAx)
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF4) == (DMA_ISR_TEIF4));
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 5 transfer error flag.
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TEIF5         LL_DMA_IsActiveFlag_TE5
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE5(DMA_TypeDef *DMAx)
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF5) == (DMA_ISR_TEIF5));
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 152


1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 6 transfer error flag.
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TEIF6         LL_DMA_IsActiveFlag_TE6
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE6(DMA_TypeDef *DMAx)
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF6) == (DMA_ISR_TEIF6));
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Get Channel 7 transfer error flag.
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll ISR          TEIF7         LL_DMA_IsActiveFlag_TE7
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE7(DMA_TypeDef *DMAx)
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   return (READ_BIT(DMAx->ISR, DMA_ISR_TEIF7) == (DMA_ISR_TEIF7));
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 1 global interrupt flag.
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CGIF1         LL_DMA_ClearFlag_GI1
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI1(DMA_TypeDef *DMAx)
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF1);
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 2 global interrupt flag.
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CGIF2         LL_DMA_ClearFlag_GI2
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI2(DMA_TypeDef *DMAx)
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF2);
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 3 global interrupt flag.
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CGIF3         LL_DMA_ClearFlag_GI3
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI3(DMA_TypeDef *DMAx)
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF3);
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 4 global interrupt flag.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 153


1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CGIF4         LL_DMA_ClearFlag_GI4
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI4(DMA_TypeDef *DMAx)
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF4);
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 5 global interrupt flag.
1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CGIF5         LL_DMA_ClearFlag_GI5
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI5(DMA_TypeDef *DMAx)
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF5);
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 6 global interrupt flag.
1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CGIF6         LL_DMA_ClearFlag_GI6
1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI6(DMA_TypeDef *DMAx)
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF6);
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 7 global interrupt flag.
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CGIF7         LL_DMA_ClearFlag_GI7
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI7(DMA_TypeDef *DMAx)
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF7);
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 1  transfer complete flag.
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF1        LL_DMA_ClearFlag_TC1
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC1(DMA_TypeDef *DMAx)
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF1);
1534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 2  transfer complete flag.
1538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF2        LL_DMA_ClearFlag_TC2
1539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 154


1540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC2(DMA_TypeDef *DMAx)
1543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF2);
1545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 3  transfer complete flag.
1549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF3        LL_DMA_ClearFlag_TC3
1550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC3(DMA_TypeDef *DMAx)
1554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF3);
1556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 4  transfer complete flag.
1560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF4        LL_DMA_ClearFlag_TC4
1561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC4(DMA_TypeDef *DMAx)
1565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF4);
1567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 5  transfer complete flag.
1571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF5        LL_DMA_ClearFlag_TC5
1572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC5(DMA_TypeDef *DMAx)
1576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF5);
1578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 6  transfer complete flag.
1582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF6        LL_DMA_ClearFlag_TC6
1583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC6(DMA_TypeDef *DMAx)
1587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF6);
1589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 7  transfer complete flag.
1593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF7        LL_DMA_ClearFlag_TC7
1594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 155


1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC7(DMA_TypeDef *DMAx)
1598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF7);
1600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 1  half transfer flag.
1604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF1        LL_DMA_ClearFlag_HT1
1605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT1(DMA_TypeDef *DMAx)
1609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF1);
1611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 2  half transfer flag.
1615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF2        LL_DMA_ClearFlag_HT2
1616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT2(DMA_TypeDef *DMAx)
1620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF2);
1622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 3  half transfer flag.
1626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF3        LL_DMA_ClearFlag_HT3
1627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT3(DMA_TypeDef *DMAx)
1631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF3);
1633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 4  half transfer flag.
1637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF4        LL_DMA_ClearFlag_HT4
1638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT4(DMA_TypeDef *DMAx)
1642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF4);
1644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 5  half transfer flag.
1648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF5        LL_DMA_ClearFlag_HT5
1649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT5(DMA_TypeDef *DMAx)
1653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 156


1654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF5);
1655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 6  half transfer flag.
1659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF6        LL_DMA_ClearFlag_HT6
1660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT6(DMA_TypeDef *DMAx)
1664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF6);
1666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 7  half transfer flag.
1670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF7        LL_DMA_ClearFlag_HT7
1671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT7(DMA_TypeDef *DMAx)
1675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF7);
1677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 1 transfer error flag.
1681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF1        LL_DMA_ClearFlag_TE1
1682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE1(DMA_TypeDef *DMAx)
1686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF1);
1688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 2 transfer error flag.
1692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF2        LL_DMA_ClearFlag_TE2
1693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE2(DMA_TypeDef *DMAx)
1697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF2);
1699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 3 transfer error flag.
1703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF3        LL_DMA_ClearFlag_TE3
1704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE3(DMA_TypeDef *DMAx)
1708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF3);
1710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 157


1711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 4 transfer error flag.
1714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF4        LL_DMA_ClearFlag_TE4
1715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE4(DMA_TypeDef *DMAx)
1719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF4);
1721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 5 transfer error flag.
1725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF5        LL_DMA_ClearFlag_TE5
1726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE5(DMA_TypeDef *DMAx)
1730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF5);
1732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 6 transfer error flag.
1736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF6        LL_DMA_ClearFlag_TE6
1737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE6(DMA_TypeDef *DMAx)
1741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF6);
1743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Clear Channel 7 transfer error flag.
1747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF7        LL_DMA_ClearFlag_TE7
1748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE7(DMA_TypeDef *DMAx)
1752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF7);
1754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
1755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @}
1758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /** @defgroup DMA_LL_EF_IT_Management IT_Management
1761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @{
1762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** 
1764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** /**
1765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @brief  Enable Transfer complete interrupt.
1766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @rmtoll CCR          TCIE          LL_DMA_EnableIT_TC
1767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 158


1768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   * @retval None
1777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   */
1778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableIT_TC(DMA_TypeDef *DMAx, uint32_t Channel)
 778              		.loc 6 1778 22 view .LVU270
 779              	.LBB185:
1779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
1780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 780              		.loc 6 1780 3 view .LVU271
 781 00d4 254A     		ldr	r2, .L15+32
 782 00d6 1368     		ldr	r3, [r2]
 783 00d8 43F00203 		orr	r3, r3, #2
 784 00dc 1360     		str	r3, [r2]
 785              	.LVL36:
 786              		.loc 6 1780 3 is_stmt 0 view .LVU272
 787              	.LBE185:
 788              	.LBE184:
 818:Src/main.c    **** 
 789              		.loc 1 818 3 is_stmt 1 view .LVU273
 820:Src/main.c    ****   /* Time base configuration */
 790              		.loc 1 820 3 view .LVU274
 820:Src/main.c    ****   /* Time base configuration */
 791              		.loc 1 820 47 is_stmt 0 view .LVU275
 792 00de 244B     		ldr	r3, .L15+36
 793 00e0 1B68     		ldr	r3, [r3]
 794 00e2 244A     		ldr	r2, .L15+40
 795 00e4 A2FB0323 		umull	r2, r3, r2, r3
 820:Src/main.c    ****   /* Time base configuration */
 796              		.loc 1 820 20 view .LVU276
 797 00e8 5B0D     		lsrs	r3, r3, #21
 820:Src/main.c    ****   /* Time base configuration */
 798              		.loc 1 820 18 view .LVU277
 799 00ea 013B     		subs	r3, r3, #1
 800              	.LVL37:
 822:Src/main.c    ****   TIM_InitStruct.Prescaler = PrescalerValue;
 801              		.loc 1 822 3 is_stmt 1 view .LVU278
 822:Src/main.c    ****   TIM_InitStruct.Prescaler = PrescalerValue;
 802              		.loc 1 822 29 is_stmt 0 view .LVU279
 803 00ec 2249     		ldr	r1, .L15+44
 804 00ee 1D22     		movs	r2, #29
 805 00f0 8A60     		str	r2, [r1, #8]
 823:Src/main.c    ****   TIM_InitStruct.ClockDivision = 0;
 806              		.loc 1 823 3 is_stmt 1 view .LVU280
 823:Src/main.c    ****   TIM_InitStruct.ClockDivision = 0;
 807              		.loc 1 823 28 is_stmt 0 view .LVU281
 808 00f2 0B80     		strh	r3, [r1]	@ movhi
 824:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 809              		.loc 1 824 3 is_stmt 1 view .LVU282
 824:Src/main.c    ****   TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
 810              		.loc 1 824 32 is_stmt 0 view .LVU283
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 159


 811 00f4 CD60     		str	r5, [r1, #12]
 825:Src/main.c    ****   LL_TIM_Init(TIM2, &TIM_InitStruct);
 812              		.loc 1 825 3 is_stmt 1 view .LVU284
 825:Src/main.c    ****   LL_TIM_Init(TIM2, &TIM_InitStruct);
 813              		.loc 1 825 30 is_stmt 0 view .LVU285
 814 00f6 4D60     		str	r5, [r1, #4]
 826:Src/main.c    ****   LL_TIM_DisableARRPreload(TIM2);
 815              		.loc 1 826 3 is_stmt 1 view .LVU286
 816 00f8 4FF08040 		mov	r0, #1073741824
 817 00fc FFF7FEFF 		bl	LL_TIM_Init
 818              	.LVL38:
 827:Src/main.c    **** 
 819              		.loc 1 827 3 view .LVU287
 820              	.LBB186:
 821              	.LBI186:
 822              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @file    stm32f1xx_ll_tim.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *      without specific prior written permission.
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   ******************************************************************************
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #ifndef __STM32F1xx_LL_TIM_H
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __STM32F1xx_LL_TIM_H
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #ifdef __cplusplus
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** extern "C" {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 160


  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #include "stm32f1xx.h"
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @addtogroup STM32F1xx_LL_Driver
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined (TIM1) || defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defin
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0x04U    /* 6: TIMx_CH4  */
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 1: - NA */
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 3: - NA */
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 5: - NA */
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U             /* 6: OC4M, OC4FE, OC4PE */
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 1: - NA */
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 3: - NA */
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 5: - NA */
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U             /* 6: CC4S, IC4PSC, IC4F */
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: CC1P */
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   2U,            /* 1: CC1NP */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 161


  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   4U,            /* 2: CC2P */
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   6U,            /* 3: CC2NP */
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   8U,            /* 4: CC3P */
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   10U,           /* 5: CC3NP */
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   12U            /* 6: CC4P */
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   0U,            /* 0: OIS1 */
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   1U,            /* 1: OIS1N */
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   2U,            /* 2: OIS2 */
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   3U,            /* 3: OIS2N */
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   4U,            /* 4: OIS3 */
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   5U,            /* 5: OIS3N */
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   6U             /* 6: OIS4 */
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** };
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 162


 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval none
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U : 6U)
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval none
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****      ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****      ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 163


 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downco
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    from the RCR value (N).
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This parameter must be a number between 0x00 and 0xFF.
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function LL_TI
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 164


 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 165


 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 166


 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** typedef struct
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                             has been written, their content is frozen until the nex
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       switching-on of the outputs.
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 167


 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 168


 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter is not stopped at 
 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter stops counting at 
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_0        /*!< The counter counts up and 
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_1        /*!<The counter counts up and d
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 169


 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 170


 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                              /*!< No pre
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 171


 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1              TIM_SMCR_SMS_0                    /*!< Encoder mode 
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2              TIM_SMCR_SMS_1                    /*!< Encoder mode 
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12             (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0) /*!< Encoder mode 
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 172


 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                      /*!
 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                    /*!
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                    /*!
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                  /*!
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                    /*!
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                  /*!
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                  /*!
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)  /*!
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 173


 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 174


 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 175


 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Write a value in TIM register.
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __REG__ Register to be written
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Read a value in TIM register.
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __REG__ Register to be read
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Register value
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval DTG[0:7]
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****     ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))   
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < (64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (__
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < (32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (__
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****       (((uint64_t)((__DT__)*1000U)) < (32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (_
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****        0U)
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)((__TIMCLK__)/(__CNTCLK__) - 1U) : 0U
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 176


 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****      (((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? ((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U)
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****           / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration (
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PSC__ prescaler
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****  ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****            + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****    ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 177


1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable timer counter.
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable timer counter.
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN));
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable update event generation.
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable update event generation.
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 178


1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (TIM_CR1_UDIS));
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set update event source
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Counter overflow/underflow
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Setting the UG bit
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *        - Update generation through the slave mode controller
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual event update source
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 179


1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       by a timer instance.
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_DIR | TIM_CR1_CMS, CounterMode);
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual counter mode.
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       by a timer instance.
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 180


1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR | TIM_CR1_CMS));
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
 823              		.loc 7 1207 22 view .LVU288
 824              	.LBB187:
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
 825              		.loc 7 1209 3 view .LVU289
 826 0100 4FF08044 		mov	r4, #1073741824
 827 0104 2368     		ldr	r3, [r4]
 828 0106 23F08003 		bic	r3, r3, #128
 829 010a 2360     		str	r3, [r4]
 830              	.LVL39:
 831              		.loc 7 1209 3 is_stmt 0 view .LVU290
 832              	.LBE187:
 833              	.LBE186:
 830:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 834              		.loc 1 830 3 is_stmt 1 view .LVU291
 830:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 835              		.loc 1 830 28 is_stmt 0 view .LVU292
 836 010c 1B4E     		ldr	r6, .L15+48
 837 010e 3560     		str	r5, [r6]
 831:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 8;
 838              		.loc 1 831 3 is_stmt 1 view .LVU293
 831:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 8;
 839              		.loc 1 831 29 is_stmt 0 view .LVU294
 840 0110 7560     		str	r5, [r6, #4]
 832:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH1, &TIM_OC_InitStruct);
 841              		.loc 1 832 3 is_stmt 1 view .LVU295
 832:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH1, &TIM_OC_InitStruct);
 842              		.loc 1 832 34 is_stmt 0 view .LVU296
 843 0112 0823     		movs	r3, #8
 844 0114 F360     		str	r3, [r6, #12]
 833:Src/main.c    ****   LL_TIM_OC_DisablePreload(TIM2, LL_TIM_CHANNEL_CH1);
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 181


 845              		.loc 1 833 3 is_stmt 1 view .LVU297
 846 0116 3246     		mov	r2, r6
 847 0118 0121     		movs	r1, #1
 848 011a 2046     		mov	r0, r4
 849 011c FFF7FEFF 		bl	LL_TIM_OC_Init
 850              	.LVL40:
 834:Src/main.c    **** 
 851              		.loc 1 834 3 view .LVU298
 852              	.LBB188:
 853              	.LBI188:
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE));
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       instance.
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       instance.
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 182


1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the counter value.
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF)
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the counter value.
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF)
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the prescaler value.
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the prescaler value.
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 183


1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Auto-reload value
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the repetition counter value.
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the repetition counter value.
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Repetition counter value
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(TIM_TypeDef *TIMx)
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 184


1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 185


1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 186


1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel
1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 187


1542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, Channels) == (Channels));
1544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
1548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
1552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Configure an output channel.
1555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
1557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
1564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
1565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
1566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput
1567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
1576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
1579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
1586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
1587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
1592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode
1596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 188


1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
1614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
1618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode
1626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
1643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIF
1647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
1653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
1655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 189


1656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
1657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity
1658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
1682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
1684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
1686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity
1687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
1701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
1704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
1708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function is significant only for the timer instances
1709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       supporting the break feature. Macro @ref IS_TIM_BREAK_INSTANCE(TIMx)
1710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
1711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a break input.
1712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 190


1713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS1N         LL_TIM_OC_SetIdleState\n
1714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
1715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
1716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
1717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
1718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState
1719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
1729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
1730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
1734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
1737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
1741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
1742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS1N         LL_TIM_OC_GetIdleState\n
1743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
1744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
1745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
1746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
1747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState
1748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
1759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
1760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(TIM_TypeDef *TIMx, uint32_t Channel)
1762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
1765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
1769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 191


1770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
1771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
1772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
1773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast
1774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
1792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
1793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
1794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
1795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast
1796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
1814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
1815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
1816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
1817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
1818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 192


1827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
1831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(*pReg, bitfield) == bitfield);
1832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
1836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
1837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
1838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
1839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload
1840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
1857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
1858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
1859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
1860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload
1861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
 854              		.loc 7 1869 22 view .LVU299
 855              	.LBB189:
1870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
 856              		.loc 7 1871 3 view .LVU300
1872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
 857              		.loc 7 1872 3 view .LVU301
1873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
 858              		.loc 7 1873 3 view .LVU302
 859 0120 A369     		ldr	r3, [r4, #24]
 860 0122 23F00803 		bic	r3, r3, #8
 861 0126 A361     		str	r3, [r4, #24]
 862              	.LVL41:
 863              		.loc 7 1873 3 is_stmt 0 view .LVU303
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 193


 864              	.LBE189:
 865              	.LBE188:
 837:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 866              		.loc 1 837 3 is_stmt 1 view .LVU304
 837:Src/main.c    ****   TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_DISABLE;
 867              		.loc 1 837 28 is_stmt 0 view .LVU305
 868 0128 6023     		movs	r3, #96
 869 012a 3360     		str	r3, [r6]
 838:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 17;
 870              		.loc 1 838 3 is_stmt 1 view .LVU306
 838:Src/main.c    ****   TIM_OC_InitStruct.CompareValue = 17;
 871              		.loc 1 838 29 is_stmt 0 view .LVU307
 872 012c 7560     		str	r5, [r6, #4]
 839:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH2, &TIM_OC_InitStruct);
 873              		.loc 1 839 3 is_stmt 1 view .LVU308
 839:Src/main.c    ****   LL_TIM_OC_Init(TIM2, LL_TIM_CHANNEL_CH2, &TIM_OC_InitStruct);
 874              		.loc 1 839 34 is_stmt 0 view .LVU309
 875 012e 1123     		movs	r3, #17
 876 0130 F360     		str	r3, [r6, #12]
 840:Src/main.c    ****   LL_TIM_OC_DisablePreload(TIM2, LL_TIM_CHANNEL_CH2);
 877              		.loc 1 840 3 is_stmt 1 view .LVU310
 878 0132 3246     		mov	r2, r6
 879 0134 3946     		mov	r1, r7
 880 0136 2046     		mov	r0, r4
 881 0138 FFF7FEFF 		bl	LL_TIM_OC_Init
 882              	.LVL42:
 841:Src/main.c    **** }
 883              		.loc 1 841 3 view .LVU311
 884              	.LBB190:
 885              	.LBI190:
1869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 886              		.loc 7 1869 22 view .LVU312
 887              	.LBB191:
1871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
 888              		.loc 7 1871 3 view .LVU313
1872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
 889              		.loc 7 1872 3 view .LVU314
 890              		.loc 7 1873 3 view .LVU315
 891 013c A369     		ldr	r3, [r4, #24]
 892 013e 23F40063 		bic	r3, r3, #2048
 893 0142 A361     		str	r3, [r4, #24]
 894              	.LVL43:
 895              		.loc 7 1873 3 is_stmt 0 view .LVU316
 896              	.LBE191:
 897              	.LBE190:
 842:Src/main.c    **** 
 898              		.loc 1 842 1 view .LVU317
 899 0144 03B0     		add	sp, sp, #12
 900              	.LCFI10:
 901              		.cfi_def_cfa_offset 36
 902              		@ sp needed
 903 0146 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 904              	.L16:
 905 014a 00BF     		.align	2
 906              	.L15:
 907 014c 00100240 		.word	1073876992
 908 0150 00000240 		.word	1073872896
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 194


 909 0154 00000000 		.word	.LANCHOR2
 910 0158 00000000 		.word	.LANCHOR3
 911 015c 00000000 		.word	WS2812_IO_framedata
 912 0160 00000000 		.word	.LANCHOR4
 913 0164 00ED00E0 		.word	-536810240
 914 0168 00E100E0 		.word	-536813312
 915 016c 80000240 		.word	1073873024
 916 0170 00000000 		.word	SystemCoreClock
 917 0174 819F5E16 		.word	375299969
 918 0178 00000000 		.word	.LANCHOR5
 919 017c 00000000 		.word	.LANCHOR6
 920 0180 0C080140 		.word	1073809420
 921              		.cfi_endproc
 922              	.LFE722:
 924              		.section	.text.getFontLine,"ax",%progbits
 925              		.align	1
 926              		.global	getFontLine
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu softvfp
 932              	getFontLine:
 933              	.LVL44:
 934              	.LFB704:
 217:Src/main.c    ****   const uint8_t index = (data - 32);
 935              		.loc 1 217 1 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              		@ link register save eliminated.
 218:Src/main.c    ****   unsigned char pixel = 0;
 940              		.loc 1 218 3 view .LVU319
 218:Src/main.c    ****   unsigned char pixel = 0;
 941              		.loc 1 218 17 is_stmt 0 view .LVU320
 942 0000 2038     		subs	r0, r0, #32
 943              	.LVL45:
 218:Src/main.c    ****   unsigned char pixel = 0;
 944              		.loc 1 218 17 view .LVU321
 945 0002 C0B2     		uxtb	r0, r0
 219:Src/main.c    ****   if ((font4x6[index][1] & 1) == 1)
 946              		.loc 1 219 3 is_stmt 1 view .LVU322
 947              	.LVL46:
 220:Src/main.c    ****     line_num -= 1;
 948              		.loc 1 220 3 view .LVU323
 220:Src/main.c    ****     line_num -= 1;
 949              		.loc 1 220 22 is_stmt 0 view .LVU324
 950 0004 164B     		ldr	r3, .L30
 951 0006 03EB4003 		add	r3, r3, r0, lsl #1
 952 000a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 220:Src/main.c    ****     line_num -= 1;
 953              		.loc 1 220 6 view .LVU325
 954 000c 13F0010F 		tst	r3, #1
 955 0010 00D0     		beq	.L18
 221:Src/main.c    ****   if (line_num == 0)
 956              		.loc 1 221 5 is_stmt 1 view .LVU326
 221:Src/main.c    ****   if (line_num == 0)
 957              		.loc 1 221 14 is_stmt 0 view .LVU327
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 195


 958 0012 0139     		subs	r1, r1, #1
 959              	.LVL47:
 960              	.L18:
 222:Src/main.c    ****   {
 961              		.loc 1 222 3 is_stmt 1 view .LVU328
 222:Src/main.c    ****   {
 962              		.loc 1 222 6 is_stmt 0 view .LVU329
 963 0014 31B9     		cbnz	r1, .L19
 224:Src/main.c    ****   }
 964              		.loc 1 224 5 is_stmt 1 view .LVU330
 224:Src/main.c    ****   }
 965              		.loc 1 224 28 is_stmt 0 view .LVU331
 966 0016 124B     		ldr	r3, .L30
 967 0018 13F81000 		ldrb	r0, [r3, r0, lsl #1]	@ zero_extendqisi2
 224:Src/main.c    ****   }
 968              		.loc 1 224 11 view .LVU332
 969 001c 0009     		lsrs	r0, r0, #4
 970              	.LVL48:
 971              	.L20:
 243:Src/main.c    **** }
 972              		.loc 1 243 3 is_stmt 1 view .LVU333
 243:Src/main.c    **** }
 973              		.loc 1 243 16 is_stmt 0 view .LVU334
 974 001e 00F00E00 		and	r0, r0, #14
 975              	.LVL49:
 244:Src/main.c    **** 
 976              		.loc 1 244 1 view .LVU335
 977 0022 7047     		bx	lr
 978              	.LVL50:
 979              	.L19:
 226:Src/main.c    ****   {
 980              		.loc 1 226 8 is_stmt 1 view .LVU336
 226:Src/main.c    ****   {
 981              		.loc 1 226 11 is_stmt 0 view .LVU337
 982 0024 0129     		cmp	r1, #1
 983 0026 07D0     		beq	.L26
 230:Src/main.c    ****   {
 984              		.loc 1 230 8 is_stmt 1 view .LVU338
 230:Src/main.c    ****   {
 985              		.loc 1 230 11 is_stmt 0 view .LVU339
 986 0028 0229     		cmp	r1, #2
 987 002a 0AD0     		beq	.L27
 235:Src/main.c    ****   {
 988              		.loc 1 235 8 is_stmt 1 view .LVU340
 235:Src/main.c    ****   {
 989              		.loc 1 235 11 is_stmt 0 view .LVU341
 990 002c 0329     		cmp	r1, #3
 991 002e 12D0     		beq	.L28
 239:Src/main.c    ****   {
 992              		.loc 1 239 8 is_stmt 1 view .LVU342
 239:Src/main.c    ****   {
 993              		.loc 1 239 11 is_stmt 0 view .LVU343
 994 0030 0429     		cmp	r1, #4
 995 0032 12D0     		beq	.L29
 219:Src/main.c    ****   if ((font4x6[index][1] & 1) == 1)
 996              		.loc 1 219 17 view .LVU344
 997 0034 0020     		movs	r0, #0
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 196


 998 0036 F2E7     		b	.L20
 999              	.L26:
 228:Src/main.c    ****   }
 1000              		.loc 1 228 5 is_stmt 1 view .LVU345
 228:Src/main.c    ****   }
 1001              		.loc 1 228 28 is_stmt 0 view .LVU346
 1002 0038 094B     		ldr	r3, .L30
 1003 003a 13F81000 		ldrb	r0, [r3, r0, lsl #1]	@ zero_extendqisi2
 228:Src/main.c    ****   }
 1004              		.loc 1 228 11 view .LVU347
 1005 003e 4008     		lsrs	r0, r0, #1
 1006              	.LVL51:
 228:Src/main.c    ****   }
 1007              		.loc 1 228 11 view .LVU348
 1008 0040 EDE7     		b	.L20
 1009              	.LVL52:
 1010              	.L27:
 233:Src/main.c    ****   }
 1011              		.loc 1 233 5 is_stmt 1 view .LVU349
 233:Src/main.c    ****   }
 1012              		.loc 1 233 29 is_stmt 0 view .LVU350
 1013 0042 074A     		ldr	r2, .L30
 1014 0044 12F81000 		ldrb	r0, [r2, r0, lsl #1]	@ zero_extendqisi2
 233:Src/main.c    ****   }
 1015              		.loc 1 233 42 view .LVU351
 1016 0048 8000     		lsls	r0, r0, #2
 1017 004a 00F00C00 		and	r0, r0, #12
 233:Src/main.c    ****   }
 1018              		.loc 1 233 72 view .LVU352
 1019 004e 03F00203 		and	r3, r3, #2
 233:Src/main.c    ****   }
 1020              		.loc 1 233 48 view .LVU353
 1021 0052 1843     		orrs	r0, r0, r3
 1022 0054 7047     		bx	lr
 1023              	.L28:
 237:Src/main.c    ****   }
 1024              		.loc 1 237 5 is_stmt 1 view .LVU354
 237:Src/main.c    ****   }
 1025              		.loc 1 237 11 is_stmt 0 view .LVU355
 1026 0056 1809     		lsrs	r0, r3, #4
 1027              	.LVL53:
 237:Src/main.c    ****   }
 1028              		.loc 1 237 11 view .LVU356
 1029 0058 E1E7     		b	.L20
 1030              	.LVL54:
 1031              	.L29:
 241:Src/main.c    ****   }
 1032              		.loc 1 241 5 is_stmt 1 view .LVU357
 241:Src/main.c    ****   }
 1033              		.loc 1 241 11 is_stmt 0 view .LVU358
 1034 005a 5808     		lsrs	r0, r3, #1
 1035              	.LVL55:
 241:Src/main.c    ****   }
 1036              		.loc 1 241 11 view .LVU359
 1037 005c DFE7     		b	.L20
 1038              	.L31:
 1039 005e 00BF     		.align	2
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 197


 1040              	.L30:
 1041 0060 00000000 		.word	.LANCHOR7
 1042              		.cfi_endproc
 1043              	.LFE704:
 1045              		.global	__aeabi_i2d
 1046              		.global	__aeabi_dmul
 1047              		.global	__aeabi_d2uiz
 1048              		.section	.text.calculateLeds,"ax",%progbits
 1049              		.align	1
 1050              		.global	calculateLeds
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1054              		.fpu softvfp
 1056              	calculateLeds:
 1057              	.LFB705:
 247:Src/main.c    ****   arr[0] = ((arrCol[resto][0] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1058              		.loc 1 247 1 is_stmt 1 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1063              	.LCFI11:
 1064              		.cfi_def_cfa_offset 24
 1065              		.cfi_offset 4, -24
 1066              		.cfi_offset 5, -20
 1067              		.cfi_offset 6, -16
 1068              		.cfi_offset 7, -12
 1069              		.cfi_offset 8, -8
 1070              		.cfi_offset 14, -4
 248:Src/main.c    ****   arr[1] = ((arrCol[resto][1] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1071              		.loc 1 248 3 view .LVU361
 248:Src/main.c    ****   arr[1] = ((arrCol[resto][1] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1072              		.loc 1 248 27 is_stmt 0 view .LVU362
 1073 0004 DFF8A880 		ldr	r8, .L34+20
 1074 0008 D8F80030 		ldr	r3, [r8]
 1075 000c 234F     		ldr	r7, .L34
 1076 000e 03EB4303 		add	r3, r3, r3, lsl #1
 1077 0012 F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 248:Src/main.c    ****   arr[1] = ((arrCol[resto][1] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1078              		.loc 1 248 43 view .LVU363
 1079 0014 224B     		ldr	r3, .L34+4
 1080 0016 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 1081 0018 0135     		adds	r5, r5, #1
 248:Src/main.c    ****   arr[1] = ((arrCol[resto][1] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1082              		.loc 1 248 31 view .LVU364
 1083 001a 00FB05F0 		mul	r0, r0, r5
 248:Src/main.c    ****   arr[1] = ((arrCol[resto][1] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1084              		.loc 1 248 49 view .LVU365
 1085 001e 214C     		ldr	r4, .L34+8
 1086 0020 84FB0023 		smull	r2, r3, r4, r0
 1087 0024 1844     		add	r0, r0, r3
 248:Src/main.c    ****   arr[1] = ((arrCol[resto][1] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1088              		.loc 1 248 56 view .LVU366
 1089 0026 C011     		asrs	r0, r0, #7
 1090 0028 FFF7FEFF 		bl	__aeabi_i2d
 1091              	.LVL56:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 198


 1092 002c 0022     		movs	r2, #0
 1093 002e 1E4B     		ldr	r3, .L34+12
 1094 0030 FFF7FEFF 		bl	__aeabi_dmul
 1095              	.LVL57:
 248:Src/main.c    ****   arr[1] = ((arrCol[resto][1] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1096              		.loc 1 248 10 view .LVU367
 1097 0034 FFF7FEFF 		bl	__aeabi_d2uiz
 1098              	.LVL58:
 1099 0038 C0B2     		uxtb	r0, r0
 1100 003a 1C4E     		ldr	r6, .L34+16
 1101 003c 3070     		strb	r0, [r6]
 249:Src/main.c    ****   arr[2] = ((arrCol[resto][2] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1102              		.loc 1 249 3 is_stmt 1 view .LVU368
 249:Src/main.c    ****   arr[2] = ((arrCol[resto][2] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1103              		.loc 1 249 27 is_stmt 0 view .LVU369
 1104 003e D8F80030 		ldr	r3, [r8]
 1105 0042 03EB4303 		add	r3, r3, r3, lsl #1
 1106 0046 3B44     		add	r3, r3, r7
 1107 0048 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 249:Src/main.c    ****   arr[2] = ((arrCol[resto][2] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1108              		.loc 1 249 31 view .LVU370
 1109 004a 00FB05F0 		mul	r0, r0, r5
 249:Src/main.c    ****   arr[2] = ((arrCol[resto][2] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1110              		.loc 1 249 49 view .LVU371
 1111 004e 84FB0023 		smull	r2, r3, r4, r0
 1112 0052 1844     		add	r0, r0, r3
 249:Src/main.c    ****   arr[2] = ((arrCol[resto][2] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1113              		.loc 1 249 56 view .LVU372
 1114 0054 C011     		asrs	r0, r0, #7
 1115 0056 FFF7FEFF 		bl	__aeabi_i2d
 1116              	.LVL59:
 1117 005a 0022     		movs	r2, #0
 1118 005c 124B     		ldr	r3, .L34+12
 1119 005e FFF7FEFF 		bl	__aeabi_dmul
 1120              	.LVL60:
 249:Src/main.c    ****   arr[2] = ((arrCol[resto][2] * (velocity + 1)) / 255) * MAX_BRIGHT;
 1121              		.loc 1 249 10 view .LVU373
 1122 0062 FFF7FEFF 		bl	__aeabi_d2uiz
 1123              	.LVL61:
 1124 0066 C0B2     		uxtb	r0, r0
 1125 0068 7070     		strb	r0, [r6, #1]
 250:Src/main.c    **** }
 1126              		.loc 1 250 3 is_stmt 1 view .LVU374
 250:Src/main.c    **** }
 1127              		.loc 1 250 27 is_stmt 0 view .LVU375
 1128 006a D8F80030 		ldr	r3, [r8]
 1129 006e 03EB4303 		add	r3, r3, r3, lsl #1
 1130 0072 1F44     		add	r7, r7, r3
 1131 0074 B878     		ldrb	r0, [r7, #2]	@ zero_extendqisi2
 250:Src/main.c    **** }
 1132              		.loc 1 250 31 view .LVU376
 1133 0076 00FB05F0 		mul	r0, r0, r5
 250:Src/main.c    **** }
 1134              		.loc 1 250 49 view .LVU377
 1135 007a 84FB0034 		smull	r3, r4, r4, r0
 1136 007e 2044     		add	r0, r0, r4
 250:Src/main.c    **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 199


 1137              		.loc 1 250 56 view .LVU378
 1138 0080 C011     		asrs	r0, r0, #7
 1139 0082 FFF7FEFF 		bl	__aeabi_i2d
 1140              	.LVL62:
 1141 0086 0022     		movs	r2, #0
 1142 0088 074B     		ldr	r3, .L34+12
 1143 008a FFF7FEFF 		bl	__aeabi_dmul
 1144              	.LVL63:
 250:Src/main.c    **** }
 1145              		.loc 1 250 10 view .LVU379
 1146 008e FFF7FEFF 		bl	__aeabi_d2uiz
 1147              	.LVL64:
 1148 0092 C0B2     		uxtb	r0, r0
 1149 0094 B070     		strb	r0, [r6, #2]
 251:Src/main.c    **** 
 1150              		.loc 1 251 1 view .LVU380
 1151 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1152              	.L35:
 1153 009a 00BF     		.align	2
 1154              	.L34:
 1155 009c 00000000 		.word	.LANCHOR9
 1156 00a0 00000000 		.word	.LANCHOR10
 1157 00a4 81808080 		.word	-2139062143
 1158 00a8 0000E03F 		.word	1071644672
 1159 00ac 00000000 		.word	.LANCHOR11
 1160 00b0 00000000 		.word	.LANCHOR8
 1161              		.cfi_endproc
 1162              	.LFE705:
 1164              		.section	.text.setVelocity,"ax",%progbits
 1165              		.align	1
 1166              		.global	setVelocity
 1167              		.syntax unified
 1168              		.thumb
 1169              		.thumb_func
 1170              		.fpu softvfp
 1172              	setVelocity:
 1173              	.LVL65:
 1174              	.LFB706:
 254:Src/main.c    ****   velocity = vel * 2;
 1175              		.loc 1 254 1 is_stmt 1 view -0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
 255:Src/main.c    **** }
 1180              		.loc 1 255 3 view .LVU382
 255:Src/main.c    **** }
 1181              		.loc 1 255 12 is_stmt 0 view .LVU383
 1182 0000 4000     		lsls	r0, r0, #1
 1183              	.LVL66:
 255:Src/main.c    **** }
 1184              		.loc 1 255 12 view .LVU384
 1185 0002 014B     		ldr	r3, .L37
 1186 0004 1870     		strb	r0, [r3]
 256:Src/main.c    **** 
 1187              		.loc 1 256 1 view .LVU385
 1188 0006 7047     		bx	lr
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 200


 1189              	.L38:
 1190              		.align	2
 1191              	.L37:
 1192 0008 00000000 		.word	.LANCHOR10
 1193              		.cfi_endproc
 1194              	.LFE706:
 1196              		.section	.text.setNote,"ax",%progbits
 1197              		.align	1
 1198              		.global	setNote
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1202              		.fpu softvfp
 1204              	setNote:
 1205              	.LVL67:
 1206              	.LFB707:
 259:Src/main.c    ****   resto = nt % MIDI_OCTAVE;
 1207              		.loc 1 259 1 is_stmt 1 view -0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 8
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 259:Src/main.c    ****   resto = nt % MIDI_OCTAVE;
 1211              		.loc 1 259 1 is_stmt 0 view .LVU387
 1212 0000 10B5     		push	{r4, lr}
 1213              	.LCFI12:
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 4, -8
 1216              		.cfi_offset 14, -4
 1217 0002 82B0     		sub	sp, sp, #8
 1218              	.LCFI13:
 1219              		.cfi_def_cfa_offset 16
 260:Src/main.c    ****   uint8_t res = nt / MIDI_OCTAVE;
 1220              		.loc 1 260 3 is_stmt 1 view .LVU388
 260:Src/main.c    ****   uint8_t res = nt / MIDI_OCTAVE;
 1221              		.loc 1 260 14 is_stmt 0 view .LVU389
 1222 0004 3D4A     		ldr	r2, .L55
 1223 0006 82FB0032 		smull	r3, r2, r2, r0
 1224 000a C317     		asrs	r3, r0, #31
 1225 000c C3EB6203 		rsb	r3, r3, r2, asr #1
 1226 0010 1A46     		mov	r2, r3
 1227 0012 03EB4303 		add	r3, r3, r3, lsl #1
 1228 0016 9900     		lsls	r1, r3, #2
 1229 0018 431A     		subs	r3, r0, r1
 260:Src/main.c    ****   uint8_t res = nt / MIDI_OCTAVE;
 1230              		.loc 1 260 9 view .LVU390
 1231 001a 394C     		ldr	r4, .L55+4
 1232 001c 2360     		str	r3, [r4]
 261:Src/main.c    ****   char resStr[1];
 1233              		.loc 1 261 3 is_stmt 1 view .LVU391
 1234              	.LVL68:
 262:Src/main.c    ****   sprintf(resStr, "%1d", res);
 1235              		.loc 1 262 3 view .LVU392
 263:Src/main.c    ****   //strcpy(note.octave,resStr);
 1236              		.loc 1 263 3 view .LVU393
 1237 001e D2B2     		uxtb	r2, r2
 263:Src/main.c    ****   //strcpy(note.octave,resStr);
 1238              		.loc 1 263 3 is_stmt 0 view .LVU394
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 201


 1239 0020 3849     		ldr	r1, .L55+8
 1240 0022 01A8     		add	r0, sp, #4
 1241              	.LVL69:
 263:Src/main.c    ****   //strcpy(note.octave,resStr);
 1242              		.loc 1 263 3 view .LVU395
 1243 0024 FFF7FEFF 		bl	sprintf
 1244              	.LVL70:
 265:Src/main.c    ****   {
 1245              		.loc 1 265 3 is_stmt 1 view .LVU396
 1246 0028 2368     		ldr	r3, [r4]
 1247 002a 0B2B     		cmp	r3, #11
 1248 002c 0BD8     		bhi	.L40
 1249 002e DFE803F0 		tbb	[pc, r3]
 1250              	.L42:
 1251 0032 06       		.byte	(.L53-.L42)/2
 1252 0033 23       		.byte	(.L52-.L42)/2
 1253 0034 2A       		.byte	(.L51-.L42)/2
 1254 0035 2F       		.byte	(.L50-.L42)/2
 1255 0036 36       		.byte	(.L49-.L42)/2
 1256 0037 3B       		.byte	(.L48-.L42)/2
 1257 0038 40       		.byte	(.L47-.L42)/2
 1258 0039 47       		.byte	(.L46-.L42)/2
 1259 003a 4C       		.byte	(.L45-.L42)/2
 1260 003b 53       		.byte	(.L44-.L42)/2
 1261 003c 58       		.byte	(.L43-.L42)/2
 1262 003d 5F       		.byte	(.L41-.L42)/2
 1263              		.p2align 1
 1264              	.L53:
 268:Src/main.c    ****     break;
 1265              		.loc 1 268 5 view .LVU397
 1266 003e 324B     		ldr	r3, .L55+12
 1267 0040 1A88     		ldrh	r2, [r3]	@ unaligned
 1268 0042 324B     		ldr	r3, .L55+16
 1269 0044 1A80     		strh	r2, [r3]	@ unaligned
 269:Src/main.c    ****   case MIDI_C0 + MIDI_SHARP:
 1270              		.loc 1 269 5 view .LVU398
 1271              	.L40:
 305:Src/main.c    ****   arr[1] = arrCol[resto][1];
 1272              		.loc 1 305 3 view .LVU399
 305:Src/main.c    ****   arr[1] = arrCol[resto][1];
 1273              		.loc 1 305 25 is_stmt 0 view .LVU400
 1274 0046 2E48     		ldr	r0, .L55+4
 1275 0048 0368     		ldr	r3, [r0]
 1276 004a 314A     		ldr	r2, .L55+20
 1277 004c 03EB4303 		add	r3, r3, r3, lsl #1
 1278 0050 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1279 0052 DBB2     		uxtb	r3, r3
 305:Src/main.c    ****   arr[1] = arrCol[resto][1];
 1280              		.loc 1 305 10 view .LVU401
 1281 0054 2F49     		ldr	r1, .L55+24
 1282 0056 0B70     		strb	r3, [r1]
 306:Src/main.c    ****   arr[2] = arrCol[resto][2];
 1283              		.loc 1 306 3 is_stmt 1 view .LVU402
 306:Src/main.c    ****   arr[2] = arrCol[resto][2];
 1284              		.loc 1 306 25 is_stmt 0 view .LVU403
 1285 0058 0368     		ldr	r3, [r0]
 1286 005a 03EB4303 		add	r3, r3, r3, lsl #1
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 202


 1287 005e 1344     		add	r3, r3, r2
 1288 0060 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1289 0062 DBB2     		uxtb	r3, r3
 306:Src/main.c    ****   arr[2] = arrCol[resto][2];
 1290              		.loc 1 306 10 view .LVU404
 1291 0064 4B70     		strb	r3, [r1, #1]
 307:Src/main.c    **** }
 1292              		.loc 1 307 3 is_stmt 1 view .LVU405
 307:Src/main.c    **** }
 1293              		.loc 1 307 25 is_stmt 0 view .LVU406
 1294 0066 0368     		ldr	r3, [r0]
 1295 0068 03EB4303 		add	r3, r3, r3, lsl #1
 1296 006c 1A44     		add	r2, r2, r3
 1297 006e 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1298 0070 DBB2     		uxtb	r3, r3
 307:Src/main.c    **** }
 1299              		.loc 1 307 10 view .LVU407
 1300 0072 8B70     		strb	r3, [r1, #2]
 308:Src/main.c    **** 
 1301              		.loc 1 308 1 view .LVU408
 1302 0074 02B0     		add	sp, sp, #8
 1303              	.LCFI14:
 1304              		.cfi_remember_state
 1305              		.cfi_def_cfa_offset 8
 1306              		@ sp needed
 1307 0076 10BD     		pop	{r4, pc}
 1308              	.L52:
 1309              	.LCFI15:
 1310              		.cfi_restore_state
 271:Src/main.c    ****     break;
 1311              		.loc 1 271 5 is_stmt 1 view .LVU409
 1312 0078 244B     		ldr	r3, .L55+16
 1313 007a 274A     		ldr	r2, .L55+28
 1314 007c 1188     		ldrh	r1, [r2]	@ unaligned
 1315 007e 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1316 0080 1980     		strh	r1, [r3]	@ unaligned
 1317 0082 9A70     		strb	r2, [r3, #2]
 272:Src/main.c    ****   case MIDI_D0:
 1318              		.loc 1 272 5 view .LVU410
 1319 0084 DFE7     		b	.L40
 1320              	.L51:
 274:Src/main.c    ****     break;
 1321              		.loc 1 274 5 view .LVU411
 1322 0086 254B     		ldr	r3, .L55+32
 1323 0088 1A88     		ldrh	r2, [r3]	@ unaligned
 1324 008a 204B     		ldr	r3, .L55+16
 1325 008c 1A80     		strh	r2, [r3]	@ unaligned
 275:Src/main.c    ****   case MIDI_E0 + MIDI_FLAT:
 1326              		.loc 1 275 5 view .LVU412
 1327 008e DAE7     		b	.L40
 1328              	.L50:
 277:Src/main.c    ****     break;
 1329              		.loc 1 277 5 view .LVU413
 1330 0090 1E4B     		ldr	r3, .L55+16
 1331 0092 234A     		ldr	r2, .L55+36
 1332 0094 1188     		ldrh	r1, [r2]	@ unaligned
 1333 0096 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 203


 1334 0098 1980     		strh	r1, [r3]	@ unaligned
 1335 009a 9A70     		strb	r2, [r3, #2]
 278:Src/main.c    ****   case MIDI_E0:
 1336              		.loc 1 278 5 view .LVU414
 1337 009c D3E7     		b	.L40
 1338              	.L49:
 280:Src/main.c    ****     break;
 1339              		.loc 1 280 5 view .LVU415
 1340 009e 214B     		ldr	r3, .L55+40
 1341 00a0 1A88     		ldrh	r2, [r3]	@ unaligned
 1342 00a2 1A4B     		ldr	r3, .L55+16
 1343 00a4 1A80     		strh	r2, [r3]	@ unaligned
 281:Src/main.c    ****   case MIDI_F0:
 1344              		.loc 1 281 5 view .LVU416
 1345 00a6 CEE7     		b	.L40
 1346              	.L48:
 283:Src/main.c    ****     break;
 1347              		.loc 1 283 5 view .LVU417
 1348 00a8 1F4B     		ldr	r3, .L55+44
 1349 00aa 1A88     		ldrh	r2, [r3]	@ unaligned
 1350 00ac 174B     		ldr	r3, .L55+16
 1351 00ae 1A80     		strh	r2, [r3]	@ unaligned
 284:Src/main.c    ****   case MIDI_F0 + MIDI_SHARP:
 1352              		.loc 1 284 5 view .LVU418
 1353 00b0 C9E7     		b	.L40
 1354              	.L47:
 286:Src/main.c    ****     break;
 1355              		.loc 1 286 5 view .LVU419
 1356 00b2 164B     		ldr	r3, .L55+16
 1357 00b4 1D4A     		ldr	r2, .L55+48
 1358 00b6 1188     		ldrh	r1, [r2]	@ unaligned
 1359 00b8 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1360 00ba 1980     		strh	r1, [r3]	@ unaligned
 1361 00bc 9A70     		strb	r2, [r3, #2]
 287:Src/main.c    ****   case MIDI_G0:
 1362              		.loc 1 287 5 view .LVU420
 1363 00be C2E7     		b	.L40
 1364              	.L46:
 289:Src/main.c    ****     break;
 1365              		.loc 1 289 5 view .LVU421
 1366 00c0 1B4B     		ldr	r3, .L55+52
 1367 00c2 1A88     		ldrh	r2, [r3]	@ unaligned
 1368 00c4 114B     		ldr	r3, .L55+16
 1369 00c6 1A80     		strh	r2, [r3]	@ unaligned
 290:Src/main.c    ****   case MIDI_A0 + MIDI_FLAT:
 1370              		.loc 1 290 5 view .LVU422
 1371 00c8 BDE7     		b	.L40
 1372              	.L45:
 292:Src/main.c    ****     break;
 1373              		.loc 1 292 5 view .LVU423
 1374 00ca 104B     		ldr	r3, .L55+16
 1375 00cc 194A     		ldr	r2, .L55+56
 1376 00ce 1188     		ldrh	r1, [r2]	@ unaligned
 1377 00d0 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1378 00d2 1980     		strh	r1, [r3]	@ unaligned
 1379 00d4 9A70     		strb	r2, [r3, #2]
 293:Src/main.c    ****   case MIDI_A0:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 204


 1380              		.loc 1 293 5 view .LVU424
 1381 00d6 B6E7     		b	.L40
 1382              	.L44:
 295:Src/main.c    ****     break;
 1383              		.loc 1 295 5 view .LVU425
 1384 00d8 174B     		ldr	r3, .L55+60
 1385 00da 1A88     		ldrh	r2, [r3]	@ unaligned
 1386 00dc 0B4B     		ldr	r3, .L55+16
 1387 00de 1A80     		strh	r2, [r3]	@ unaligned
 296:Src/main.c    ****   case MIDI_B0 + MIDI_FLAT:
 1388              		.loc 1 296 5 view .LVU426
 1389 00e0 B1E7     		b	.L40
 1390              	.L43:
 298:Src/main.c    ****     break;
 1391              		.loc 1 298 5 view .LVU427
 1392 00e2 0A4B     		ldr	r3, .L55+16
 1393 00e4 154A     		ldr	r2, .L55+64
 1394 00e6 1188     		ldrh	r1, [r2]	@ unaligned
 1395 00e8 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1396 00ea 1980     		strh	r1, [r3]	@ unaligned
 1397 00ec 9A70     		strb	r2, [r3, #2]
 299:Src/main.c    ****   case MIDI_B0:
 1398              		.loc 1 299 5 view .LVU428
 1399 00ee AAE7     		b	.L40
 1400              	.L41:
 301:Src/main.c    ****     break;
 1401              		.loc 1 301 5 view .LVU429
 1402 00f0 134B     		ldr	r3, .L55+68
 1403 00f2 1A88     		ldrh	r2, [r3]	@ unaligned
 1404 00f4 054B     		ldr	r3, .L55+16
 1405 00f6 1A80     		strh	r2, [r3]	@ unaligned
 302:Src/main.c    ****   }
 1406              		.loc 1 302 5 view .LVU430
 1407 00f8 A5E7     		b	.L40
 1408              	.L56:
 1409 00fa 00BF     		.align	2
 1410              	.L55:
 1411 00fc ABAAAA2A 		.word	715827883
 1412 0100 00000000 		.word	.LANCHOR8
 1413 0104 00000000 		.word	.LC1
 1414 0108 18000000 		.word	.LC2
 1415 010c 00000000 		.word	note
 1416 0110 00000000 		.word	.LANCHOR9
 1417 0114 00000000 		.word	.LANCHOR11
 1418 0118 04000000 		.word	.LC3
 1419 011c 1C000000 		.word	.LC4
 1420 0120 08000000 		.word	.LC5
 1421 0124 20000000 		.word	.LC6
 1422 0128 24000000 		.word	.LC7
 1423 012c 0C000000 		.word	.LC8
 1424 0130 28000000 		.word	.LC9
 1425 0134 10000000 		.word	.LC10
 1426 0138 2C000000 		.word	.LC11
 1427 013c 14000000 		.word	.LC12
 1428 0140 30000000 		.word	.LC13
 1429              		.cfi_endproc
 1430              	.LFE707:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 205


 1432              		.section	.text.WS2812_framedata_setPixel,"ax",%progbits
 1433              		.align	1
 1434              		.global	WS2812_framedata_setPixel
 1435              		.syntax unified
 1436              		.thumb
 1437              		.thumb_func
 1438              		.fpu softvfp
 1440              	WS2812_framedata_setPixel:
 1441              	.LVL71:
 1442              	.LFB708:
 311:Src/main.c    ****   uint8_t i;
 1443              		.loc 1 311 1 view -0
 1444              		.cfi_startproc
 1445              		@ args = 4, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 311:Src/main.c    ****   uint8_t i;
 1447              		.loc 1 311 1 is_stmt 0 view .LVU432
 1448 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1449              	.LCFI16:
 1450              		.cfi_def_cfa_offset 28
 1451              		.cfi_offset 4, -28
 1452              		.cfi_offset 5, -24
 1453              		.cfi_offset 6, -20
 1454              		.cfi_offset 7, -16
 1455              		.cfi_offset 8, -12
 1456              		.cfi_offset 9, -8
 1457              		.cfi_offset 14, -4
 1458 0004 9DF81CC0 		ldrb	ip, [sp, #28]	@ zero_extendqisi2
 312:Src/main.c    ****   for (i = 0; i < 8; i++)
 1459              		.loc 1 312 3 is_stmt 1 view .LVU433
 313:Src/main.c    ****   {
 1460              		.loc 1 313 3 view .LVU434
 1461              	.LVL72:
 313:Src/main.c    ****   {
 1462              		.loc 1 313 10 is_stmt 0 view .LVU435
 1463 0008 0027     		movs	r7, #0
 313:Src/main.c    ****   {
 1464              		.loc 1 313 3 view .LVU436
 1465 000a 43E0     		b	.L58
 1466              	.LVL73:
 1467              	.L59:
 316:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] &= ~(0x01 << row);
 1468              		.loc 1 316 5 is_stmt 1 discriminator 3 view .LVU437
 316:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] &= ~(0x01 << row);
 1469              		.loc 1 316 46 is_stmt 0 discriminator 3 view .LVU438
 1470 000c 01EB4104 		add	r4, r1, r1, lsl #1
 1471 0010 E500     		lsls	r5, r4, #3
 1472 0012 05EB0708 		add	r8, r5, r7
 316:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] &= ~(0x01 << row);
 1473              		.loc 1 316 56 discriminator 3 view .LVU439
 1474 0016 0126     		movs	r6, #1
 1475 0018 8640     		lsls	r6, r6, r0
 316:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] &= ~(0x01 << row);
 1476              		.loc 1 316 46 discriminator 3 view .LVU440
 1477 001a F643     		mvns	r6, r6
 1478 001c 36B2     		sxth	r6, r6
 1479 001e 1F4C     		ldr	r4, .L61
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 206


 1480 0020 34F818E0 		ldrh	lr, [r4, r8, lsl #1]
 1481 0024 06EA0E0E 		and	lr, r6, lr
 1482 0028 24F818E0 		strh	lr, [r4, r8, lsl #1]	@ movhi
 317:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] &= ~(0x01 << row);
 1483              		.loc 1 317 5 is_stmt 1 discriminator 3 view .LVU441
 317:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] &= ~(0x01 << row);
 1484              		.loc 1 317 50 is_stmt 0 discriminator 3 view .LVU442
 1485 002c 05F1080E 		add	lr, r5, #8
 1486 0030 BE44     		add	lr, lr, r7
 1487 0032 34F81E90 		ldrh	r9, [r4, lr, lsl #1]
 1488 0036 06EA0909 		and	r9, r6, r9
 1489 003a 24F81E90 		strh	r9, [r4, lr, lsl #1]	@ movhi
 318:Src/main.c    ****     // write new data for pixel
 1490              		.loc 1 318 5 is_stmt 1 discriminator 3 view .LVU443
 318:Src/main.c    ****     // write new data for pixel
 1491              		.loc 1 318 51 is_stmt 0 discriminator 3 view .LVU444
 1492 003e 1035     		adds	r5, r5, #16
 1493 0040 3D44     		add	r5, r5, r7
 1494 0042 34F81590 		ldrh	r9, [r4, r5, lsl #1]
 1495 0046 06EA0906 		and	r6, r6, r9
 1496 004a 24F81560 		strh	r6, [r4, r5, lsl #1]	@ movhi
 320:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] |= ((((red << i) & 0x80) >> 7) << row);
 1497              		.loc 1 320 5 is_stmt 1 discriminator 3 view .LVU445
 320:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] |= ((((red << i) & 0x80) >> 7) << row);
 1498              		.loc 1 320 59 is_stmt 0 discriminator 3 view .LVU446
 1499 004e 03FA07F6 		lsl	r6, r3, r7
 320:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] |= ((((red << i) & 0x80) >> 7) << row);
 1500              		.loc 1 320 73 discriminator 3 view .LVU447
 1501 0052 C6F3C016 		ubfx	r6, r6, #7, #1
 320:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] |= ((((red << i) & 0x80) >> 7) << row);
 1502              		.loc 1 320 79 discriminator 3 view .LVU448
 1503 0056 8640     		lsls	r6, r6, r0
 320:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 8 + i)] |= ((((red << i) & 0x80) >> 7) << row);
 1504              		.loc 1 320 46 discriminator 3 view .LVU449
 1505 0058 34F81890 		ldrh	r9, [r4, r8, lsl #1]
 1506 005c 46EA0906 		orr	r6, r6, r9
 1507 0060 24F81860 		strh	r6, [r4, r8, lsl #1]	@ movhi
 321:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] |= ((((blue << i) & 0x80) >> 7) << row);
 1508              		.loc 1 321 5 is_stmt 1 discriminator 3 view .LVU450
 321:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] |= ((((blue << i) & 0x80) >> 7) << row);
 1509              		.loc 1 321 61 is_stmt 0 discriminator 3 view .LVU451
 1510 0064 02FA07F6 		lsl	r6, r2, r7
 321:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] |= ((((blue << i) & 0x80) >> 7) << row);
 1511              		.loc 1 321 75 discriminator 3 view .LVU452
 1512 0068 C6F3C016 		ubfx	r6, r6, #7, #1
 321:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] |= ((((blue << i) & 0x80) >> 7) << row);
 1513              		.loc 1 321 81 discriminator 3 view .LVU453
 1514 006c 8640     		lsls	r6, r6, r0
 321:Src/main.c    ****     WS2812_IO_framedata[((column * 24) + 16 + i)] |= ((((blue << i) & 0x80) >> 7) << row);
 1515              		.loc 1 321 50 discriminator 3 view .LVU454
 1516 006e 34F81E80 		ldrh	r8, [r4, lr, lsl #1]
 1517 0072 46EA0806 		orr	r6, r6, r8
 1518 0076 24F81E60 		strh	r6, [r4, lr, lsl #1]	@ movhi
 322:Src/main.c    ****   }
 1519              		.loc 1 322 5 is_stmt 1 discriminator 3 view .LVU455
 322:Src/main.c    ****   }
 1520              		.loc 1 322 63 is_stmt 0 discriminator 3 view .LVU456
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 207


 1521 007a 0CFA07F6 		lsl	r6, ip, r7
 322:Src/main.c    ****   }
 1522              		.loc 1 322 77 discriminator 3 view .LVU457
 1523 007e C6F3C016 		ubfx	r6, r6, #7, #1
 322:Src/main.c    ****   }
 1524              		.loc 1 322 83 discriminator 3 view .LVU458
 1525 0082 8640     		lsls	r6, r6, r0
 322:Src/main.c    ****   }
 1526              		.loc 1 322 51 discriminator 3 view .LVU459
 1527 0084 34F815E0 		ldrh	lr, [r4, r5, lsl #1]
 1528 0088 46EA0E06 		orr	r6, r6, lr
 1529 008c 24F81560 		strh	r6, [r4, r5, lsl #1]	@ movhi
 313:Src/main.c    ****   {
 1530              		.loc 1 313 23 discriminator 3 view .LVU460
 1531 0090 0137     		adds	r7, r7, #1
 1532              	.LVL74:
 313:Src/main.c    ****   {
 1533              		.loc 1 313 23 discriminator 3 view .LVU461
 1534 0092 FFB2     		uxtb	r7, r7
 1535              	.LVL75:
 1536              	.L58:
 313:Src/main.c    ****   {
 1537              		.loc 1 313 3 discriminator 1 view .LVU462
 1538 0094 072F     		cmp	r7, #7
 1539 0096 B9D9     		bls	.L59
 324:Src/main.c    **** 
 1540              		.loc 1 324 1 view .LVU463
 1541 0098 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1542              	.LVL76:
 1543              	.L62:
 324:Src/main.c    **** 
 1544              		.loc 1 324 1 view .LVU464
 1545              		.align	2
 1546              	.L61:
 1547 009c 00000000 		.word	WS2812_IO_framedata
 1548              		.cfi_endproc
 1549              	.LFE708:
 1551              		.section	.text.WS2812_framedata_setRow,"ax",%progbits
 1552              		.align	1
 1553              		.global	WS2812_framedata_setRow
 1554              		.syntax unified
 1555              		.thumb
 1556              		.thumb_func
 1557              		.fpu softvfp
 1559              	WS2812_framedata_setRow:
 1560              	.LVL77:
 1561              	.LFB709:
 339:Src/main.c    ****   uint8_t i;
 1562              		.loc 1 339 1 is_stmt 1 view -0
 1563              		.cfi_startproc
 1564              		@ args = 4, pretend = 0, frame = 0
 1565              		@ frame_needed = 0, uses_anonymous_args = 0
 339:Src/main.c    ****   uint8_t i;
 1566              		.loc 1 339 1 is_stmt 0 view .LVU466
 1567 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1568              	.LCFI17:
 1569              		.cfi_def_cfa_offset 28
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 208


 1570              		.cfi_offset 4, -28
 1571              		.cfi_offset 5, -24
 1572              		.cfi_offset 6, -20
 1573              		.cfi_offset 7, -16
 1574              		.cfi_offset 8, -12
 1575              		.cfi_offset 9, -8
 1576              		.cfi_offset 14, -4
 1577 0004 83B0     		sub	sp, sp, #12
 1578              	.LCFI18:
 1579              		.cfi_def_cfa_offset 40
 1580 0006 8146     		mov	r9, r0
 1581 0008 0D46     		mov	r5, r1
 1582 000a 9046     		mov	r8, r2
 1583 000c 1F46     		mov	r7, r3
 1584 000e 9DF82860 		ldrb	r6, [sp, #40]	@ zero_extendqisi2
 340:Src/main.c    ****   for (i = 0; i < columns; i++)
 1585              		.loc 1 340 3 is_stmt 1 view .LVU467
 341:Src/main.c    ****   {
 1586              		.loc 1 341 3 view .LVU468
 1587              	.LVL78:
 341:Src/main.c    ****   {
 1588              		.loc 1 341 10 is_stmt 0 view .LVU469
 1589 0012 0024     		movs	r4, #0
 1590              	.LVL79:
 1591              	.L64:
 341:Src/main.c    ****   {
 1592              		.loc 1 341 17 discriminator 1 view .LVU470
 1593 0014 A1B2     		uxth	r1, r4
 341:Src/main.c    ****   {
 1594              		.loc 1 341 3 discriminator 1 view .LVU471
 1595 0016 A942     		cmp	r1, r5
 1596 0018 08D2     		bcs	.L67
 343:Src/main.c    ****   }
 1597              		.loc 1 343 5 is_stmt 1 discriminator 3 view .LVU472
 1598 001a 0096     		str	r6, [sp]
 1599 001c 3B46     		mov	r3, r7
 1600 001e 4246     		mov	r2, r8
 1601 0020 4846     		mov	r0, r9
 1602 0022 FFF7FEFF 		bl	WS2812_framedata_setPixel
 1603              	.LVL80:
 341:Src/main.c    ****   {
 1604              		.loc 1 341 29 is_stmt 0 discriminator 3 view .LVU473
 1605 0026 0134     		adds	r4, r4, #1
 1606              	.LVL81:
 341:Src/main.c    ****   {
 1607              		.loc 1 341 29 discriminator 3 view .LVU474
 1608 0028 E4B2     		uxtb	r4, r4
 1609              	.LVL82:
 341:Src/main.c    ****   {
 1610              		.loc 1 341 29 discriminator 3 view .LVU475
 1611 002a F3E7     		b	.L64
 1612              	.L67:
 345:Src/main.c    **** 
 1613              		.loc 1 345 1 view .LVU476
 1614 002c 03B0     		add	sp, sp, #12
 1615              	.LCFI19:
 1616              		.cfi_def_cfa_offset 28
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 209


 1617              		@ sp needed
 1618 002e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 345:Src/main.c    **** 
 1619              		.loc 1 345 1 view .LVU477
 1620              		.cfi_endproc
 1621              	.LFE709:
 1623              		.section	.text.move,"ax",%progbits
 1624              		.align	1
 1625              		.global	move
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu softvfp
 1631              	move:
 1632              	.LVL83:
 1633              	.LFB710:
 348:Src/main.c    ****   uint8_t tempVector[NLEDS][3];
 1634              		.loc 1 348 1 is_stmt 1 view -0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 152
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 348:Src/main.c    ****   uint8_t tempVector[NLEDS][3];
 1638              		.loc 1 348 1 is_stmt 0 view .LVU479
 1639 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1640              	.LCFI20:
 1641              		.cfi_def_cfa_offset 20
 1642              		.cfi_offset 4, -20
 1643              		.cfi_offset 5, -16
 1644              		.cfi_offset 6, -12
 1645              		.cfi_offset 7, -8
 1646              		.cfi_offset 14, -4
 1647 0002 A7B0     		sub	sp, sp, #156
 1648              	.LCFI21:
 1649              		.cfi_def_cfa_offset 176
 349:Src/main.c    ****   uint8_t tempX, tempY;
 1650              		.loc 1 349 3 is_stmt 1 view .LVU480
 350:Src/main.c    ****   for (int y = 0; y < NCOLS; y++)
 1651              		.loc 1 350 3 view .LVU481
 351:Src/main.c    ****   {
 1652              		.loc 1 351 3 view .LVU482
 1653              	.LBB192:
 351:Src/main.c    ****   {
 1654              		.loc 1 351 8 view .LVU483
 1655              	.LVL84:
 351:Src/main.c    ****   {
 1656              		.loc 1 351 12 is_stmt 0 view .LVU484
 1657 0004 0025     		movs	r5, #0
 351:Src/main.c    ****   {
 1658              		.loc 1 351 3 view .LVU485
 1659 0006 15E0     		b	.L69
 1660              	.LVL85:
 1661              	.L70:
 1662              	.LBB193:
 1663              	.LBB194:
 357:Src/main.c    ****       }
 1664              		.loc 1 357 9 is_stmt 1 discriminator 3 view .LVU486
 357:Src/main.c    ****       }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 210


 1665              		.loc 1 357 56 is_stmt 0 discriminator 3 view .LVU487
 1666 0008 C5EBC503 		rsb	r3, r5, r5, lsl #3
 357:Src/main.c    ****       }
 1667              		.loc 1 357 51 discriminator 3 view .LVU488
 1668 000c 3344     		add	r3, r3, r6
 357:Src/main.c    ****       }
 1669              		.loc 1 357 65 discriminator 3 view .LVU489
 1670 000e 03EB4303 		add	r3, r3, r3, lsl #1
 1671 0012 314C     		ldr	r4, .L95
 1672 0014 1C44     		add	r4, r4, r3
 1673 0016 A45C     		ldrb	r4, [r4, r2]	@ zero_extendqisi2
 357:Src/main.c    ****       }
 1674              		.loc 1 357 40 discriminator 3 view .LVU490
 1675 0018 26AF     		add	r7, sp, #152
 1676 001a 3B44     		add	r3, r3, r7
 1677 001c 1344     		add	r3, r3, r2
 1678 001e 03F8944C 		strb	r4, [r3, #-148]
 355:Src/main.c    ****       {
 1679              		.loc 1 355 31 discriminator 3 view .LVU491
 1680 0022 0132     		adds	r2, r2, #1
 1681              	.LVL86:
 1682              	.L71:
 355:Src/main.c    ****       {
 1683              		.loc 1 355 7 discriminator 1 view .LVU492
 1684 0024 022A     		cmp	r2, #2
 1685 0026 EFDD     		ble	.L70
 1686              	.LBE194:
 353:Src/main.c    ****     {
 1687              		.loc 1 353 33 discriminator 2 view .LVU493
 1688 0028 0136     		adds	r6, r6, #1
 1689              	.LVL87:
 1690              	.L72:
 353:Src/main.c    ****     {
 1691              		.loc 1 353 5 discriminator 1 view .LVU494
 1692 002a 062E     		cmp	r6, #6
 1693 002c 01DC     		bgt	.L88
 1694              	.LBB195:
 355:Src/main.c    ****       {
 1695              		.loc 1 355 16 view .LVU495
 1696 002e 0022     		movs	r2, #0
 1697 0030 F8E7     		b	.L71
 1698              	.L88:
 1699              	.LBE195:
 1700              	.LBE193:
 351:Src/main.c    ****   {
 1701              		.loc 1 351 31 discriminator 2 view .LVU496
 1702 0032 0135     		adds	r5, r5, #1
 1703              	.LVL88:
 1704              	.L69:
 351:Src/main.c    ****   {
 1705              		.loc 1 351 3 discriminator 1 view .LVU497
 1706 0034 062D     		cmp	r5, #6
 1707 0036 01DC     		bgt	.L89
 1708              	.LBB196:
 353:Src/main.c    ****     {
 1709              		.loc 1 353 14 view .LVU498
 1710 0038 0026     		movs	r6, #0
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 211


 1711 003a F6E7     		b	.L72
 1712              	.L89:
 1713              	.LBE196:
 1714              	.LBE192:
 1715              	.LBB197:
 362:Src/main.c    ****   {
 1716              		.loc 1 362 12 view .LVU499
 1717 003c 4FF0000C 		mov	ip, #0
 1718 0040 39E0     		b	.L73
 1719              	.LVL89:
 1720              	.L94:
 366:Src/main.c    ****     }
 1721              		.loc 1 366 7 is_stmt 1 view .LVU500
 366:Src/main.c    ****     }
 1722              		.loc 1 366 21 is_stmt 0 view .LVU501
 1723 0042 DFB2     		uxtb	r7, r3
 366:Src/main.c    ****     }
 1724              		.loc 1 366 13 view .LVU502
 1725 0044 0737     		adds	r7, r7, #7
 1726 0046 FFB2     		uxtb	r7, r7
 1727              	.LVL90:
 1728              	.L75:
 375:Src/main.c    ****     {
 1729              		.loc 1 375 5 is_stmt 1 view .LVU503
 1730              	.LBB198:
 375:Src/main.c    ****     {
 1731              		.loc 1 375 10 view .LVU504
 375:Src/main.c    ****     {
 1732              		.loc 1 375 14 is_stmt 0 view .LVU505
 1733 0048 0026     		movs	r6, #0
 375:Src/main.c    ****     {
 1734              		.loc 1 375 5 view .LVU506
 1735 004a 27E0     		b	.L77
 1736              	.LVL91:
 1737              	.L76:
 375:Src/main.c    ****     {
 1738              		.loc 1 375 5 view .LVU507
 1739              	.LBE198:
 373:Src/main.c    **** 
 1740              		.loc 1 373 7 is_stmt 1 view .LVU508
 373:Src/main.c    **** 
 1741              		.loc 1 373 17 is_stmt 0 view .LVU509
 1742 004c 5FFA8CF7 		uxtb	r7, ip
 1743 0050 CBB2     		uxtb	r3, r1
 373:Src/main.c    **** 
 1744              		.loc 1 373 13 view .LVU510
 1745 0052 FF1A     		subs	r7, r7, r3
 1746 0054 FFB2     		uxtb	r7, r7
 1747              	.LVL92:
 373:Src/main.c    **** 
 1748              		.loc 1 373 13 view .LVU511
 1749 0056 F7E7     		b	.L75
 1750              	.LVL93:
 1751              	.L92:
 1752              	.LBB200:
 379:Src/main.c    ****       }
 1753              		.loc 1 379 9 is_stmt 1 view .LVU512
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 212


 379:Src/main.c    ****       }
 1754              		.loc 1 379 23 is_stmt 0 view .LVU513
 1755 0058 DDB2     		uxtb	r5, r3
 379:Src/main.c    ****       }
 1756              		.loc 1 379 15 view .LVU514
 1757 005a 0735     		adds	r5, r5, #7
 1758 005c EDB2     		uxtb	r5, r5
 1759              	.LVL94:
 1760              	.L79:
 388:Src/main.c    ****       {
 1761              		.loc 1 388 7 is_stmt 1 view .LVU515
 1762              	.LBB199:
 388:Src/main.c    ****       {
 1763              		.loc 1 388 12 view .LVU516
 388:Src/main.c    ****       {
 1764              		.loc 1 388 16 is_stmt 0 view .LVU517
 1765 005e 0024     		movs	r4, #0
 1766              	.LVL95:
 1767              	.L81:
 388:Src/main.c    ****       {
 1768              		.loc 1 388 7 discriminator 1 view .LVU518
 1769 0060 022C     		cmp	r4, #2
 1770 0062 1ADC     		bgt	.L90
 390:Src/main.c    ****       }
 1771              		.loc 1 390 9 is_stmt 1 discriminator 3 view .LVU519
 390:Src/main.c    ****       }
 1772              		.loc 1 390 64 is_stmt 0 discriminator 3 view .LVU520
 1773 0064 C7EBC703 		rsb	r3, r7, r7, lsl #3
 390:Src/main.c    ****       }
 1774              		.loc 1 390 55 discriminator 3 view .LVU521
 1775 0068 2B44     		add	r3, r3, r5
 390:Src/main.c    ****       }
 1776              		.loc 1 390 23 discriminator 3 view .LVU522
 1777 006a CCEBCC02 		rsb	r2, ip, ip, lsl #3
 390:Src/main.c    ****       }
 1778              		.loc 1 390 18 discriminator 3 view .LVU523
 1779 006e 3244     		add	r2, r2, r6
 390:Src/main.c    ****       }
 1780              		.loc 1 390 73 discriminator 3 view .LVU524
 1781 0070 03EB4303 		add	r3, r3, r3, lsl #1
 1782 0074 0DF1980E 		add	lr, sp, #152
 1783 0078 7344     		add	r3, r3, lr
 1784 007a 2344     		add	r3, r3, r4
 1785 007c 13F894EC 		ldrb	lr, [r3, #-148]	@ zero_extendqisi2
 390:Src/main.c    ****       }
 1786              		.loc 1 390 36 discriminator 3 view .LVU525
 1787 0080 02EB4202 		add	r2, r2, r2, lsl #1
 1788 0084 144B     		ldr	r3, .L95
 1789 0086 1A44     		add	r2, r2, r3
 1790 0088 02F804E0 		strb	lr, [r2, r4]
 388:Src/main.c    ****       {
 1791              		.loc 1 388 31 discriminator 3 view .LVU526
 1792 008c 0134     		adds	r4, r4, #1
 1793              	.LVL96:
 388:Src/main.c    ****       {
 1794              		.loc 1 388 31 discriminator 3 view .LVU527
 1795 008e E7E7     		b	.L81
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 213


 1796              	.LVL97:
 1797              	.L80:
 388:Src/main.c    ****       {
 1798              		.loc 1 388 31 discriminator 3 view .LVU528
 1799              	.LBE199:
 386:Src/main.c    **** 
 1800              		.loc 1 386 9 is_stmt 1 view .LVU529
 386:Src/main.c    **** 
 1801              		.loc 1 386 19 is_stmt 0 view .LVU530
 1802 0090 F5B2     		uxtb	r5, r6
 1803 0092 C3B2     		uxtb	r3, r0
 386:Src/main.c    **** 
 1804              		.loc 1 386 15 view .LVU531
 1805 0094 ED1A     		subs	r5, r5, r3
 1806 0096 EDB2     		uxtb	r5, r5
 1807              	.LVL98:
 386:Src/main.c    **** 
 1808              		.loc 1 386 15 view .LVU532
 1809 0098 E1E7     		b	.L79
 1810              	.LVL99:
 1811              	.L90:
 375:Src/main.c    ****     {
 1812              		.loc 1 375 33 discriminator 2 view .LVU533
 1813 009a 0136     		adds	r6, r6, #1
 1814              	.LVL100:
 1815              	.L77:
 375:Src/main.c    ****     {
 1816              		.loc 1 375 5 discriminator 1 view .LVU534
 1817 009c 062E     		cmp	r6, #6
 1818 009e 08DC     		bgt	.L91
 377:Src/main.c    ****       {
 1819              		.loc 1 377 7 is_stmt 1 view .LVU535
 377:Src/main.c    ****       {
 1820              		.loc 1 377 10 is_stmt 0 view .LVU536
 1821 00a0 331A     		subs	r3, r6, r0
 1822 00a2 D9D4     		bmi	.L92
 381:Src/main.c    ****       {
 1823              		.loc 1 381 12 is_stmt 1 view .LVU537
 381:Src/main.c    ****       {
 1824              		.loc 1 381 15 is_stmt 0 view .LVU538
 1825 00a4 062B     		cmp	r3, #6
 1826 00a6 F3DD     		ble	.L80
 383:Src/main.c    ****       }
 1827              		.loc 1 383 9 is_stmt 1 view .LVU539
 383:Src/main.c    ****       }
 1828              		.loc 1 383 20 is_stmt 0 view .LVU540
 1829 00a8 351A     		subs	r5, r6, r0
 1830 00aa EDB2     		uxtb	r5, r5
 383:Src/main.c    ****       }
 1831              		.loc 1 383 15 view .LVU541
 1832 00ac 073D     		subs	r5, r5, #7
 1833 00ae EDB2     		uxtb	r5, r5
 1834              	.LVL101:
 383:Src/main.c    ****       }
 1835              		.loc 1 383 15 view .LVU542
 1836 00b0 D5E7     		b	.L79
 1837              	.LVL102:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 214


 1838              	.L91:
 383:Src/main.c    ****       }
 1839              		.loc 1 383 15 view .LVU543
 1840              	.LBE200:
 362:Src/main.c    ****   {
 1841              		.loc 1 362 31 discriminator 2 view .LVU544
 1842 00b2 0CF1010C 		add	ip, ip, #1
 1843              	.LVL103:
 1844              	.L73:
 362:Src/main.c    ****   {
 1845              		.loc 1 362 3 discriminator 1 view .LVU545
 1846 00b6 BCF1060F 		cmp	ip, #6
 1847 00ba 0ADC     		bgt	.L93
 364:Src/main.c    ****     {
 1848              		.loc 1 364 5 is_stmt 1 view .LVU546
 364:Src/main.c    ****     {
 1849              		.loc 1 364 8 is_stmt 0 view .LVU547
 1850 00bc BCEB0103 		subs	r3, ip, r1
 1851 00c0 BFD4     		bmi	.L94
 368:Src/main.c    ****     {
 1852              		.loc 1 368 10 is_stmt 1 view .LVU548
 368:Src/main.c    ****     {
 1853              		.loc 1 368 13 is_stmt 0 view .LVU549
 1854 00c2 062B     		cmp	r3, #6
 1855 00c4 C2DD     		ble	.L76
 370:Src/main.c    ****     }
 1856              		.loc 1 370 7 is_stmt 1 view .LVU550
 370:Src/main.c    ****     }
 1857              		.loc 1 370 18 is_stmt 0 view .LVU551
 1858 00c6 ACEB0107 		sub	r7, ip, r1
 1859 00ca FFB2     		uxtb	r7, r7
 370:Src/main.c    ****     }
 1860              		.loc 1 370 13 view .LVU552
 1861 00cc 073F     		subs	r7, r7, #7
 1862 00ce FFB2     		uxtb	r7, r7
 1863              	.LVL104:
 370:Src/main.c    ****     }
 1864              		.loc 1 370 13 view .LVU553
 1865 00d0 BAE7     		b	.L75
 1866              	.LVL105:
 1867              	.L93:
 370:Src/main.c    ****     }
 1868              		.loc 1 370 13 view .LVU554
 1869              	.LBE197:
 394:Src/main.c    **** 
 1870              		.loc 1 394 1 view .LVU555
 1871 00d2 27B0     		add	sp, sp, #156
 1872              	.LCFI22:
 1873              		.cfi_def_cfa_offset 20
 1874              		@ sp needed
 1875 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1876              	.L96:
 1877 00d6 00BF     		.align	2
 1878              	.L95:
 1879 00d8 00000000 		.word	effect
 1880              		.cfi_endproc
 1881              	.LFE710:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 215


 1883              		.section	.text.clearFramebuffer,"ax",%progbits
 1884              		.align	1
 1885              		.global	clearFramebuffer
 1886              		.syntax unified
 1887              		.thumb
 1888              		.thumb_func
 1889              		.fpu softvfp
 1891              	clearFramebuffer:
 1892              	.LFB711:
 397:Src/main.c    ****   for (uint8_t i = 0; i < NCHANNELS; i++)
 1893              		.loc 1 397 1 is_stmt 1 view -0
 1894              		.cfi_startproc
 1895              		@ args = 0, pretend = 0, frame = 0
 1896              		@ frame_needed = 0, uses_anonymous_args = 0
 1897 0000 70B5     		push	{r4, r5, r6, lr}
 1898              	.LCFI23:
 1899              		.cfi_def_cfa_offset 16
 1900              		.cfi_offset 4, -16
 1901              		.cfi_offset 5, -12
 1902              		.cfi_offset 6, -8
 1903              		.cfi_offset 14, -4
 1904 0002 82B0     		sub	sp, sp, #8
 1905              	.LCFI24:
 1906              		.cfi_def_cfa_offset 24
 398:Src/main.c    ****   {
 1907              		.loc 1 398 3 view .LVU557
 1908              	.LBB201:
 398:Src/main.c    ****   {
 1909              		.loc 1 398 8 view .LVU558
 1910              	.LVL106:
 398:Src/main.c    ****   {
 1911              		.loc 1 398 16 is_stmt 0 view .LVU559
 1912 0004 0026     		movs	r6, #0
 398:Src/main.c    ****   {
 1913              		.loc 1 398 3 view .LVU560
 1914 0006 23E0     		b	.L98
 1915              	.LVL107:
 1916              	.L99:
 1917              	.LBB202:
 400:Src/main.c    ****     {
 1918              		.loc 1 400 40 discriminator 2 view .LVU561
 1919 0008 0135     		adds	r5, r5, #1
 1920              	.LVL108:
 400:Src/main.c    ****     {
 1921              		.loc 1 400 40 discriminator 2 view .LVU562
 1922 000a EDB2     		uxtb	r5, r5
 1923              	.LVL109:
 1924              	.L102:
 400:Src/main.c    ****     {
 1925              		.loc 1 400 5 discriminator 1 view .LVU563
 1926 000c 012D     		cmp	r5, #1
 1927 000e 1DD8     		bhi	.L106
 1928              	.LBB203:
 402:Src/main.c    ****       {
 1929              		.loc 1 402 21 view .LVU564
 1930 0010 0024     		movs	r4, #0
 1931              	.L101:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 216


 1932              	.LVL110:
 402:Src/main.c    ****       {
 1933              		.loc 1 402 7 discriminator 1 view .LVU565
 1934 0012 062C     		cmp	r4, #6
 1935 0014 F8D8     		bhi	.L99
 404:Src/main.c    ****           break;
 1936              		.loc 1 404 9 is_stmt 1 view .LVU566
 404:Src/main.c    ****           break;
 1937              		.loc 1 404 21 is_stmt 0 view .LVU567
 1938 0016 C5EBC503 		rsb	r3, r5, r5, lsl #3
 404:Src/main.c    ****           break;
 1939              		.loc 1 404 16 view .LVU568
 1940 001a 2344     		add	r3, r3, r4
 404:Src/main.c    ****           break;
 1941              		.loc 1 404 37 view .LVU569
 1942 001c C6EBC601 		rsb	r1, r6, r6, lsl #3
 1943 0020 4A00     		lsls	r2, r1, #1
 404:Src/main.c    ****           break;
 1944              		.loc 1 404 30 view .LVU570
 1945 0022 1344     		add	r3, r3, r2
 404:Src/main.c    ****           break;
 1946              		.loc 1 404 12 view .LVU571
 1947 0024 2F2B     		cmp	r3, #47
 1948 0026 EFDC     		bgt	.L99
 406:Src/main.c    ****       }
 1949              		.loc 1 406 9 is_stmt 1 discriminator 2 view .LVU572
 1950 0028 0C49     		ldr	r1, .L108
 1951 002a 91F82420 		ldrb	r2, [r1, #36]	@ zero_extendqisi2
 1952 002e 91F82530 		ldrb	r3, [r1, #37]	@ zero_extendqisi2
 1953 0032 91F82600 		ldrb	r0, [r1, #38]	@ zero_extendqisi2
 1954 0036 C5EBC501 		rsb	r1, r5, r5, lsl #3
 1955 003a 2144     		add	r1, r1, r4
 1956 003c 0090     		str	r0, [sp]
 1957 003e 89B2     		uxth	r1, r1
 1958 0040 3046     		mov	r0, r6
 1959 0042 FFF7FEFF 		bl	WS2812_framedata_setPixel
 1960              	.LVL111:
 402:Src/main.c    ****       {
 1961              		.loc 1 402 40 is_stmt 0 discriminator 2 view .LVU573
 1962 0046 0134     		adds	r4, r4, #1
 1963              	.LVL112:
 402:Src/main.c    ****       {
 1964              		.loc 1 402 40 discriminator 2 view .LVU574
 1965 0048 A4B2     		uxth	r4, r4
 1966              	.LVL113:
 402:Src/main.c    ****       {
 1967              		.loc 1 402 40 discriminator 2 view .LVU575
 1968 004a E2E7     		b	.L101
 1969              	.LVL114:
 1970              	.L106:
 402:Src/main.c    ****       {
 1971              		.loc 1 402 40 discriminator 2 view .LVU576
 1972              	.LBE203:
 1973              	.LBE202:
 398:Src/main.c    ****   {
 1974              		.loc 1 398 39 discriminator 2 view .LVU577
 1975 004c 0136     		adds	r6, r6, #1
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 217


 1976              	.LVL115:
 398:Src/main.c    ****   {
 1977              		.loc 1 398 39 discriminator 2 view .LVU578
 1978 004e F6B2     		uxtb	r6, r6
 1979              	.LVL116:
 1980              	.L98:
 398:Src/main.c    ****   {
 1981              		.loc 1 398 3 discriminator 1 view .LVU579
 1982 0050 032E     		cmp	r6, #3
 1983 0052 01D8     		bhi	.L107
 1984              	.LBB204:
 400:Src/main.c    ****     {
 1985              		.loc 1 400 18 view .LVU580
 1986 0054 0025     		movs	r5, #0
 1987 0056 D9E7     		b	.L102
 1988              	.L107:
 1989              	.LBE204:
 1990              	.LBE201:
 410:Src/main.c    **** 
 1991              		.loc 1 410 1 view .LVU581
 1992 0058 02B0     		add	sp, sp, #8
 1993              	.LCFI25:
 1994              		.cfi_def_cfa_offset 16
 1995              		@ sp needed
 1996 005a 70BD     		pop	{r4, r5, r6, pc}
 1997              	.LVL117:
 1998              	.L109:
 410:Src/main.c    **** 
 1999              		.loc 1 410 1 view .LVU582
 2000              		.align	2
 2001              	.L108:
 2002 005c 00000000 		.word	.LANCHOR9
 2003              		.cfi_endproc
 2004              	.LFE711:
 2006              		.section	.text.fillFramebuffer,"ax",%progbits
 2007              		.align	1
 2008              		.global	fillFramebuffer
 2009              		.syntax unified
 2010              		.thumb
 2011              		.thumb_func
 2012              		.fpu softvfp
 2014              	fillFramebuffer:
 2015              	.LFB712:
 413:Src/main.c    ****   uint8_t mod, z, tempLine[NCOLS][3];
 2016              		.loc 1 413 1 is_stmt 1 view -0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 24
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2021              	.LCFI26:
 2022              		.cfi_def_cfa_offset 24
 2023              		.cfi_offset 4, -24
 2024              		.cfi_offset 5, -20
 2025              		.cfi_offset 6, -16
 2026              		.cfi_offset 7, -12
 2027              		.cfi_offset 8, -8
 2028              		.cfi_offset 14, -4
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 218


 2029 0004 88B0     		sub	sp, sp, #32
 2030              	.LCFI27:
 2031              		.cfi_def_cfa_offset 56
 414:Src/main.c    ****   for (uint8_t i = 0; i < NCHANNELS; i++)
 2032              		.loc 1 414 3 view .LVU584
 415:Src/main.c    ****   {
 2033              		.loc 1 415 3 view .LVU585
 2034              	.LBB205:
 415:Src/main.c    ****   {
 2035              		.loc 1 415 8 view .LVU586
 2036              	.LVL118:
 415:Src/main.c    ****   {
 2037              		.loc 1 415 16 is_stmt 0 view .LVU587
 2038 0006 0026     		movs	r6, #0
 415:Src/main.c    ****   {
 2039              		.loc 1 415 3 view .LVU588
 2040 0008 5AE0     		b	.L111
 2041              	.LVL119:
 2042              	.L122:
 2043              	.LBB206:
 2044              	.LBB207:
 426:Src/main.c    ****           {
 2045              		.loc 1 426 18 view .LVU589
 2046 000a 3A46     		mov	r2, r7
 2047              	.L114:
 2048              	.LVL120:
 426:Src/main.c    ****           {
 2049              		.loc 1 426 11 discriminator 1 view .LVU590
 2050 000c 022A     		cmp	r2, #2
 2051 000e 0FD8     		bhi	.L117
 428:Src/main.c    ****           }
 2052              		.loc 1 428 13 is_stmt 1 discriminator 3 view .LVU591
 428:Src/main.c    ****           }
 2053              		.loc 1 428 69 is_stmt 0 discriminator 3 view .LVU592
 2054 0010 0EEB4E00 		add	r0, lr, lr, lsl #1
 2055 0014 2E49     		ldr	r1, .L127
 2056 0016 0144     		add	r1, r1, r0
 2057 0018 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 428:Src/main.c    ****           }
 2058              		.loc 1 428 28 discriminator 3 view .LVU593
 2059 001a 03EB4301 		add	r1, r3, r3, lsl #1
 2060 001e 0DF1200C 		add	ip, sp, #32
 2061 0022 6144     		add	r1, r1, ip
 2062 0024 1144     		add	r1, r1, r2
 2063 0026 01F8180C 		strb	r0, [r1, #-24]
 426:Src/main.c    ****           {
 2064              		.loc 1 426 31 discriminator 3 view .LVU594
 2065 002a 0132     		adds	r2, r2, #1
 2066              	.LVL121:
 426:Src/main.c    ****           {
 2067              		.loc 1 426 31 discriminator 3 view .LVU595
 2068 002c D2B2     		uxtb	r2, r2
 2069              	.LVL122:
 426:Src/main.c    ****           {
 2070              		.loc 1 426 31 discriminator 3 view .LVU596
 2071 002e EDE7     		b	.L114
 2072              	.LVL123:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 219


 2073              	.L117:
 438:Src/main.c    ****       }
 2074              		.loc 1 438 9 is_stmt 1 discriminator 2 view .LVU597
 2075 0030 03EB4303 		add	r3, r3, r3, lsl #1
 2076 0034 08AA     		add	r2, sp, #32
 2077 0036 1A44     		add	r2, r2, r3
 2078 0038 C5EBC501 		rsb	r1, r5, r5, lsl #3
 2079 003c 2144     		add	r1, r1, r4
 2080 003e 12F8163C 		ldrb	r3, [r2, #-22]	@ zero_extendqisi2
 2081 0042 0093     		str	r3, [sp]
 2082 0044 12F8173C 		ldrb	r3, [r2, #-23]	@ zero_extendqisi2
 2083 0048 12F8182C 		ldrb	r2, [r2, #-24]	@ zero_extendqisi2
 2084 004c 89B2     		uxth	r1, r1
 2085 004e 3046     		mov	r0, r6
 2086 0050 FFF7FEFF 		bl	WS2812_framedata_setPixel
 2087              	.LVL124:
 420:Src/main.c    ****       {
 2088              		.loc 1 420 40 is_stmt 0 discriminator 2 view .LVU598
 2089 0054 0134     		adds	r4, r4, #1
 2090              	.LVL125:
 420:Src/main.c    ****       {
 2091              		.loc 1 420 40 discriminator 2 view .LVU599
 2092 0056 A4B2     		uxth	r4, r4
 2093              	.LVL126:
 2094              	.L112:
 420:Src/main.c    ****       {
 2095              		.loc 1 420 7 discriminator 1 view .LVU600
 2096 0058 062C     		cmp	r4, #6
 2097 005a 27D8     		bhi	.L113
 422:Src/main.c    ****           break;
 2098              		.loc 1 422 9 is_stmt 1 view .LVU601
 422:Src/main.c    ****           break;
 2099              		.loc 1 422 16 is_stmt 0 view .LVU602
 2100 005c 2346     		mov	r3, r4
 422:Src/main.c    ****           break;
 2101              		.loc 1 422 21 view .LVU603
 2102 005e C5EBC500 		rsb	r0, r5, r5, lsl #3
 422:Src/main.c    ****           break;
 2103              		.loc 1 422 16 view .LVU604
 2104 0062 04EB000E 		add	lr, r4, r0
 422:Src/main.c    ****           break;
 2105              		.loc 1 422 37 view .LVU605
 2106 0066 C6EBC601 		rsb	r1, r6, r6, lsl #3
 2107 006a 4A00     		lsls	r2, r1, #1
 2108 006c 9446     		mov	ip, r2
 422:Src/main.c    ****           break;
 2109              		.loc 1 422 30 view .LVU606
 2110 006e 9644     		add	lr, lr, r2
 422:Src/main.c    ****           break;
 2111              		.loc 1 422 12 view .LVU607
 2112 0070 BEF1310F 		cmp	lr, #49
 2113 0074 1ADC     		bgt	.L113
 424:Src/main.c    ****         {
 2114              		.loc 1 424 9 is_stmt 1 view .LVU608
 424:Src/main.c    ****         {
 2115              		.loc 1 424 12 is_stmt 0 view .LVU609
 2116 0076 002F     		cmp	r7, #0
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 220


 2117 0078 C7D0     		beq	.L122
 433:Src/main.c    ****           {
 2118              		.loc 1 433 18 view .LVU610
 2119 007a 0021     		movs	r1, #0
 2120              	.L115:
 2121              	.LVL127:
 433:Src/main.c    ****           {
 2122              		.loc 1 433 11 discriminator 1 view .LVU611
 2123 007c 0229     		cmp	r1, #2
 2124 007e D7D8     		bhi	.L117
 435:Src/main.c    ****           }
 2125              		.loc 1 435 13 is_stmt 1 discriminator 3 view .LVU612
 435:Src/main.c    ****           }
 2126              		.loc 1 435 44 is_stmt 0 discriminator 3 view .LVU613
 2127 0080 C3F10602 		rsb	r2, r3, #6
 435:Src/main.c    ****           }
 2128              		.loc 1 435 48 discriminator 3 view .LVU614
 2129 0084 0244     		add	r2, r2, r0
 435:Src/main.c    ****           }
 2130              		.loc 1 435 62 discriminator 3 view .LVU615
 2131 0086 6244     		add	r2, r2, ip
 435:Src/main.c    ****           }
 2132              		.loc 1 435 78 discriminator 3 view .LVU616
 2133 0088 02EB4202 		add	r2, r2, r2, lsl #1
 2134 008c DFF840E0 		ldr	lr, .L127
 2135 0090 7244     		add	r2, r2, lr
 2136 0092 12F801E0 		ldrb	lr, [r2, r1]	@ zero_extendqisi2
 435:Src/main.c    ****           }
 2137              		.loc 1 435 28 discriminator 3 view .LVU617
 2138 0096 03EB4302 		add	r2, r3, r3, lsl #1
 2139 009a 0DF12008 		add	r8, sp, #32
 2140 009e 4244     		add	r2, r2, r8
 2141 00a0 0A44     		add	r2, r2, r1
 2142 00a2 02F818EC 		strb	lr, [r2, #-24]
 433:Src/main.c    ****           {
 2143              		.loc 1 433 31 discriminator 3 view .LVU618
 2144 00a6 0131     		adds	r1, r1, #1
 2145              	.LVL128:
 433:Src/main.c    ****           {
 2146              		.loc 1 433 31 discriminator 3 view .LVU619
 2147 00a8 C9B2     		uxtb	r1, r1
 2148              	.LVL129:
 433:Src/main.c    ****           {
 2149              		.loc 1 433 31 discriminator 3 view .LVU620
 2150 00aa E7E7     		b	.L115
 2151              	.LVL130:
 2152              	.L113:
 433:Src/main.c    ****           {
 2153              		.loc 1 433 31 discriminator 3 view .LVU621
 2154              	.LBE207:
 417:Src/main.c    ****     {
 2155              		.loc 1 417 40 discriminator 2 view .LVU622
 2156 00ac 0135     		adds	r5, r5, #1
 2157              	.LVL131:
 417:Src/main.c    ****     {
 2158              		.loc 1 417 40 discriminator 2 view .LVU623
 2159 00ae EDB2     		uxtb	r5, r5
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 221


 2160              	.LVL132:
 2161              	.L121:
 417:Src/main.c    ****     {
 2162              		.loc 1 417 5 discriminator 1 view .LVU624
 2163 00b0 012D     		cmp	r5, #1
 2164 00b2 03D8     		bhi	.L125
 419:Src/main.c    ****       for (uint16_t x = 0; x < NCOLS; x++)
 2165              		.loc 1 419 7 is_stmt 1 view .LVU625
 419:Src/main.c    ****       for (uint16_t x = 0; x < NCOLS; x++)
 2166              		.loc 1 419 11 is_stmt 0 view .LVU626
 2167 00b4 05F00107 		and	r7, r5, #1
 2168              	.LVL133:
 420:Src/main.c    ****       {
 2169              		.loc 1 420 7 is_stmt 1 view .LVU627
 2170              	.LBB208:
 420:Src/main.c    ****       {
 2171              		.loc 1 420 12 view .LVU628
 420:Src/main.c    ****       {
 2172              		.loc 1 420 21 is_stmt 0 view .LVU629
 2173 00b8 0024     		movs	r4, #0
 420:Src/main.c    ****       {
 2174              		.loc 1 420 7 view .LVU630
 2175 00ba CDE7     		b	.L112
 2176              	.LVL134:
 2177              	.L125:
 420:Src/main.c    ****       {
 2178              		.loc 1 420 7 view .LVU631
 2179              	.LBE208:
 2180              	.LBE206:
 415:Src/main.c    ****   {
 2181              		.loc 1 415 39 discriminator 2 view .LVU632
 2182 00bc 0136     		adds	r6, r6, #1
 2183              	.LVL135:
 415:Src/main.c    ****   {
 2184              		.loc 1 415 39 discriminator 2 view .LVU633
 2185 00be F6B2     		uxtb	r6, r6
 2186              	.LVL136:
 2187              	.L111:
 415:Src/main.c    ****   {
 2188              		.loc 1 415 3 discriminator 1 view .LVU634
 2189 00c0 032E     		cmp	r6, #3
 2190 00c2 01D8     		bhi	.L126
 2191              	.LBB209:
 417:Src/main.c    ****     {
 2192              		.loc 1 417 18 view .LVU635
 2193 00c4 0025     		movs	r5, #0
 2194 00c6 F3E7     		b	.L121
 2195              	.L126:
 2196              	.LBE209:
 2197              	.LBE205:
 442:Src/main.c    **** 
 2198              		.loc 1 442 1 view .LVU636
 2199 00c8 08B0     		add	sp, sp, #32
 2200              	.LCFI28:
 2201              		.cfi_def_cfa_offset 24
 2202              		@ sp needed
 2203 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 222


 2204              	.LVL137:
 2205              	.L128:
 442:Src/main.c    **** 
 2206              		.loc 1 442 1 view .LVU637
 2207 00ce 00BF     		.align	2
 2208              	.L127:
 2209 00d0 00000000 		.word	effect
 2210              		.cfi_endproc
 2211              	.LFE712:
 2213              		.section	.text.WS2812_sendbuf,"ax",%progbits
 2214              		.align	1
 2215              		.global	WS2812_sendbuf
 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2219              		.fpu softvfp
 2221              	WS2812_sendbuf:
 2222              	.LVL138:
 2223              	.LFB713:
 445:Src/main.c    ****   // transmission complete flag, indicate that transmission is taking place
 2224              		.loc 1 445 1 is_stmt 1 view -0
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 0
 2227              		@ frame_needed = 0, uses_anonymous_args = 0
 2228              		@ link register save eliminated.
 445:Src/main.c    ****   // transmission complete flag, indicate that transmission is taking place
 2229              		.loc 1 445 1 is_stmt 0 view .LVU639
 2230 0000 30B4     		push	{r4, r5}
 2231              	.LCFI29:
 2232              		.cfi_def_cfa_offset 8
 2233              		.cfi_offset 4, -8
 2234              		.cfi_offset 5, -4
 447:Src/main.c    **** 
 2235              		.loc 1 447 3 is_stmt 1 view .LVU640
 447:Src/main.c    **** 
 2236              		.loc 1 447 13 is_stmt 0 view .LVU641
 2237 0002 0024     		movs	r4, #0
 2238 0004 1F4B     		ldr	r3, .L131
 2239 0006 1C70     		strb	r4, [r3]
 450:Src/main.c    ****   LL_DMA_ClearFlag_TE5(DMA1);
 2240              		.loc 1 450 3 is_stmt 1 view .LVU642
 2241              	.LVL139:
 2242              	.LBB210:
 2243              	.LBI210:
1696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 2244              		.loc 6 1696 22 view .LVU643
 2245              	.LBB211:
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2246              		.loc 6 1698 3 view .LVU644
 2247 0008 1F4B     		ldr	r3, .L131+4
 2248 000a 8022     		movs	r2, #128
 2249 000c 5A60     		str	r2, [r3, #4]
 2250              	.LVL140:
1698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2251              		.loc 6 1698 3 is_stmt 0 view .LVU645
 2252              	.LBE211:
 2253              	.LBE210:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 223


 451:Src/main.c    ****   LL_DMA_ClearFlag_TE7(DMA1);
 2254              		.loc 1 451 3 is_stmt 1 view .LVU646
 2255              	.LBB212:
 2256              	.LBI212:
1729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 2257              		.loc 6 1729 22 view .LVU647
 2258              	.LBB213:
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2259              		.loc 6 1731 3 view .LVU648
 2260 000e 4FF40022 		mov	r2, #524288
 2261 0012 5A60     		str	r2, [r3, #4]
 2262              	.LVL141:
1731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2263              		.loc 6 1731 3 is_stmt 0 view .LVU649
 2264              	.LBE213:
 2265              	.LBE212:
 452:Src/main.c    ****   // LL_DMA_ClearFlag_GI2(DMA1);
 2266              		.loc 1 452 3 is_stmt 1 view .LVU650
 2267              	.LBB214:
 2268              	.LBI214:
1751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 2269              		.loc 6 1751 22 view .LVU651
 2270              	.LBB215:
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2271              		.loc 6 1753 3 view .LVU652
 2272 0014 4FF00062 		mov	r2, #134217728
 2273 0018 5A60     		str	r2, [r3, #4]
 2274              	.LVL142:
1753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2275              		.loc 6 1753 3 is_stmt 0 view .LVU653
 2276              	.LBE215:
 2277              	.LBE214:
 458:Src/main.c    ****   LL_DMA_SetDataLength(DMA1, LL_DMA_CHANNEL_5, buffersize);
 2278              		.loc 1 458 3 is_stmt 1 view .LVU654
 2279              	.LBB216:
 2280              	.LBI216:
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 2281              		.loc 6 896 22 view .LVU655
 2282              	.LBB217:
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 2283              		.loc 6 898 3 view .LVU656
 2284 001a 1C49     		ldr	r1, .L131+8
 2285 001c 4B68     		ldr	r3, [r1, #4]
 2286 001e 1B0C     		lsrs	r3, r3, #16
 2287 0020 1B04     		lsls	r3, r3, #16
 2288 0022 0343     		orrs	r3, r3, r0
 2289 0024 4B60     		str	r3, [r1, #4]
 2290              	.LVL143:
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 2291              		.loc 6 898 3 is_stmt 0 view .LVU657
 2292              	.LBE217:
 2293              	.LBE216:
 459:Src/main.c    ****   LL_DMA_SetDataLength(DMA1, LL_DMA_CHANNEL_7, buffersize);
 2294              		.loc 1 459 3 is_stmt 1 view .LVU658
 2295              	.LBB218:
 2296              	.LBI218:
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 224


 2297              		.loc 6 896 22 view .LVU659
 2298              	.LBB219:
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 2299              		.loc 6 898 3 view .LVU660
 2300 0026 1A4D     		ldr	r5, .L131+12
 2301 0028 6B68     		ldr	r3, [r5, #4]
 2302 002a 1B0C     		lsrs	r3, r3, #16
 2303 002c 1B04     		lsls	r3, r3, #16
 2304 002e 0343     		orrs	r3, r3, r0
 2305 0030 6B60     		str	r3, [r5, #4]
 2306              	.LVL144:
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 2307              		.loc 6 898 3 is_stmt 0 view .LVU661
 2308              	.LBE219:
 2309              	.LBE218:
 460:Src/main.c    **** 
 2310              		.loc 1 460 3 is_stmt 1 view .LVU662
 2311              	.LBB220:
 2312              	.LBI220:
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 2313              		.loc 6 896 22 view .LVU663
 2314              	.LBB221:
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 2315              		.loc 6 898 3 view .LVU664
 2316 0032 184A     		ldr	r2, .L131+16
 2317 0034 5368     		ldr	r3, [r2, #4]
 2318 0036 1B0C     		lsrs	r3, r3, #16
 2319 0038 1B04     		lsls	r3, r3, #16
 2320 003a 1843     		orrs	r0, r0, r3
 2321              	.LVL145:
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 2322              		.loc 6 898 3 is_stmt 0 view .LVU665
 2323 003c 5060     		str	r0, [r2, #4]
 2324              	.LVL146:
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 2325              		.loc 6 898 3 view .LVU666
 2326              	.LBE221:
 2327              	.LBE220:
 463:Src/main.c    **** 
 2328              		.loc 1 463 3 is_stmt 1 view .LVU667
 463:Src/main.c    **** 
 2329              		.loc 1 463 12 is_stmt 0 view .LVU668
 2330 003e 4FF08043 		mov	r3, #1073741824
 2331 0042 1C61     		str	r4, [r3, #16]
 466:Src/main.c    ****   LL_DMA_EnableChannel(DMA1, LL_DMA_CHANNEL_5);
 2332              		.loc 1 466 3 is_stmt 1 view .LVU669
 2333              	.LVL147:
 2334              	.LBB222:
 2335              	.LBI222:
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 2336              		.loc 6 470 22 view .LVU670
 2337              	.LBB223:
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2338              		.loc 6 472 3 view .LVU671
 2339 0044 0868     		ldr	r0, [r1]
 2340 0046 40F00100 		orr	r0, r0, #1
 2341 004a 0860     		str	r0, [r1]
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 225


 2342              	.LVL148:
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2343              		.loc 6 472 3 is_stmt 0 view .LVU672
 2344              	.LBE223:
 2345              	.LBE222:
 467:Src/main.c    ****   LL_DMA_EnableChannel(DMA1, LL_DMA_CHANNEL_7);
 2346              		.loc 1 467 3 is_stmt 1 view .LVU673
 2347              	.LBB224:
 2348              	.LBI224:
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 2349              		.loc 6 470 22 view .LVU674
 2350              	.LBB225:
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2351              		.loc 6 472 3 view .LVU675
 2352 004c 2968     		ldr	r1, [r5]
 2353 004e 41F00101 		orr	r1, r1, #1
 2354 0052 2960     		str	r1, [r5]
 2355              	.LVL149:
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2356              		.loc 6 472 3 is_stmt 0 view .LVU676
 2357              	.LBE225:
 2358              	.LBE224:
 468:Src/main.c    **** 
 2359              		.loc 1 468 3 is_stmt 1 view .LVU677
 2360              	.LBB226:
 2361              	.LBI226:
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 2362              		.loc 6 470 22 view .LVU678
 2363              	.LBB227:
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2364              		.loc 6 472 3 view .LVU679
 2365 0054 1168     		ldr	r1, [r2]
 2366 0056 41F00101 		orr	r1, r1, #1
 2367 005a 1160     		str	r1, [r2]
 2368              	.LVL150:
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 2369              		.loc 6 472 3 is_stmt 0 view .LVU680
 2370              	.LBE227:
 2371              	.LBE226:
 471:Src/main.c    ****   LL_TIM_EnableDMAReq_CC2(TIM2);
 2372              		.loc 1 471 3 is_stmt 1 view .LVU681
 2373              	.LBB228:
 2374              	.LBI228:
1874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
1878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
1879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
1880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
1881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
1882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 226


1888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
1891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
1895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(*pReg, bitfield) == bitfield);
1896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
1900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
1904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
1905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
1906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear
1907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
1924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
1927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
1928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
1929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear
1930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 227


1945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
1947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
1948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
1952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
1953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
1954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
1955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
1964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
1967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
1968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(*pReg, bitfield) == bitfield);
1969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
1973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
1974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
1975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
1976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
1977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
1979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
1982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
1984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
1986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
1987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
1988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
1989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
1990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
1991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
1992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
1993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
1994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
1995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
1996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
1997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
1998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
1999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 228


2002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
2005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
2010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
2012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
2016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel is supported by a timer instance.
2018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
2019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
2024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
2026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
2030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
2033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
2038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
2040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
2044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
2047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
2051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
2057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 229


2059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
2060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
2064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
2070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
2072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
2073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
2077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
2083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
2086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
2090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
2099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Configure input channel.
2103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
2104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
2105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
2106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
2107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
2108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
2109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
2110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
2111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
2112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
2113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
2114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
2115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 230


2116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
2117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
2118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
2119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
2120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
2121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
2122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
2130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
2131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
2132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING
2133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
2136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
2139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
2140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))  << SH
2141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
2143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the active input.
2147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
2148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
2149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
2150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
2151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
2158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
2164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
2167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
2168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current active input.
2172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 231


2173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
2174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
2175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
2176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
2188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
2191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
2196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
2197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
2198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
2199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
2200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
2207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
2214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
2217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
2218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
2222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
2223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
2224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
2225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
2226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 232


2230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
2239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
2242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
2243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the input filter duration.
2247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
2248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
2249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
2250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
2251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
2258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
2277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
2280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
2281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the input filter duration.
2285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
2286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 233


2287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
2288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
2289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
2314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint32_t *pReg = (uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB_CCMRx[iCh
2317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the input channel polarity.
2322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
2323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
2324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
2325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
2326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
2327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 234


2344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
2370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
2371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
2375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
2378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
2382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
2384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
2388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
2391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
2395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
2397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 235


2401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * a timer instance provides an XOR input.
2403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
2404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
2408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S));
2410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
2414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
2416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
2417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
2421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
2427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
2429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
2430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
2434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
2440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
2442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
2443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
2447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
2453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
2455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
2456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 236


2458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
2460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
2469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
2473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
2474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
2477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
2481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
2487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
2490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
2494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
2500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
2503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
2507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE));
2509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
2513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
2514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 237


2515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       function. This timer input must be configured by calling
2516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
2517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
2518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
2519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
2522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
2523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
2525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
2526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
2527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
2528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
2531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
2533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
2537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
2538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
2539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
2540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
2542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
2543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
2544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
2545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
2548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
2550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
2557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
2561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
2562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
2563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
2564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
2566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
2567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
2568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
2569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
2570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
2571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 238


2572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
2573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
2574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
2577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
2579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
2583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
2586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
2588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
2589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
2590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
2591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
2592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
2595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
2597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
2601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
2604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
2606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
2607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
2608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
2609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
2610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
2611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
2612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
2613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
2614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
2617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
2619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
2623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
2626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 239


2629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
2630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
2636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
2639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
2643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
2649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
2651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
2652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(TIM_TypeDef *TIMx)
2656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM));
2658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
2662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
2663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
2664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
2665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
2666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
2667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
2669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
2670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
2671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
2672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
2673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
2674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
2675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
2676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
2677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
2678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
2679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
2680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
2681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
2682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
2683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
2684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
2685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 240


2686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
2687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
2688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
2689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
2690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
2691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
2692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
2693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
2696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****                                       uint32_t ETRFilter)
2697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
2699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Break_Function Break function configuration
2706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable the break function.
2710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_EnableBRK
2713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK(TIM_TypeDef *TIMx)
2717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKE);
2719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable the break function.
2723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_DisableBRK
2724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK(TIM_TypeDef *TIMx)
2730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BKE);
2732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Configure the break input.
2736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         BKP           LL_TIM_ConfigBRK
2739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  BreakPolarity This parameter can be one of the following values:
2741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_LOW
2742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_HIGH
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 241


2743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK(TIM_TypeDef *TIMx, uint32_t BreakPolarity)
2746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BKP, BreakPolarity);
2748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Select the outputs off state (enabled v.s. disabled) in Idle and Run modes.
2752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         OSSI          LL_TIM_SetOffStates\n
2755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         BDTR         OSSR          LL_TIM_SetOffStates
2756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  OffStateIdle This parameter can be one of the following values:
2758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_DISABLE
2759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_ENABLE
2760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  OffStateRun This parameter can be one of the following values:
2761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_DISABLE
2762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_ENABLE
2763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOffStates(TIM_TypeDef *TIMx, uint32_t OffStateIdle, uint32_t OffStat
2766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_OSSI | TIM_BDTR_OSSR, OffStateIdle | OffStateRun);
2768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable automatic output (MOE can be set by software or automatically when a break input
2772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_EnableAutomaticOutput
2775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAutomaticOutput(TIM_TypeDef *TIMx)
2779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_AOE);
2781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable automatic output (MOE can be set only by software).
2785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_DisableAutomaticOutput
2788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAutomaticOutput(TIM_TypeDef *TIMx)
2792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_AOE);
2794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether automatic output is enabled.
2798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 242


2800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_IsEnabledAutomaticOutput
2801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAutomaticOutput(TIM_TypeDef *TIMx)
2805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->BDTR, TIM_BDTR_AOE) == (TIM_BDTR_AOE));
2807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable the outputs (set the MOE bit in TIMx_BDTR register).
2811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
2812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       software and is reset in case of break or break2 event
2813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_EnableAllOutputs
2816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAllOutputs(TIM_TypeDef *TIMx)
2820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_MOE);
2822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable the outputs (reset the MOE bit in TIMx_BDTR register).
2826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
2827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       software and is reset in case of break or break2 event.
2828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_DisableAllOutputs
2831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAllOutputs(TIM_TypeDef *TIMx)
2835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_MOE);
2837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether outputs are enabled.
2841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       a timer instance provides a break input.
2843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_IsEnabledAllOutputs
2844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAllOutputs(TIM_TypeDef *TIMx)
2848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->BDTR, TIM_BDTR_MOE) == (TIM_BDTR_MOE));
2850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 243


2857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
2861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @note Macro @ref IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
2862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
2863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
2864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
2865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
2867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
2868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
2869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
2870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
2871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
2872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
2873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
2874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
2875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
2876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
2877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
2878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
2879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_RCR
2880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
2881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
2882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
2883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
2884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_BDTR
2885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
2886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
2887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
2888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
2889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
2890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
2891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
2892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
2893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
2894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
2895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
2896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
2897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
2898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
2899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
2900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
2901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
2902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
2903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
2904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
2907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, TIM_DCR_DBL | TIM_DCR_DBA, DMABurstBaseAddress | DMABurstLength);
2909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 244


2914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
2918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
2922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
2923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
2926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
2927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
2931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
2933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) is set (update interrupt is pending).
2937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_IsActiveFlag_UPDATE
2938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_UPDATE(TIM_TypeDef *TIMx)
2942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF));
2944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 interrupt flag (CC1F).
2948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_ClearFlag_CC1
2949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1(TIM_TypeDef *TIMx)
2953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1IF));
2955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 interrupt flag (CC1F) is set (Capture/Compare 1 inte
2959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_IsActiveFlag_CC1
2960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1(TIM_TypeDef *TIMx)
2964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_CC1IF) == (TIM_SR_CC1IF));
2966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 interrupt flag (CC2F).
2970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_ClearFlag_CC2
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 245


2971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2(TIM_TypeDef *TIMx)
2975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2IF));
2977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 interrupt flag (CC2F) is set (Capture/Compare 2 inte
2981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_IsActiveFlag_CC2
2982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2(TIM_TypeDef *TIMx)
2986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_CC2IF) == (TIM_SR_CC2IF));
2988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
2989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
2990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
2991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 interrupt flag (CC3F).
2992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_ClearFlag_CC3
2993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
2994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
2995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
2996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3(TIM_TypeDef *TIMx)
2997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
2998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3IF));
2999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 interrupt flag (CC3F) is set (Capture/Compare 3 inte
3003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_IsActiveFlag_CC3
3004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3(TIM_TypeDef *TIMx)
3008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_CC3IF) == (TIM_SR_CC3IF));
3010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 interrupt flag (CC4F).
3014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_ClearFlag_CC4
3015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4(TIM_TypeDef *TIMx)
3019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4IF));
3021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 interrupt flag (CC4F) is set (Capture/Compare 4 inte
3025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_IsActiveFlag_CC4
3026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 246


3028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4(TIM_TypeDef *TIMx)
3030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_CC4IF) == (TIM_SR_CC4IF));
3032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the commutation interrupt flag (COMIF).
3036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           COMIF         LL_TIM_ClearFlag_COM
3037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_COM(TIM_TypeDef *TIMx)
3041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_COMIF));
3043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether commutation interrupt flag (COMIF) is set (commutation interrupt is pe
3047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           COMIF         LL_TIM_IsActiveFlag_COM
3048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_COM(TIM_TypeDef *TIMx)
3052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_COMIF) == (TIM_SR_COMIF));
3054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the trigger interrupt flag (TIF).
3058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_ClearFlag_TRIG
3059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_TRIG(TIM_TypeDef *TIMx)
3063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_TIF));
3065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether trigger interrupt flag (TIF) is set (trigger interrupt is pending).
3069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           TIF           LL_TIM_IsActiveFlag_TRIG
3070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_TRIG(TIM_TypeDef *TIMx)
3074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_TIF) == (TIM_SR_TIF));
3076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the break interrupt flag (BIF).
3080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           BIF           LL_TIM_ClearFlag_BRK
3081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_BRK(TIM_TypeDef *TIMx)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 247


3085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_BIF));
3087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether break interrupt flag (BIF) is set (break interrupt is pending).
3091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           BIF           LL_TIM_IsActiveFlag_BRK
3092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_BRK(TIM_TypeDef *TIMx)
3096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_BIF) == (TIM_SR_BIF));
3098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 over-capture interrupt flag (CC1OF).
3102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_ClearFlag_CC1OVR
3103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1OVR(TIM_TypeDef *TIMx)
3107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1OF));
3109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 over-capture interrupt flag (CC1OF) is set (Capture/
3113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC1OF         LL_TIM_IsActiveFlag_CC1OVR
3114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1OVR(TIM_TypeDef *TIMx)
3118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_CC1OF) == (TIM_SR_CC1OF));
3120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 over-capture interrupt flag (CC2OF).
3124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_ClearFlag_CC2OVR
3125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2OVR(TIM_TypeDef *TIMx)
3129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2OF));
3131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 over-capture interrupt flag (CC2OF) is set (Capture/
3135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC2OF         LL_TIM_IsActiveFlag_CC2OVR
3136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2OVR(TIM_TypeDef *TIMx)
3140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_CC2OF) == (TIM_SR_CC2OF));
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 248


3142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 over-capture interrupt flag (CC3OF).
3146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_ClearFlag_CC3OVR
3147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3OVR(TIM_TypeDef *TIMx)
3151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3OF));
3153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 over-capture interrupt flag (CC3OF) is set (Capture/
3157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC3OF         LL_TIM_IsActiveFlag_CC3OVR
3158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3OVR(TIM_TypeDef *TIMx)
3162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_CC3OF) == (TIM_SR_CC3OF));
3164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 over-capture interrupt flag (CC4OF).
3168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_ClearFlag_CC4OVR
3169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4OVR(TIM_TypeDef *TIMx)
3173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4OF));
3175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 over-capture interrupt flag (CC4OF) is set (Capture/
3179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll SR           CC4OF         LL_TIM_IsActiveFlag_CC4OVR
3180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4OVR(TIM_TypeDef *TIMx)
3184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->SR, TIM_SR_CC4OF) == (TIM_SR_CC4OF));
3186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
3190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_IT_Management IT-Management
3193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
3194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable update interrupt (UIE).
3197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_EnableIT_UPDATE
3198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 249


3199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_UPDATE(TIM_TypeDef *TIMx)
3202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UIE);
3204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable update interrupt (UIE).
3208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_DisableIT_UPDATE
3209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_UPDATE(TIM_TypeDef *TIMx)
3213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UIE);
3215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the update interrupt (UIE) is enabled.
3219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         UIE           LL_TIM_IsEnabledIT_UPDATE
3220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_UPDATE(TIM_TypeDef *TIMx)
3224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_UIE) == (TIM_DIER_UIE));
3226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare 1 interrupt (CC1IE).
3230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_EnableIT_CC1
3231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC1(TIM_TypeDef *TIMx)
3235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1IE);
3237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare 1  interrupt (CC1IE).
3241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_DisableIT_CC1
3242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC1(TIM_TypeDef *TIMx)
3246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1IE);
3248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 interrupt (CC1IE) is enabled.
3252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC1IE         LL_TIM_IsEnabledIT_CC1
3253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 250


3256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC1(TIM_TypeDef *TIMx)
3257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_CC1IE) == (TIM_DIER_CC1IE));
3259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare 2 interrupt (CC2IE).
3263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_EnableIT_CC2
3264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC2(TIM_TypeDef *TIMx)
3268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2IE);
3270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare 2  interrupt (CC2IE).
3274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_DisableIT_CC2
3275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC2(TIM_TypeDef *TIMx)
3279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2IE);
3281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 2 interrupt (CC2IE) is enabled.
3285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC2IE         LL_TIM_IsEnabledIT_CC2
3286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC2(TIM_TypeDef *TIMx)
3290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_CC2IE) == (TIM_DIER_CC2IE));
3292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare 3 interrupt (CC3IE).
3296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_EnableIT_CC3
3297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC3(TIM_TypeDef *TIMx)
3301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC3IE);
3303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare 3  interrupt (CC3IE).
3307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_DisableIT_CC3
3308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC3(TIM_TypeDef *TIMx)
3312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 251


3313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC3IE);
3314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 3 interrupt (CC3IE) is enabled.
3318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC3IE         LL_TIM_IsEnabledIT_CC3
3319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC3(TIM_TypeDef *TIMx)
3323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_CC3IE) == (TIM_DIER_CC3IE));
3325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare 4 interrupt (CC4IE).
3329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_EnableIT_CC4
3330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_CC4(TIM_TypeDef *TIMx)
3334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC4IE);
3336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare 4  interrupt (CC4IE).
3340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_DisableIT_CC4
3341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_CC4(TIM_TypeDef *TIMx)
3345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC4IE);
3347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 4 interrupt (CC4IE) is enabled.
3351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC4IE         LL_TIM_IsEnabledIT_CC4
3352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_CC4(TIM_TypeDef *TIMx)
3356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_CC4IE) == (TIM_DIER_CC4IE));
3358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable commutation interrupt (COMIE).
3362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_EnableIT_COM
3363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_COM(TIM_TypeDef *TIMx)
3367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_COMIE);
3369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 252


3370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable commutation interrupt (COMIE).
3373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_DisableIT_COM
3374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_COM(TIM_TypeDef *TIMx)
3378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_COMIE);
3380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the commutation interrupt (COMIE) is enabled.
3384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         COMIE         LL_TIM_IsEnabledIT_COM
3385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_COM(TIM_TypeDef *TIMx)
3389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_COMIE) == (TIM_DIER_COMIE));
3391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable trigger interrupt (TIE).
3395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_EnableIT_TRIG
3396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_TRIG(TIM_TypeDef *TIMx)
3400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_TIE);
3402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable trigger interrupt (TIE).
3406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_DisableIT_TRIG
3407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_TRIG(TIM_TypeDef *TIMx)
3411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_TIE);
3413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the trigger interrupt (TIE) is enabled.
3417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         TIE           LL_TIM_IsEnabledIT_TRIG
3418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_TRIG(TIM_TypeDef *TIMx)
3422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_TIE) == (TIM_DIER_TIE));
3424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 253


3427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable break interrupt (BIE).
3428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_EnableIT_BRK
3429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableIT_BRK(TIM_TypeDef *TIMx)
3433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_BIE);
3435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable break interrupt (BIE).
3439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_DisableIT_BRK
3440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableIT_BRK(TIM_TypeDef *TIMx)
3444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_BIE);
3446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the break interrupt (BIE) is enabled.
3450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         BIE           LL_TIM_IsEnabledIT_BRK
3451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledIT_BRK(TIM_TypeDef *TIMx)
3455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_BIE) == (TIM_DIER_BIE));
3457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @}
3461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Management DMA-Management
3464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @{
3465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable update DMA request (UDE).
3468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_EnableDMAReq_UPDATE
3469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_UPDATE(TIM_TypeDef *TIMx)
3473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_UDE);
3475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable update DMA request (UDE).
3479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_DisableDMAReq_UPDATE
3480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_UPDATE(TIM_TypeDef *TIMx)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 254


3484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_UDE);
3486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the update DMA request  (UDE) is enabled.
3490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         UDE           LL_TIM_IsEnabledDMAReq_UPDATE
3491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_UPDATE(TIM_TypeDef *TIMx)
3495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_UDE) == (TIM_DIER_UDE));
3497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare 1 DMA request (CC1DE).
3501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_EnableDMAReq_CC1
3502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC1(TIM_TypeDef *TIMx)
 2375              		.loc 7 3505 22 view .LVU682
 2376              	.LBB229:
3506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC1DE);
 2377              		.loc 7 3507 3 view .LVU683
 2378 005c DA68     		ldr	r2, [r3, #12]
 2379 005e 42F40072 		orr	r2, r2, #512
 2380 0062 DA60     		str	r2, [r3, #12]
 2381              	.LVL151:
 2382              		.loc 7 3507 3 is_stmt 0 view .LVU684
 2383              	.LBE229:
 2384              	.LBE228:
 472:Src/main.c    ****   LL_TIM_EnableDMAReq_UPDATE(TIM2);
 2385              		.loc 1 472 3 is_stmt 1 view .LVU685
 2386              	.LBB230:
 2387              	.LBI230:
3508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare 1  DMA request (CC1DE).
3512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_DisableDMAReq_CC1
3513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC1(TIM_TypeDef *TIMx)
3517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC1DE);
3519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Indicates whether the capture/compare 1 DMA request (CC1DE) is enabled.
3523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC1DE         LL_TIM_IsEnabledDMAReq_CC1
3524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 255


3527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledDMAReq_CC1(TIM_TypeDef *TIMx)
3528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   return (READ_BIT(TIMx->DIER, TIM_DIER_CC1DE) == (TIM_DIER_CC1DE));
3530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Enable capture/compare 2 DMA request (CC2DE).
3534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_EnableDMAReq_CC2
3535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableDMAReq_CC2(TIM_TypeDef *TIMx)
 2388              		.loc 7 3538 22 view .LVU686
 2389              	.LBB231:
3539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   SET_BIT(TIMx->DIER, TIM_DIER_CC2DE);
 2390              		.loc 7 3540 3 view .LVU687
 2391 0064 DA68     		ldr	r2, [r3, #12]
 2392 0066 42F48062 		orr	r2, r2, #1024
 2393 006a DA60     		str	r2, [r3, #12]
 2394              	.LVL152:
 2395              		.loc 7 3540 3 is_stmt 0 view .LVU688
 2396              	.LBE231:
 2397              	.LBE230:
 473:Src/main.c    **** 
 2398              		.loc 1 473 3 is_stmt 1 view .LVU689
 2399              	.LBB232:
 2400              	.LBI232:
3472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 2401              		.loc 7 3472 22 view .LVU690
 2402              	.LBB233:
3474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 2403              		.loc 7 3474 3 view .LVU691
 2404 006c DA68     		ldr	r2, [r3, #12]
 2405 006e 42F48072 		orr	r2, r2, #256
 2406 0072 DA60     		str	r2, [r3, #12]
 2407              	.LVL153:
3474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 2408              		.loc 7 3474 3 is_stmt 0 view .LVU692
 2409              	.LBE233:
 2410              	.LBE232:
 476:Src/main.c    **** 
 2411              		.loc 1 476 3 is_stmt 1 view .LVU693
 2412              	.LBB234:
 2413              	.LBI234:
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 2414              		.loc 7 1265 22 view .LVU694
 2415              	.LBB235:
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 2416              		.loc 7 1267 3 view .LVU695
 2417 0074 1D22     		movs	r2, #29
 2418 0076 5A62     		str	r2, [r3, #36]
 2419              	.LVL154:
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 2420              		.loc 7 1267 3 is_stmt 0 view .LVU696
 2421              	.LBE235:
 2422              	.LBE234:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 256


 479:Src/main.c    **** }
 2423              		.loc 1 479 3 is_stmt 1 view .LVU697
 2424              	.LBB236:
 2425              	.LBI236:
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 2426              		.loc 7 1025 22 view .LVU698
 2427              	.LBB237:
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 2428              		.loc 7 1027 3 view .LVU699
 2429 0078 1A68     		ldr	r2, [r3]
 2430 007a 42F00102 		orr	r2, r2, #1
 2431 007e 1A60     		str	r2, [r3]
 2432              	.LVL155:
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 2433              		.loc 7 1027 3 is_stmt 0 view .LVU700
 2434              	.LBE237:
 2435              	.LBE236:
 480:Src/main.c    **** 
 2436              		.loc 1 480 1 view .LVU701
 2437 0080 30BC     		pop	{r4, r5}
 2438              	.LCFI30:
 2439              		.cfi_restore 5
 2440              		.cfi_restore 4
 2441              		.cfi_def_cfa_offset 0
 2442 0082 7047     		bx	lr
 2443              	.L132:
 2444              		.align	2
 2445              	.L131:
 2446 0084 00000000 		.word	.LANCHOR12
 2447 0088 00000240 		.word	1073872896
 2448 008c 1C000240 		.word	1073872924
 2449 0090 58000240 		.word	1073872984
 2450 0094 80000240 		.word	1073873024
 2451              		.cfi_endproc
 2452              	.LFE713:
 2454              		.section	.text.drawColor,"ax",%progbits
 2455              		.align	1
 2456              		.global	drawColor
 2457              		.syntax unified
 2458              		.thumb
 2459              		.thumb_func
 2460              		.fpu softvfp
 2462              	drawColor:
 2463              	.LVL156:
 2464              	.LFB714:
 483:Src/main.c    ****   for (int y = 0; y <= NCOLS; y++)
 2465              		.loc 1 483 1 is_stmt 1 view -0
 2466              		.cfi_startproc
 2467              		@ args = 0, pretend = 0, frame = 0
 2468              		@ frame_needed = 0, uses_anonymous_args = 0
 2469              		@ link register save eliminated.
 483:Src/main.c    ****   for (int y = 0; y <= NCOLS; y++)
 2470              		.loc 1 483 1 is_stmt 0 view .LVU703
 2471 0000 70B4     		push	{r4, r5, r6}
 2472              	.LCFI31:
 2473              		.cfi_def_cfa_offset 12
 2474              		.cfi_offset 4, -12
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 257


 2475              		.cfi_offset 5, -8
 2476              		.cfi_offset 6, -4
 484:Src/main.c    ****   {
 2477              		.loc 1 484 3 is_stmt 1 view .LVU704
 2478              	.LBB238:
 484:Src/main.c    ****   {
 2479              		.loc 1 484 8 view .LVU705
 2480              	.LVL157:
 484:Src/main.c    ****   {
 2481              		.loc 1 484 12 is_stmt 0 view .LVU706
 2482 0002 0024     		movs	r4, #0
 484:Src/main.c    ****   {
 2483              		.loc 1 484 3 view .LVU707
 2484 0004 11E0     		b	.L134
 2485              	.LVL158:
 2486              	.L142:
 2487              	.LBB239:
 486:Src/main.c    ****     {
 2488              		.loc 1 486 34 discriminator 2 view .LVU708
 2489 0006 0135     		adds	r5, r5, #1
 2490              	.LVL159:
 2491              	.L137:
 486:Src/main.c    ****     {
 2492              		.loc 1 486 5 discriminator 1 view .LVU709
 2493 0008 072D     		cmp	r5, #7
 2494 000a 0DDC     		bgt	.L141
 2495              	.LBB240:
 488:Src/main.c    ****       {
 2496              		.loc 1 488 16 view .LVU710
 2497 000c 0022     		movs	r2, #0
 2498              	.L136:
 2499              	.LVL160:
 488:Src/main.c    ****       {
 2500              		.loc 1 488 7 discriminator 1 view .LVU711
 2501 000e 022A     		cmp	r2, #2
 2502 0010 F9DC     		bgt	.L142
 490:Src/main.c    ****       }
 2503              		.loc 1 490 9 is_stmt 1 discriminator 3 view .LVU712
 490:Src/main.c    ****       }
 2504              		.loc 1 490 23 is_stmt 0 discriminator 3 view .LVU713
 2505 0012 C4EBC403 		rsb	r3, r4, r4, lsl #3
 490:Src/main.c    ****       }
 2506              		.loc 1 490 18 discriminator 3 view .LVU714
 2507 0016 2B44     		add	r3, r3, r5
 490:Src/main.c    ****       }
 2508              		.loc 1 490 43 discriminator 3 view .LVU715
 2509 0018 865C     		ldrb	r6, [r0, r2]	@ zero_extendqisi2
 490:Src/main.c    ****       }
 2510              		.loc 1 490 36 discriminator 3 view .LVU716
 2511 001a 03EB4303 		add	r3, r3, r3, lsl #1
 2512 001e 0649     		ldr	r1, .L144
 2513 0020 0B44     		add	r3, r3, r1
 2514 0022 9E54     		strb	r6, [r3, r2]
 488:Src/main.c    ****       {
 2515              		.loc 1 488 31 discriminator 3 view .LVU717
 2516 0024 0132     		adds	r2, r2, #1
 2517              	.LVL161:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 258


 488:Src/main.c    ****       {
 2518              		.loc 1 488 31 discriminator 3 view .LVU718
 2519 0026 F2E7     		b	.L136
 2520              	.LVL162:
 2521              	.L141:
 488:Src/main.c    ****       {
 2522              		.loc 1 488 31 discriminator 3 view .LVU719
 2523              	.LBE240:
 2524              	.LBE239:
 484:Src/main.c    ****   {
 2525              		.loc 1 484 32 discriminator 2 view .LVU720
 2526 0028 0134     		adds	r4, r4, #1
 2527              	.LVL163:
 2528              	.L134:
 484:Src/main.c    ****   {
 2529              		.loc 1 484 3 discriminator 1 view .LVU721
 2530 002a 072C     		cmp	r4, #7
 2531 002c 01DC     		bgt	.L143
 2532              	.LBB241:
 486:Src/main.c    ****     {
 2533              		.loc 1 486 14 view .LVU722
 2534 002e 0025     		movs	r5, #0
 2535 0030 EAE7     		b	.L137
 2536              	.L143:
 2537              	.LBE241:
 2538              	.LBE238:
 494:Src/main.c    **** 
 2539              		.loc 1 494 1 view .LVU723
 2540 0032 70BC     		pop	{r4, r5, r6}
 2541              	.LCFI32:
 2542              		.cfi_restore 6
 2543              		.cfi_restore 5
 2544              		.cfi_restore 4
 2545              		.cfi_def_cfa_offset 0
 2546              	.LVL164:
 494:Src/main.c    **** 
 2547              		.loc 1 494 1 view .LVU724
 2548 0034 7047     		bx	lr
 2549              	.L145:
 2550 0036 00BF     		.align	2
 2551              	.L144:
 2552 0038 00000000 		.word	effect
 2553              		.cfi_endproc
 2554              	.LFE714:
 2556              		.global	__aeabi_i2f
 2557              		.global	__aeabi_fdiv
 2558              		.global	__aeabi_fsub
 2559              		.global	__aeabi_fmul
 2560              		.global	__aeabi_fcmple
 2561              		.global	__aeabi_fcmpge
 2562              		.section	.text.drawCircle,"ax",%progbits
 2563              		.align	1
 2564              		.global	drawCircle
 2565              		.syntax unified
 2566              		.thumb
 2567              		.thumb_func
 2568              		.fpu softvfp
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 259


 2570              	drawCircle:
 2571              	.LVL165:
 2572              	.LFB715:
 497:Src/main.c    ****   float z = ((float)NCOLS / 2);
 2573              		.loc 1 497 1 is_stmt 1 view -0
 2574              		.cfi_startproc
 2575              		@ args = 0, pretend = 0, frame = 0
 2576              		@ frame_needed = 0, uses_anonymous_args = 0
 497:Src/main.c    ****   float z = ((float)NCOLS / 2);
 2577              		.loc 1 497 1 is_stmt 0 view .LVU726
 2578 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 2579              	.LCFI33:
 2580              		.cfi_def_cfa_offset 32
 2581              		.cfi_offset 4, -32
 2582              		.cfi_offset 5, -28
 2583              		.cfi_offset 6, -24
 2584              		.cfi_offset 7, -20
 2585              		.cfi_offset 8, -16
 2586              		.cfi_offset 9, -12
 2587              		.cfi_offset 10, -8
 2588              		.cfi_offset 14, -4
 2589 0004 8046     		mov	r8, r0
 2590 0006 4FF00009 		mov	r9, #0
 498:Src/main.c    ****   uint16_t coords = 0;
 2591              		.loc 1 498 3 is_stmt 1 view .LVU727
 2592              	.LVL166:
 499:Src/main.c    ****   uint8_t boarder;
 2593              		.loc 1 499 3 view .LVU728
 500:Src/main.c    ****   int16_t temp;
 2594              		.loc 1 500 3 view .LVU729
 501:Src/main.c    ****   for (int y = -(NCOLS / 2); y <= (NCOLS / 2); y++)
 2595              		.loc 1 501 3 view .LVU730
 502:Src/main.c    ****   {
 2596              		.loc 1 502 3 view .LVU731
 2597              	.LBB242:
 502:Src/main.c    ****   {
 2598              		.loc 1 502 8 view .LVU732
 502:Src/main.c    ****   {
 2599              		.loc 1 502 12 is_stmt 0 view .LVU733
 2600 000a 6FF00207 		mvn	r7, #2
 502:Src/main.c    ****   {
 2601              		.loc 1 502 3 view .LVU734
 2602 000e 6BE0     		b	.L147
 2603              	.LVL167:
 2604              	.L161:
 2605              	.LBB243:
 2606              	.LBB244:
 2607              	.LBB245:
 2608              	.LBB246:
 518:Src/main.c    ****             if (temp > 255)
 2609              		.loc 1 518 20 view .LVU735
 2610 0010 0023     		movs	r3, #0
 2611              	.LVL168:
 2612              	.L151:
 521:Src/main.c    ****           }
 2613              		.loc 1 521 13 is_stmt 1 discriminator 2 view .LVU736
 521:Src/main.c    ****           }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 260


 2614              		.loc 1 521 31 is_stmt 0 discriminator 2 view .LVU737
 2615 0012 05EB4500 		add	r0, r5, r5, lsl #1
 2616 0016 3849     		ldr	r1, .L173
 2617 0018 0144     		add	r1, r1, r0
 2618 001a 8B54     		strb	r3, [r1, r2]
 514:Src/main.c    ****           {
 2619              		.loc 1 514 35 discriminator 2 view .LVU738
 2620 001c 0132     		adds	r2, r2, #1
 2621              	.LVL169:
 2622              	.L149:
 514:Src/main.c    ****           {
 2623              		.loc 1 514 11 discriminator 1 view .LVU739
 2624 001e 022A     		cmp	r2, #2
 2625 0020 0EDC     		bgt	.L168
 516:Src/main.c    ****             if (temp < 0)
 2626              		.loc 1 516 13 is_stmt 1 view .LVU740
 516:Src/main.c    ****             if (temp < 0)
 2627              		.loc 1 516 29 is_stmt 0 view .LVU741
 2628 0022 364B     		ldr	r3, .L173+4
 2629 0024 995C     		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 516:Src/main.c    ****             if (temp < 0)
 2630              		.loc 1 516 50 view .LVU742
 2631 0026 18F80230 		ldrb	r3, [r8, r2]	@ zero_extendqisi2
 516:Src/main.c    ****             if (temp < 0)
 2632              		.loc 1 516 33 view .LVU743
 2633 002a 03FB0413 		mla	r3, r3, r4, r1
 516:Src/main.c    ****             if (temp < 0)
 2634              		.loc 1 516 18 view .LVU744
 2635 002e 1BB2     		sxth	r3, r3
 2636              	.LVL170:
 517:Src/main.c    ****               temp = 0;
 2637              		.loc 1 517 13 is_stmt 1 view .LVU745
 517:Src/main.c    ****               temp = 0;
 2638              		.loc 1 517 16 is_stmt 0 view .LVU746
 2639 0030 002B     		cmp	r3, #0
 2640 0032 EDDB     		blt	.L161
 519:Src/main.c    ****               temp = 255;
 2641              		.loc 1 519 13 is_stmt 1 view .LVU747
 519:Src/main.c    ****               temp = 255;
 2642              		.loc 1 519 16 is_stmt 0 view .LVU748
 2643 0034 FF2B     		cmp	r3, #255
 2644 0036 ECDD     		ble	.L151
 520:Src/main.c    ****             effect[coords][z] = temp;
 2645              		.loc 1 520 20 view .LVU749
 2646 0038 FF23     		movs	r3, #255
 2647              	.LVL171:
 520:Src/main.c    ****             effect[coords][z] = temp;
 2648              		.loc 1 520 20 view .LVU750
 2649 003a EAE7     		b	.L151
 2650              	.LVL172:
 2651              	.L160:
 514:Src/main.c    ****           {
 2652              		.loc 1 514 20 view .LVU751
 2653 003c 0022     		movs	r2, #0
 2654 003e EEE7     		b	.L149
 2655              	.LVL173:
 2656              	.L168:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 261


 514:Src/main.c    ****           {
 2657              		.loc 1 514 20 view .LVU752
 2658              	.LBE246:
 523:Src/main.c    ****         }
 2659              		.loc 1 523 19 view .LVU753
 2660 0040 4FF00009 		mov	r9, #0
 2661              	.LVL174:
 2662              	.L150:
 523:Src/main.c    ****         }
 2663              		.loc 1 523 19 view .LVU754
 2664              	.LBE245:
 507:Src/main.c    ****       {
 2665              		.loc 1 507 37 discriminator 2 view .LVU755
 2666 0044 0134     		adds	r4, r4, #1
 2667              	.LVL175:
 2668              	.L148:
 507:Src/main.c    ****       {
 2669              		.loc 1 507 7 discriminator 1 view .LVU756
 2670 0046 042C     		cmp	r4, #4
 2671 0048 1FDC     		bgt	.L169
 2672              	.LBB247:
 509:Src/main.c    ****         float perc = 1 - ((float)i / MAX_DIV);
 2673              		.loc 1 509 9 is_stmt 1 view .LVU757
 2674              	.LVL176:
 510:Src/main.c    ****         // printf("%0.1f\n", perc);
 2675              		.loc 1 510 9 view .LVU758
 510:Src/main.c    ****         // printf("%0.1f\n", perc);
 2676              		.loc 1 510 27 is_stmt 0 view .LVU759
 2677 004a 2046     		mov	r0, r4
 2678 004c FFF7FEFF 		bl	__aeabi_i2f
 2679              	.LVL177:
 510:Src/main.c    ****         // printf("%0.1f\n", perc);
 2680              		.loc 1 510 36 view .LVU760
 2681 0050 2B49     		ldr	r1, .L173+8
 2682 0052 FFF7FEFF 		bl	__aeabi_fdiv
 2683              	.LVL178:
 510:Src/main.c    ****         // printf("%0.1f\n", perc);
 2684              		.loc 1 510 15 view .LVU761
 2685 0056 0146     		mov	r1, r0
 2686 0058 4FF07E50 		mov	r0, #1065353216
 2687 005c FFF7FEFF 		bl	__aeabi_fsub
 2688              	.LVL179:
 2689 0060 8246     		mov	r10, r0
 2690              	.LVL180:
 512:Src/main.c    ****         {
 2691              		.loc 1 512 9 is_stmt 1 view .LVU762
 512:Src/main.c    ****         {
 2692              		.loc 1 512 26 is_stmt 0 view .LVU763
 2693 0062 07FB07F0 		mul	r0, r7, r7
 2694              	.LVL181:
 512:Src/main.c    ****         {
 2695              		.loc 1 512 31 view .LVU764
 2696 0066 06FB0600 		mla	r0, r6, r6, r0
 2697 006a FFF7FEFF 		bl	__aeabi_i2f
 2698              	.LVL182:
 2699 006e 8146     		mov	r9, r0
 512:Src/main.c    ****         {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 262


 2700              		.loc 1 512 42 view .LVU765
 2701 0070 2449     		ldr	r1, .L173+12
 2702 0072 5046     		mov	r0, r10
 2703 0074 FFF7FEFF 		bl	__aeabi_fmul
 2704              	.LVL183:
 512:Src/main.c    ****         {
 2705              		.loc 1 512 12 view .LVU766
 2706 0078 0146     		mov	r1, r0
 2707 007a 4846     		mov	r0, r9
 2708 007c FFF7FEFF 		bl	__aeabi_fcmple
 2709              	.LVL184:
 2710 0080 0028     		cmp	r0, #0
 2711 0082 DBD1     		bne	.L160
 509:Src/main.c    ****         float perc = 1 - ((float)i / MAX_DIV);
 2712              		.loc 1 509 17 view .LVU767
 2713 0084 4FF00109 		mov	r9, #1
 2714 0088 DCE7     		b	.L150
 2715              	.LVL185:
 2716              	.L169:
 509:Src/main.c    ****         float perc = 1 - ((float)i / MAX_DIV);
 2717              		.loc 1 509 17 view .LVU768
 2718              	.LBE247:
 2719              	.LBE244:
 526:Src/main.c    ****       {
 2720              		.loc 1 526 7 is_stmt 1 view .LVU769
 526:Src/main.c    ****       {
 2721              		.loc 1 526 10 is_stmt 0 view .LVU770
 2722 008a B9F1000F 		cmp	r9, #0
 2723 008e 09D0     		beq	.L154
 528:Src/main.c    ****         {
 2724              		.loc 1 528 9 is_stmt 1 view .LVU771
 528:Src/main.c    ****         {
 2725              		.loc 1 528 26 is_stmt 0 view .LVU772
 2726 0090 07FB07F0 		mul	r0, r7, r7
 528:Src/main.c    ****         {
 2727              		.loc 1 528 31 view .LVU773
 2728 0094 06FB0600 		mla	r0, r6, r6, r0
 2729 0098 FFF7FEFF 		bl	__aeabi_i2f
 2730              	.LVL186:
 528:Src/main.c    ****         {
 2731              		.loc 1 528 12 view .LVU774
 2732 009c 1949     		ldr	r1, .L173+12
 2733 009e FFF7FEFF 		bl	__aeabi_fcmpge
 2734              	.LVL187:
 2735 00a2 F0B9     		cbnz	r0, .L170
 2736              	.L154:
 504:Src/main.c    ****     {
 2737              		.loc 1 504 51 discriminator 2 view .LVU775
 2738 00a4 0136     		adds	r6, r6, #1
 2739              	.LVL188:
 2740              	.L159:
 504:Src/main.c    ****     {
 2741              		.loc 1 504 5 discriminator 1 view .LVU776
 2742 00a6 032E     		cmp	r6, #3
 2743 00a8 1DDC     		bgt	.L171
 506:Src/main.c    ****       for (int i = 0; i < MAX_DIV; i++)
 2744              		.loc 1 506 7 is_stmt 1 view .LVU777
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 263


 506:Src/main.c    ****       for (int i = 0; i < MAX_DIV; i++)
 2745              		.loc 1 506 40 is_stmt 0 view .LVU778
 2746 00aa FB1C     		adds	r3, r7, #3
 506:Src/main.c    ****       for (int i = 0; i < MAX_DIV; i++)
 2747              		.loc 1 506 34 view .LVU779
 2748 00ac C3EBC305 		rsb	r5, r3, r3, lsl #3
 2749 00b0 3544     		add	r5, r5, r6
 2750 00b2 ADB2     		uxth	r5, r5
 506:Src/main.c    ****       for (int i = 0; i < MAX_DIV; i++)
 2751              		.loc 1 506 14 view .LVU780
 2752 00b4 0335     		adds	r5, r5, #3
 2753 00b6 ADB2     		uxth	r5, r5
 2754              	.LVL189:
 507:Src/main.c    ****       {
 2755              		.loc 1 507 7 is_stmt 1 view .LVU781
 2756              	.LBB248:
 507:Src/main.c    ****       {
 2757              		.loc 1 507 12 view .LVU782
 507:Src/main.c    ****       {
 2758              		.loc 1 507 16 is_stmt 0 view .LVU783
 2759 00b8 0024     		movs	r4, #0
 507:Src/main.c    ****       {
 2760              		.loc 1 507 7 view .LVU784
 2761 00ba C4E7     		b	.L148
 2762              	.LVL190:
 2763              	.L164:
 507:Src/main.c    ****       {
 2764              		.loc 1 507 7 view .LVU785
 2765              	.LBE248:
 2766              	.LBB249:
 534:Src/main.c    ****             if (temp > 255)
 2767              		.loc 1 534 20 view .LVU786
 2768 00bc 0022     		movs	r2, #0
 2769              	.LVL191:
 2770              	.L156:
 537:Src/main.c    ****           }
 2771              		.loc 1 537 13 is_stmt 1 discriminator 2 view .LVU787
 537:Src/main.c    ****           }
 2772              		.loc 1 537 31 is_stmt 0 discriminator 2 view .LVU788
 2773 00be 05EB4500 		add	r0, r5, r5, lsl #1
 2774 00c2 0D49     		ldr	r1, .L173
 2775 00c4 0144     		add	r1, r1, r0
 2776 00c6 CA54     		strb	r2, [r1, r3]
 530:Src/main.c    ****           {
 2777              		.loc 1 530 35 discriminator 2 view .LVU789
 2778 00c8 0133     		adds	r3, r3, #1
 2779              	.LVL192:
 2780              	.L155:
 530:Src/main.c    ****           {
 2781              		.loc 1 530 11 discriminator 1 view .LVU790
 2782 00ca 022B     		cmp	r3, #2
 2783 00cc EADC     		bgt	.L154
 532:Src/main.c    ****             if (temp < 0)
 2784              		.loc 1 532 13 is_stmt 1 view .LVU791
 532:Src/main.c    ****             if (temp < 0)
 2785              		.loc 1 532 29 is_stmt 0 view .LVU792
 2786 00ce 0B4A     		ldr	r2, .L173+4
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 264


 2787 00d0 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 532:Src/main.c    ****             if (temp < 0)
 2788              		.loc 1 532 46 view .LVU793
 2789 00d2 18F80310 		ldrb	r1, [r8, r3]	@ zero_extendqisi2
 2790              	.LVL193:
 533:Src/main.c    ****               temp = 0;
 2791              		.loc 1 533 13 is_stmt 1 view .LVU794
 533:Src/main.c    ****               temp = 0;
 2792              		.loc 1 533 16 is_stmt 0 view .LVU795
 2793 00d6 521A     		subs	r2, r2, r1
 2794              	.LVL194:
 533:Src/main.c    ****               temp = 0;
 2795              		.loc 1 533 16 view .LVU796
 2796 00d8 F0D4     		bmi	.L164
 535:Src/main.c    ****               temp = 255;
 2797              		.loc 1 535 13 is_stmt 1 view .LVU797
 535:Src/main.c    ****               temp = 255;
 2798              		.loc 1 535 16 is_stmt 0 view .LVU798
 2799 00da FF2A     		cmp	r2, #255
 2800 00dc EFDD     		ble	.L156
 536:Src/main.c    ****             effect[coords][z] = temp;
 2801              		.loc 1 536 20 view .LVU799
 2802 00de FF22     		movs	r2, #255
 2803              	.LVL195:
 536:Src/main.c    ****             effect[coords][z] = temp;
 2804              		.loc 1 536 20 view .LVU800
 2805 00e0 EDE7     		b	.L156
 2806              	.LVL196:
 2807              	.L170:
 530:Src/main.c    ****           {
 2808              		.loc 1 530 20 view .LVU801
 2809 00e2 0023     		movs	r3, #0
 2810 00e4 F1E7     		b	.L155
 2811              	.LVL197:
 2812              	.L171:
 530:Src/main.c    ****           {
 2813              		.loc 1 530 20 view .LVU802
 2814              	.LBE249:
 2815              	.LBE243:
 502:Src/main.c    ****   {
 2816              		.loc 1 502 49 discriminator 2 view .LVU803
 2817 00e6 0137     		adds	r7, r7, #1
 2818              	.LVL198:
 2819              	.L147:
 502:Src/main.c    ****   {
 2820              		.loc 1 502 3 discriminator 1 view .LVU804
 2821 00e8 032F     		cmp	r7, #3
 2822 00ea 02DC     		bgt	.L172
 2823              	.LBB250:
 504:Src/main.c    ****     {
 2824              		.loc 1 504 14 view .LVU805
 2825 00ec 6FF00206 		mvn	r6, #2
 2826 00f0 D9E7     		b	.L159
 2827              	.L172:
 2828              	.LBE250:
 2829              	.LBE242:
 543:Src/main.c    **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 265


 2830              		.loc 1 543 1 view .LVU806
 2831 00f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 2832              	.LVL199:
 2833              	.L174:
 543:Src/main.c    **** 
 2834              		.loc 1 543 1 view .LVU807
 2835 00f6 00BF     		.align	2
 2836              	.L173:
 2837 00f8 00000000 		.word	effect
 2838 00fc 00000000 		.word	.LANCHOR13
 2839 0100 0000A040 		.word	1084227584
 2840 0104 00004441 		.word	1094975488
 2841              		.cfi_endproc
 2842              	.LFE715:
 2844              		.section	.text.drawScrollingString,"ax",%progbits
 2845              		.align	1
 2846              		.global	drawScrollingString
 2847              		.syntax unified
 2848              		.thumb
 2849              		.thumb_func
 2850              		.fpu softvfp
 2852              	drawScrollingString:
 2853              	.LVL200:
 2854              	.LFB716:
 546:Src/main.c    ****   int8_t posX, posY;
 2855              		.loc 1 546 1 is_stmt 1 view -0
 2856              		.cfi_startproc
 2857              		@ args = 20, pretend = 0, frame = 48
 2858              		@ frame_needed = 0, uses_anonymous_args = 0
 546:Src/main.c    ****   int8_t posX, posY;
 2859              		.loc 1 546 1 is_stmt 0 view .LVU809
 2860 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2861              	.LCFI34:
 2862              		.cfi_def_cfa_offset 36
 2863              		.cfi_offset 4, -36
 2864              		.cfi_offset 5, -32
 2865              		.cfi_offset 6, -28
 2866              		.cfi_offset 7, -24
 2867              		.cfi_offset 8, -20
 2868              		.cfi_offset 9, -16
 2869              		.cfi_offset 10, -12
 2870              		.cfi_offset 11, -8
 2871              		.cfi_offset 14, -4
 2872 0004 8DB0     		sub	sp, sp, #52
 2873              	.LCFI35:
 2874              		.cfi_def_cfa_offset 88
 2875 0006 0690     		str	r0, [sp, #24]
 2876 0008 0091     		str	r1, [sp]
 2877 000a 0192     		str	r2, [sp, #4]
 2878 000c 0B93     		str	r3, [sp, #44]
 2879 000e 9DF85C70 		ldrb	r7, [sp, #92]	@ zero_extendqisi2
 2880 0012 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 2881              	.LVL201:
 546:Src/main.c    ****   int8_t posX, posY;
 2882              		.loc 1 546 1 view .LVU810
 2883 0016 0993     		str	r3, [sp, #36]
 2884 0018 9DF864B0 		ldrb	fp, [sp, #100]	@ zero_extendqisi2
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 266


 2885 001c 9DF86830 		ldrb	r3, [sp, #104]	@ zero_extendqisi2
 2886 0020 0593     		str	r3, [sp, #20]
 547:Src/main.c    ****   uint8_t fill, val, col, width = 3 + space;
 2887              		.loc 1 547 3 is_stmt 1 view .LVU811
 548:Src/main.c    ****   for (uint8_t i = letter, idx = 0; i < strlen(frase); i++, idx++)
 2888              		.loc 1 548 3 view .LVU812
 548:Src/main.c    ****   for (uint8_t i = letter, idx = 0; i < strlen(frase); i++, idx++)
 2889              		.loc 1 548 27 is_stmt 0 view .LVU813
 2890 0022 9DF85830 		ldrb	r3, [sp, #88]	@ zero_extendqisi2
 2891 0026 0333     		adds	r3, r3, #3
 2892 0028 5FFA83F8 		uxtb	r8, r3
 2893              	.LVL202:
 549:Src/main.c    ****   {
 2894              		.loc 1 549 3 is_stmt 1 view .LVU814
 2895              	.LBB251:
 549:Src/main.c    ****   {
 2896              		.loc 1 549 8 view .LVU815
 549:Src/main.c    ****   {
 2897              		.loc 1 549 28 is_stmt 0 view .LVU816
 2898 002c 0023     		movs	r3, #0
 2899 002e 0A93     		str	r3, [sp, #40]
 549:Src/main.c    ****   {
 2900              		.loc 1 549 3 view .LVU817
 2901 0030 52E0     		b	.L176
 2902              	.LVL203:
 2903              	.L183:
 2904              	.LBB252:
 2905              	.LBB253:
 2906              	.LBB254:
 568:Src/main.c    ****             effect[x + (y * NCOLS)][z] = col;
 2907              		.loc 1 568 17 discriminator 2 view .LVU818
 2908 0032 0099     		ldr	r1, [sp]
 2909 0034 8E5C     		ldrb	r6, [r1, r2]	@ zero_extendqisi2
 2910              	.L184:
 2911              	.LVL204:
 569:Src/main.c    ****           }
 2912              		.loc 1 569 13 is_stmt 1 discriminator 4 view .LVU819
 569:Src/main.c    ****           }
 2913              		.loc 1 569 27 is_stmt 0 discriminator 4 view .LVU820
 2914 0036 C4EBC401 		rsb	r1, r4, r4, lsl #3
 569:Src/main.c    ****           }
 2915              		.loc 1 569 22 discriminator 4 view .LVU821
 2916 003a 6144     		add	r1, r1, ip
 569:Src/main.c    ****           }
 2917              		.loc 1 569 40 discriminator 4 view .LVU822
 2918 003c 01EB4101 		add	r1, r1, r1, lsl #1
 2919 0040 DFF8DCE0 		ldr	lr, .L191
 2920 0044 7144     		add	r1, r1, lr
 2921 0046 8E54     		strb	r6, [r1, r2]
 566:Src/main.c    ****           {
 2922              		.loc 1 566 39 discriminator 4 view .LVU823
 2923 0048 0132     		adds	r2, r2, #1
 2924              	.LVL205:
 566:Src/main.c    ****           {
 2925              		.loc 1 566 39 discriminator 4 view .LVU824
 2926 004a D2B2     		uxtb	r2, r2
 2927              	.LVL206:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 267


 2928              	.L182:
 566:Src/main.c    ****           {
 2929              		.loc 1 566 11 discriminator 2 view .LVU825
 2930 004c 022A     		cmp	r2, #2
 2931 004e 04D8     		bhi	.L181
 568:Src/main.c    ****             effect[x + (y * NCOLS)][z] = col;
 2932              		.loc 1 568 13 is_stmt 1 view .LVU826
 568:Src/main.c    ****             effect[x + (y * NCOLS)][z] = col;
 2933              		.loc 1 568 17 is_stmt 0 view .LVU827
 2934 0050 002D     		cmp	r5, #0
 2935 0052 EED0     		beq	.L183
 568:Src/main.c    ****             effect[x + (y * NCOLS)][z] = col;
 2936              		.loc 1 568 17 discriminator 1 view .LVU828
 2937 0054 0199     		ldr	r1, [sp, #4]
 2938 0056 8E5C     		ldrb	r6, [r1, r2]	@ zero_extendqisi2
 2939 0058 EDE7     		b	.L184
 2940              	.LVL207:
 2941              	.L181:
 568:Src/main.c    ****             effect[x + (y * NCOLS)][z] = col;
 2942              		.loc 1 568 17 discriminator 1 view .LVU829
 2943              	.LBE254:
 559:Src/main.c    ****       {
 2944              		.loc 1 559 70 discriminator 2 view .LVU830
 2945 005a 0133     		adds	r3, r3, #1
 2946              	.LVL208:
 559:Src/main.c    ****       {
 2947              		.loc 1 559 70 discriminator 2 view .LVU831
 2948 005c 5BB2     		sxtb	r3, r3
 2949              	.LVL209:
 559:Src/main.c    ****       {
 2950              		.loc 1 559 76 discriminator 2 view .LVU832
 2951 005e 0138     		subs	r0, r0, #1
 2952              	.LVL210:
 559:Src/main.c    ****       {
 2953              		.loc 1 559 76 discriminator 2 view .LVU833
 2954 0060 40B2     		sxtb	r0, r0
 2955              	.LVL211:
 2956              	.L179:
 559:Src/main.c    ****       {
 2957              		.loc 1 559 45 discriminator 1 view .LVU834
 2958 0062 9C46     		mov	ip, r3
 559:Src/main.c    ****       {
 2959              		.loc 1 559 53 discriminator 1 view .LVU835
 2960 0064 09EB0802 		add	r2, r9, r8
 559:Src/main.c    ****       {
 2961              		.loc 1 559 62 discriminator 1 view .LVU836
 2962 0068 D21B     		subs	r2, r2, r7
 559:Src/main.c    ****       {
 2963              		.loc 1 559 7 discriminator 1 view .LVU837
 2964 006a 9342     		cmp	r3, r2
 2965 006c 0CDA     		bge	.L180
 561:Src/main.c    ****           break;
 2966              		.loc 1 561 9 is_stmt 1 view .LVU838
 561:Src/main.c    ****           break;
 2967              		.loc 1 561 25 is_stmt 0 view .LVU839
 2968 006e CBF10702 		rsb	r2, fp, #7
 561:Src/main.c    ****           break;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 268


 2969              		.loc 1 561 12 view .LVU840
 2970 0072 9A42     		cmp	r2, r3
 2971 0074 08DD     		ble	.L180
 563:Src/main.c    ****         {
 2972              		.loc 1 563 9 is_stmt 1 view .LVU841
 563:Src/main.c    ****         {
 2973              		.loc 1 563 12 is_stmt 0 view .LVU842
 2974 0076 E345     		cmp	fp, ip
 2975 0078 EFDC     		bgt	.L181
 565:Src/main.c    ****           for (uint8_t z = 0; z < 3; z++)
 2976              		.loc 1 565 11 is_stmt 1 view .LVU843
 565:Src/main.c    ****           for (uint8_t z = 0; z < 3; z++)
 2977              		.loc 1 565 35 is_stmt 0 view .LVU844
 2978 007a 029A     		ldr	r2, [sp, #8]
 2979 007c 22FA00F5 		lsr	r5, r2, r0
 565:Src/main.c    ****           for (uint8_t z = 0; z < 3; z++)
 2980              		.loc 1 565 15 view .LVU845
 2981 0080 05F00105 		and	r5, r5, #1
 2982              	.LVL212:
 566:Src/main.c    ****           {
 2983              		.loc 1 566 11 is_stmt 1 view .LVU846
 2984              	.LBB255:
 566:Src/main.c    ****           {
 2985              		.loc 1 566 16 view .LVU847
 566:Src/main.c    ****           {
 2986              		.loc 1 566 24 is_stmt 0 view .LVU848
 2987 0084 0022     		movs	r2, #0
 566:Src/main.c    ****           {
 2988              		.loc 1 566 11 view .LVU849
 2989 0086 E1E7     		b	.L182
 2990              	.LVL213:
 2991              	.L180:
 566:Src/main.c    ****           {
 2992              		.loc 1 566 11 view .LVU850
 2993 0088 4D46     		mov	r5, r9
 2994              	.LBE255:
 2995              	.LBE253:
 554:Src/main.c    ****     {
 2996              		.loc 1 554 52 discriminator 2 view .LVU851
 2997 008a 0AF1010A 		add	r10, r10, #1
 2998              	.LVL214:
 554:Src/main.c    ****     {
 2999              		.loc 1 554 52 discriminator 2 view .LVU852
 3000 008e 4FFA8AFA 		sxtb	r10, r10
 3001              	.LVL215:
 554:Src/main.c    ****     {
 3002              		.loc 1 554 57 discriminator 2 view .LVU853
 3003 0092 039B     		ldr	r3, [sp, #12]
 3004              	.LVL216:
 554:Src/main.c    ****     {
 3005              		.loc 1 554 57 discriminator 2 view .LVU854
 3006 0094 0133     		adds	r3, r3, #1
 3007 0096 5BB2     		sxtb	r3, r3
 3008 0098 0393     		str	r3, [sp, #12]
 3009              	.LVL217:
 3010              	.L177:
 554:Src/main.c    ****     {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 269


 3011              		.loc 1 554 36 discriminator 1 view .LVU855
 3012 009a 5446     		mov	r4, r10
 554:Src/main.c    ****     {
 3013              		.loc 1 554 45 discriminator 1 view .LVU856
 3014 009c 049B     		ldr	r3, [sp, #16]
 3015 009e 0533     		adds	r3, r3, #5
 554:Src/main.c    ****     {
 3016              		.loc 1 554 5 discriminator 1 view .LVU857
 3017 00a0 9A45     		cmp	r10, r3
 3018 00a2 11DC     		bgt	.L178
 556:Src/main.c    ****         break;
 3019              		.loc 1 556 7 is_stmt 1 view .LVU858
 556:Src/main.c    ****         break;
 3020              		.loc 1 556 23 is_stmt 0 view .LVU859
 3021 00a4 059B     		ldr	r3, [sp, #20]
 3022 00a6 C3F10703 		rsb	r3, r3, #7
 556:Src/main.c    ****         break;
 3023              		.loc 1 556 10 view .LVU860
 3024 00aa 5345     		cmp	r3, r10
 3025 00ac 0CDD     		ble	.L178
 558:Src/main.c    ****       for (int8_t x = posX - pos, aX = 3; x < (posX + width) - pos; x++, aX--)
 3026              		.loc 1 558 7 is_stmt 1 view .LVU861
 558:Src/main.c    ****       for (int8_t x = posX - pos, aX = 3; x < (posX + width) - pos; x++, aX--)
 3027              		.loc 1 558 14 is_stmt 0 view .LVU862
 3028 00ae 0399     		ldr	r1, [sp, #12]
 3029 00b0 069B     		ldr	r3, [sp, #24]
 3030 00b2 079A     		ldr	r2, [sp, #28]
 3031 00b4 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 3032 00b6 FFF7FEFF 		bl	getFontLine
 3033              	.LVL218:
 3034 00ba 0290     		str	r0, [sp, #8]
 3035              	.LVL219:
 559:Src/main.c    ****       {
 3036              		.loc 1 559 7 is_stmt 1 view .LVU863
 3037              	.LBB256:
 559:Src/main.c    ****       {
 3038              		.loc 1 559 12 view .LVU864
 559:Src/main.c    ****       {
 3039              		.loc 1 559 28 is_stmt 0 view .LVU865
 3040 00bc 089B     		ldr	r3, [sp, #32]
 3041 00be DB1B     		subs	r3, r3, r7
 559:Src/main.c    ****       {
 3042              		.loc 1 559 19 view .LVU866
 3043 00c0 5BB2     		sxtb	r3, r3
 3044              	.LVL220:
 559:Src/main.c    ****       {
 3045              		.loc 1 559 35 view .LVU867
 3046 00c2 0320     		movs	r0, #3
 3047 00c4 A946     		mov	r9, r5
 559:Src/main.c    ****       {
 3048              		.loc 1 559 7 view .LVU868
 3049 00c6 CCE7     		b	.L179
 3050              	.LVL221:
 3051              	.L178:
 559:Src/main.c    ****       {
 3052              		.loc 1 559 7 view .LVU869
 3053              	.LBE256:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 270


 3054              	.LBE252:
 549:Src/main.c    ****   {
 3055              		.loc 1 549 57 discriminator 2 view .LVU870
 3056 00c8 099B     		ldr	r3, [sp, #36]
 3057 00ca 0133     		adds	r3, r3, #1
 3058 00cc DBB2     		uxtb	r3, r3
 3059 00ce 0993     		str	r3, [sp, #36]
 3060              	.LVL222:
 549:Src/main.c    ****   {
 3061              		.loc 1 549 64 discriminator 2 view .LVU871
 3062 00d0 0A9B     		ldr	r3, [sp, #40]
 3063 00d2 0133     		adds	r3, r3, #1
 3064 00d4 DBB2     		uxtb	r3, r3
 3065 00d6 0A93     		str	r3, [sp, #40]
 3066              	.LVL223:
 3067              	.L176:
 549:Src/main.c    ****   {
 3068              		.loc 1 549 39 discriminator 1 view .LVU872
 3069 00d8 099C     		ldr	r4, [sp, #36]
 3070 00da 0794     		str	r4, [sp, #28]
 549:Src/main.c    ****   {
 3071              		.loc 1 549 41 discriminator 1 view .LVU873
 3072 00dc 0698     		ldr	r0, [sp, #24]
 3073 00de FFF7FEFF 		bl	strlen
 3074              	.LVL224:
 549:Src/main.c    ****   {
 3075              		.loc 1 549 3 discriminator 1 view .LVU874
 3076 00e2 8442     		cmp	r4, r0
 3077 00e4 0ED2     		bcs	.L190
 551:Src/main.c    ****     posY = offY;
 3078              		.loc 1 551 5 is_stmt 1 view .LVU875
 551:Src/main.c    ****     posY = offY;
 3079              		.loc 1 551 17 is_stmt 0 view .LVU876
 3080 00e6 0A9B     		ldr	r3, [sp, #40]
 3081 00e8 08FB03F3 		mul	r3, r8, r3
 3082 00ec DBB2     		uxtb	r3, r3
 551:Src/main.c    ****     posY = offY;
 3083              		.loc 1 551 26 view .LVU877
 3084 00ee 5B44     		add	r3, r3, fp
 3085 00f0 DBB2     		uxtb	r3, r3
 3086 00f2 0893     		str	r3, [sp, #32]
 551:Src/main.c    ****     posY = offY;
 3087              		.loc 1 551 10 view .LVU878
 3088 00f4 5DB2     		sxtb	r5, r3
 3089              	.LVL225:
 552:Src/main.c    **** 
 3090              		.loc 1 552 5 is_stmt 1 view .LVU879
 552:Src/main.c    **** 
 3091              		.loc 1 552 10 is_stmt 0 view .LVU880
 3092 00f6 9DF91430 		ldrsb	r3, [sp, #20]
 3093 00fa 0493     		str	r3, [sp, #16]
 3094              	.LVL226:
 554:Src/main.c    ****     {
 3095              		.loc 1 554 5 is_stmt 1 view .LVU881
 3096              	.LBB257:
 554:Src/main.c    ****     {
 3097              		.loc 1 554 10 view .LVU882
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 271


 554:Src/main.c    ****     {
 3098              		.loc 1 554 17 is_stmt 0 view .LVU883
 3099 00fc 9A46     		mov	r10, r3
 554:Src/main.c    ****     {
 3100              		.loc 1 554 27 view .LVU884
 3101 00fe 0023     		movs	r3, #0
 3102              	.LVL227:
 554:Src/main.c    ****     {
 3103              		.loc 1 554 27 view .LVU885
 3104 0100 0393     		str	r3, [sp, #12]
 554:Src/main.c    ****     {
 3105              		.loc 1 554 5 view .LVU886
 3106 0102 CAE7     		b	.L177
 3107              	.LVL228:
 3108              	.L190:
 554:Src/main.c    ****     {
 3109              		.loc 1 554 5 view .LVU887
 3110              	.LBE257:
 3111              	.LBE251:
 575:Src/main.c    ****   WS2812_sendbuf(24 * NLEDSCH);
 3112              		.loc 1 575 3 is_stmt 1 view .LVU888
 3113 0104 FFF7FEFF 		bl	fillFramebuffer
 3114              	.LVL229:
 576:Src/main.c    ****   LL_mDelay(interval_ms);
 3115              		.loc 1 576 3 view .LVU889
 3116 0108 4FF4A870 		mov	r0, #336
 3117 010c FFF7FEFF 		bl	WS2812_sendbuf
 3118              	.LVL230:
 577:Src/main.c    ****   clearFramebuffer();
 3119              		.loc 1 577 3 view .LVU890
 3120 0110 0B98     		ldr	r0, [sp, #44]
 3121 0112 FFF7FEFF 		bl	LL_mDelay
 3122              	.LVL231:
 578:Src/main.c    **** }
 3123              		.loc 1 578 3 view .LVU891
 3124 0116 FFF7FEFF 		bl	clearFramebuffer
 3125              	.LVL232:
 579:Src/main.c    **** 
 3126              		.loc 1 579 1 is_stmt 0 view .LVU892
 3127 011a 0DB0     		add	sp, sp, #52
 3128              	.LCFI36:
 3129              		.cfi_def_cfa_offset 36
 3130              	.LVL233:
 579:Src/main.c    **** 
 3131              		.loc 1 579 1 view .LVU893
 3132              		@ sp needed
 3133 011c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3134              	.LVL234:
 3135              	.L192:
 579:Src/main.c    **** 
 3136              		.loc 1 579 1 view .LVU894
 3137              		.align	2
 3138              	.L191:
 3139 0120 00000000 		.word	effect
 3140              		.cfi_endproc
 3141              	.LFE716:
 3143              		.section	.text.drawScrollingLine,"ax",%progbits
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 272


 3144              		.align	1
 3145              		.global	drawScrollingLine
 3146              		.syntax unified
 3147              		.thumb
 3148              		.thumb_func
 3149              		.fpu softvfp
 3151              	drawScrollingLine:
 3152              	.LVL235:
 3153              	.LFB717:
 582:Src/main.c    ****   for (uint8_t i = 0; i < strlen(frase); i++)
 3154              		.loc 1 582 1 is_stmt 1 view -0
 3155              		.cfi_startproc
 3156              		@ args = 12, pretend = 0, frame = 8
 3157              		@ frame_needed = 0, uses_anonymous_args = 0
 582:Src/main.c    ****   for (uint8_t i = 0; i < strlen(frase); i++)
 3158              		.loc 1 582 1 is_stmt 0 view .LVU896
 3159 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3160              	.LCFI37:
 3161              		.cfi_def_cfa_offset 36
 3162              		.cfi_offset 4, -36
 3163              		.cfi_offset 5, -32
 3164              		.cfi_offset 6, -28
 3165              		.cfi_offset 7, -24
 3166              		.cfi_offset 8, -20
 3167              		.cfi_offset 9, -16
 3168              		.cfi_offset 10, -12
 3169              		.cfi_offset 11, -8
 3170              		.cfi_offset 14, -4
 3171 0004 89B0     		sub	sp, sp, #36
 3172              	.LCFI38:
 3173              		.cfi_def_cfa_offset 72
 3174 0006 8046     		mov	r8, r0
 3175 0008 8B46     		mov	fp, r1
 3176 000a 9246     		mov	r10, r2
 3177 000c 0793     		str	r3, [sp, #28]
 3178 000e 9DF84890 		ldrb	r9, [sp, #72]	@ zero_extendqisi2
 3179 0012 9DF84C60 		ldrb	r6, [sp, #76]	@ zero_extendqisi2
 3180 0016 9DF85070 		ldrb	r7, [sp, #80]	@ zero_extendqisi2
 583:Src/main.c    ****   {
 3181              		.loc 1 583 3 is_stmt 1 view .LVU897
 3182              	.LBB258:
 583:Src/main.c    ****   {
 3183              		.loc 1 583 8 view .LVU898
 3184              	.LVL236:
 583:Src/main.c    ****   {
 3185              		.loc 1 583 16 is_stmt 0 view .LVU899
 3186 001a 0025     		movs	r5, #0
 3187 001c 3B46     		mov	r3, r7
 3188              	.LVL237:
 583:Src/main.c    ****   {
 3189              		.loc 1 583 16 view .LVU900
 3190 001e 3746     		mov	r7, r6
 3191 0020 4E46     		mov	r6, r9
 3192 0022 9946     		mov	r9, r3
 583:Src/main.c    ****   {
 3193              		.loc 1 583 3 view .LVU901
 3194 0024 01E0     		b	.L194
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 273


 3195              	.LVL238:
 3196              	.L200:
 583:Src/main.c    ****   {
 3197              		.loc 1 583 43 discriminator 2 view .LVU902
 3198 0026 0135     		adds	r5, r5, #1
 3199              	.LVL239:
 583:Src/main.c    ****   {
 3200              		.loc 1 583 43 discriminator 2 view .LVU903
 3201 0028 EDB2     		uxtb	r5, r5
 3202              	.LVL240:
 3203              	.L194:
 583:Src/main.c    ****   {
 3204              		.loc 1 583 27 discriminator 1 view .LVU904
 3205 002a 4046     		mov	r0, r8
 3206 002c FFF7FEFF 		bl	strlen
 3207              	.LVL241:
 583:Src/main.c    ****   {
 3208              		.loc 1 583 3 discriminator 1 view .LVU905
 3209 0030 8542     		cmp	r5, r0
 3210 0032 11D2     		bcs	.L199
 3211              	.LBB259:
 585:Src/main.c    ****     {
 3212              		.loc 1 585 18 view .LVU906
 3213 0034 0024     		movs	r4, #0
 3214              	.L196:
 3215              	.LVL242:
 585:Src/main.c    ****     {
 3216              		.loc 1 585 5 discriminator 1 view .LVU907
 3217 0036 022C     		cmp	r4, #2
 3218 0038 F5D8     		bhi	.L200
 587:Src/main.c    ****     }
 3219              		.loc 1 587 7 is_stmt 1 discriminator 3 view .LVU908
 3220 003a CDF81090 		str	r9, [sp, #16]
 3221 003e 0397     		str	r7, [sp, #12]
 3222 0040 0295     		str	r5, [sp, #8]
 3223 0042 0194     		str	r4, [sp, #4]
 3224 0044 0096     		str	r6, [sp]
 3225 0046 079B     		ldr	r3, [sp, #28]
 3226 0048 5246     		mov	r2, r10
 3227 004a 5946     		mov	r1, fp
 3228 004c 4046     		mov	r0, r8
 3229 004e FFF7FEFF 		bl	drawScrollingString
 3230              	.LVL243:
 585:Src/main.c    ****     {
 3231              		.loc 1 585 33 is_stmt 0 discriminator 3 view .LVU909
 3232 0052 0134     		adds	r4, r4, #1
 3233              	.LVL244:
 585:Src/main.c    ****     {
 3234              		.loc 1 585 33 discriminator 3 view .LVU910
 3235 0054 E4B2     		uxtb	r4, r4
 3236              	.LVL245:
 585:Src/main.c    ****     {
 3237              		.loc 1 585 33 discriminator 3 view .LVU911
 3238 0056 EEE7     		b	.L196
 3239              	.LVL246:
 3240              	.L199:
 585:Src/main.c    ****     {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 274


 3241              		.loc 1 585 33 discriminator 3 view .LVU912
 3242              	.LBE259:
 3243              	.LBE258:
 590:Src/main.c    **** 
 3244              		.loc 1 590 1 view .LVU913
 3245 0058 09B0     		add	sp, sp, #36
 3246              	.LCFI39:
 3247              		.cfi_def_cfa_offset 36
 3248              		@ sp needed
 3249 005a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 590:Src/main.c    **** 
 3250              		.loc 1 590 1 view .LVU914
 3251              		.cfi_endproc
 3252              	.LFE717:
 3254              		.section	.text.drawLetter,"ax",%progbits
 3255              		.align	1
 3256              		.global	drawLetter
 3257              		.syntax unified
 3258              		.thumb
 3259              		.thumb_func
 3260              		.fpu softvfp
 3262              	drawLetter:
 3263              	.LVL247:
 3264              	.LFB718:
 593:Src/main.c    ****   uint8_t fill;
 3265              		.loc 1 593 1 is_stmt 1 view -0
 3266              		.cfi_startproc
 3267              		@ args = 0, pretend = 0, frame = 8
 3268              		@ frame_needed = 0, uses_anonymous_args = 0
 593:Src/main.c    ****   uint8_t fill;
 3269              		.loc 1 593 1 is_stmt 0 view .LVU916
 3270 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3271              	.LCFI40:
 3272              		.cfi_def_cfa_offset 36
 3273              		.cfi_offset 4, -36
 3274              		.cfi_offset 5, -32
 3275              		.cfi_offset 6, -28
 3276              		.cfi_offset 7, -24
 3277              		.cfi_offset 8, -20
 3278              		.cfi_offset 9, -16
 3279              		.cfi_offset 10, -12
 3280              		.cfi_offset 11, -8
 3281              		.cfi_offset 14, -4
 3282 0004 83B0     		sub	sp, sp, #12
 3283              	.LCFI41:
 3284              		.cfi_def_cfa_offset 48
 3285 0006 0190     		str	r0, [sp, #4]
 3286 0008 0E46     		mov	r6, r1
 3287 000a 1546     		mov	r5, r2
 3288 000c 9946     		mov	r9, r3
 594:Src/main.c    ****   uint8_t val = 0;
 3289              		.loc 1 594 3 is_stmt 1 view .LVU917
 595:Src/main.c    ****   for (uint8_t y = py, l = 0; y <= (py + 5); y++, l++)
 3290              		.loc 1 595 3 view .LVU918
 3291              	.LVL248:
 596:Src/main.c    ****   {
 3292              		.loc 1 596 3 view .LVU919
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 275


 3293              	.LBB260:
 596:Src/main.c    ****   {
 3294              		.loc 1 596 8 view .LVU920
 596:Src/main.c    ****   {
 3295              		.loc 1 596 16 is_stmt 0 view .LVU921
 3296 000e 1F46     		mov	r7, r3
 596:Src/main.c    ****   {
 3297              		.loc 1 596 24 view .LVU922
 3298 0010 4FF00008 		mov	r8, #0
 596:Src/main.c    ****   {
 3299              		.loc 1 596 3 view .LVU923
 3300 0014 26E0     		b	.L202
 3301              	.LVL249:
 3302              	.L205:
 3303              	.LBB261:
 599:Src/main.c    ****     {
 3304              		.loc 1 599 50 discriminator 2 view .LVU924
 3305 0016 0133     		adds	r3, r3, #1
 3306              	.LVL250:
 599:Src/main.c    ****     {
 3307              		.loc 1 599 50 discriminator 2 view .LVU925
 3308 0018 DBB2     		uxtb	r3, r3
 3309              	.LVL251:
 599:Src/main.c    ****     {
 3310              		.loc 1 599 56 discriminator 2 view .LVU926
 3311 001a 0CF1FF3C 		add	ip, ip, #-1
 3312              	.LVL252:
 599:Src/main.c    ****     {
 3313              		.loc 1 599 56 discriminator 2 view .LVU927
 3314 001e 5FFA8CFC 		uxtb	ip, ip
 3315              	.LVL253:
 3316              	.L203:
 599:Src/main.c    ****     {
 3317              		.loc 1 599 36 discriminator 1 view .LVU928
 3318 0022 9E46     		mov	lr, r3
 599:Src/main.c    ****     {
 3319              		.loc 1 599 43 discriminator 1 view .LVU929
 3320 0024 EA1C     		adds	r2, r5, #3
 599:Src/main.c    ****     {
 3321              		.loc 1 599 5 discriminator 1 view .LVU930
 3322 0026 9342     		cmp	r3, r2
 3323 0028 16DC     		bgt	.L211
 601:Src/main.c    ****       if (val)
 3324              		.loc 1 601 7 is_stmt 1 view .LVU931
 601:Src/main.c    ****       if (val)
 3325              		.loc 1 601 31 is_stmt 0 view .LVU932
 3326 002a 20FA0CF2 		lsr	r2, r0, ip
 3327              	.LVL254:
 602:Src/main.c    ****       {
 3328              		.loc 1 602 7 is_stmt 1 view .LVU933
 602:Src/main.c    ****       {
 3329              		.loc 1 602 10 is_stmt 0 view .LVU934
 3330 002e 12F0010F 		tst	r2, #1
 3331 0032 F0D0     		beq	.L205
 3332              	.LBB262:
 604:Src/main.c    ****         {
 3333              		.loc 1 604 22 view .LVU935
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 276


 3334 0034 0022     		movs	r2, #0
 3335              	.LVL255:
 3336              	.L204:
 604:Src/main.c    ****         {
 3337              		.loc 1 604 9 discriminator 1 view .LVU936
 3338 0036 022A     		cmp	r2, #2
 3339 0038 EDD8     		bhi	.L205
 606:Src/main.c    ****         }
 3340              		.loc 1 606 11 is_stmt 1 discriminator 3 view .LVU937
 606:Src/main.c    ****         }
 3341              		.loc 1 606 25 is_stmt 0 discriminator 3 view .LVU938
 3342 003a C4EBC401 		rsb	r1, r4, r4, lsl #3
 606:Src/main.c    ****         }
 3343              		.loc 1 606 20 discriminator 3 view .LVU939
 3344 003e 7144     		add	r1, r1, lr
 606:Src/main.c    ****         }
 3345              		.loc 1 606 45 discriminator 3 view .LVU940
 3346 0040 16F802A0 		ldrb	r10, [r6, r2]	@ zero_extendqisi2
 606:Src/main.c    ****         }
 3347              		.loc 1 606 38 discriminator 3 view .LVU941
 3348 0044 01EB4101 		add	r1, r1, r1, lsl #1
 3349 0048 DFF838B0 		ldr	fp, .L213
 3350 004c 5944     		add	r1, r1, fp
 3351 004e 01F802A0 		strb	r10, [r1, r2]
 604:Src/main.c    ****         {
 3352              		.loc 1 604 37 discriminator 3 view .LVU942
 3353 0052 0132     		adds	r2, r2, #1
 3354              	.LVL256:
 604:Src/main.c    ****         {
 3355              		.loc 1 604 37 discriminator 3 view .LVU943
 3356 0054 D2B2     		uxtb	r2, r2
 3357              	.LVL257:
 604:Src/main.c    ****         {
 3358              		.loc 1 604 37 discriminator 3 view .LVU944
 3359 0056 EEE7     		b	.L204
 3360              	.LVL258:
 3361              	.L211:
 604:Src/main.c    ****         {
 3362              		.loc 1 604 37 discriminator 3 view .LVU945
 3363              	.LBE262:
 3364              	.LBE261:
 596:Src/main.c    ****   {
 3365              		.loc 1 596 47 discriminator 2 view .LVU946
 3366 0058 0137     		adds	r7, r7, #1
 3367              	.LVL259:
 596:Src/main.c    ****   {
 3368              		.loc 1 596 47 discriminator 2 view .LVU947
 3369 005a FFB2     		uxtb	r7, r7
 3370              	.LVL260:
 596:Src/main.c    ****   {
 3371              		.loc 1 596 52 discriminator 2 view .LVU948
 3372 005c 08F10108 		add	r8, r8, #1
 3373              	.LVL261:
 596:Src/main.c    ****   {
 3374              		.loc 1 596 52 discriminator 2 view .LVU949
 3375 0060 5FFA88F8 		uxtb	r8, r8
 3376              	.LVL262:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 277


 3377              	.L202:
 596:Src/main.c    ****   {
 3378              		.loc 1 596 33 discriminator 1 view .LVU950
 3379 0064 3C46     		mov	r4, r7
 596:Src/main.c    ****   {
 3380              		.loc 1 596 40 discriminator 1 view .LVU951
 3381 0066 09F10503 		add	r3, r9, #5
 596:Src/main.c    ****   {
 3382              		.loc 1 596 3 discriminator 1 view .LVU952
 3383 006a 9F42     		cmp	r7, r3
 3384 006c 07DC     		bgt	.L212
 598:Src/main.c    ****     for (uint8_t x = px, aX = 3; x <= (px + 3); x++, aX--)
 3385              		.loc 1 598 5 is_stmt 1 view .LVU953
 598:Src/main.c    ****     for (uint8_t x = px, aX = 3; x <= (px + 3); x++, aX--)
 3386              		.loc 1 598 12 is_stmt 0 view .LVU954
 3387 006e 4146     		mov	r1, r8
 3388 0070 0198     		ldr	r0, [sp, #4]
 3389 0072 FFF7FEFF 		bl	getFontLine
 3390              	.LVL263:
 599:Src/main.c    ****     {
 3391              		.loc 1 599 5 is_stmt 1 view .LVU955
 3392              	.LBB263:
 599:Src/main.c    ****     {
 3393              		.loc 1 599 10 view .LVU956
 599:Src/main.c    ****     {
 3394              		.loc 1 599 18 is_stmt 0 view .LVU957
 3395 0076 2B46     		mov	r3, r5
 599:Src/main.c    ****     {
 3396              		.loc 1 599 26 view .LVU958
 3397 0078 4FF0030C 		mov	ip, #3
 599:Src/main.c    ****     {
 3398              		.loc 1 599 5 view .LVU959
 3399 007c D1E7     		b	.L203
 3400              	.LVL264:
 3401              	.L212:
 599:Src/main.c    ****     {
 3402              		.loc 1 599 5 view .LVU960
 3403              	.LBE263:
 3404              	.LBE260:
 611:Src/main.c    **** 
 3405              		.loc 1 611 1 view .LVU961
 3406 007e 03B0     		add	sp, sp, #12
 3407              	.LCFI42:
 3408              		.cfi_def_cfa_offset 36
 3409              		@ sp needed
 3410 0080 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3411              	.LVL265:
 3412              	.L214:
 611:Src/main.c    **** 
 3413              		.loc 1 611 1 view .LVU962
 3414              		.align	2
 3415              	.L213:
 3416 0084 00000000 		.word	effect
 3417              		.cfi_endproc
 3418              	.LFE718:
 3420              		.section	.text.drawString,"ax",%progbits
 3421              		.align	1
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 278


 3422              		.global	drawString
 3423              		.syntax unified
 3424              		.thumb
 3425              		.thumb_func
 3426              		.fpu softvfp
 3428              	drawString:
 3429              	.LVL266:
 3430              	.LFB719:
 614:Src/main.c    ****   uint8_t posX, posY, nLine = 0, posI = 0;
 3431              		.loc 1 614 1 is_stmt 1 view -0
 3432              		.cfi_startproc
 3433              		@ args = 4, pretend = 0, frame = 0
 3434              		@ frame_needed = 0, uses_anonymous_args = 0
 614:Src/main.c    ****   uint8_t posX, posY, nLine = 0, posI = 0;
 3435              		.loc 1 614 1 is_stmt 0 view .LVU964
 3436 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3437              	.LCFI43:
 3438              		.cfi_def_cfa_offset 32
 3439              		.cfi_offset 3, -32
 3440              		.cfi_offset 4, -28
 3441              		.cfi_offset 5, -24
 3442              		.cfi_offset 6, -20
 3443              		.cfi_offset 7, -16
 3444              		.cfi_offset 8, -12
 3445              		.cfi_offset 9, -8
 3446              		.cfi_offset 14, -4
 3447 0004 0546     		mov	r5, r0
 3448 0006 8946     		mov	r9, r1
 3449 0008 9046     		mov	r8, r2
 3450 000a 1F46     		mov	r7, r3
 3451 000c 9DF82060 		ldrb	r6, [sp, #32]	@ zero_extendqisi2
 615:Src/main.c    ****   for (size_t i = 0; i < strlen(frase); i++)
 3452              		.loc 1 615 3 is_stmt 1 view .LVU965
 3453              	.LVL267:
 616:Src/main.c    ****   {
 3454              		.loc 1 616 3 view .LVU966
 3455              	.LBB264:
 616:Src/main.c    ****   {
 3456              		.loc 1 616 8 view .LVU967
 616:Src/main.c    ****   {
 3457              		.loc 1 616 15 is_stmt 0 view .LVU968
 3458 0010 0024     		movs	r4, #0
 3459              	.LVL268:
 3460              	.L216:
 616:Src/main.c    ****   {
 3461              		.loc 1 616 26 discriminator 1 view .LVU969
 3462 0012 2846     		mov	r0, r5
 3463 0014 FFF7FEFF 		bl	strlen
 3464              	.LVL269:
 616:Src/main.c    ****   {
 3465              		.loc 1 616 3 discriminator 1 view .LVU970
 3466 0018 A042     		cmp	r0, r4
 3467 001a 15D9     		bls	.L219
 618:Src/main.c    ****     nLine = posI / (NCOLS - 2);
 3468              		.loc 1 618 5 is_stmt 1 discriminator 3 view .LVU971
 618:Src/main.c    ****     nLine = posI / (NCOLS - 2);
 3469              		.loc 1 618 30 is_stmt 0 discriminator 3 view .LVU972
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 279


 3470 001c F21C     		adds	r2, r6, #3
 3471 001e 02FB04F2 		mul	r2, r2, r4
 3472 0022 D2B2     		uxtb	r2, r2
 618:Src/main.c    ****     nLine = posI / (NCOLS - 2);
 3473              		.loc 1 618 10 discriminator 3 view .LVU973
 3474 0024 4244     		add	r2, r2, r8
 3475 0026 D2B2     		uxtb	r2, r2
 3476              	.LVL270:
 619:Src/main.c    ****     posY = (nLine * 6) + py;
 3477              		.loc 1 619 5 is_stmt 1 discriminator 3 view .LVU974
 619:Src/main.c    ****     posY = (nLine * 6) + py;
 3478              		.loc 1 619 11 is_stmt 0 discriminator 3 view .LVU975
 3479 0028 0849     		ldr	r1, .L220
 3480 002a A1FB0231 		umull	r3, r1, r1, r2
 3481 002e 8908     		lsrs	r1, r1, #2
 3482              	.LVL271:
 620:Src/main.c    ****     posX = posI;
 3483              		.loc 1 620 5 is_stmt 1 discriminator 3 view .LVU976
 620:Src/main.c    ****     posX = posI;
 3484              		.loc 1 620 24 is_stmt 0 discriminator 3 view .LVU977
 3485 0030 01EB4101 		add	r1, r1, r1, lsl #1
 3486              	.LVL272:
 620:Src/main.c    ****     posX = posI;
 3487              		.loc 1 620 24 discriminator 3 view .LVU978
 3488 0034 4B00     		lsls	r3, r1, #1
 3489 0036 DBB2     		uxtb	r3, r3
 620:Src/main.c    ****     posX = posI;
 3490              		.loc 1 620 10 discriminator 3 view .LVU979
 3491 0038 3B44     		add	r3, r3, r7
 3492              	.LVL273:
 621:Src/main.c    ****     drawLetter(frase[i], color, posX, posY);
 3493              		.loc 1 621 5 is_stmt 1 discriminator 3 view .LVU980
 622:Src/main.c    ****     // posX = (posI - (nLine * (SIZE - 3))) + 1;
 3494              		.loc 1 622 5 discriminator 3 view .LVU981
 3495 003a DBB2     		uxtb	r3, r3
 622:Src/main.c    ****     // posX = (posI - (nLine * (SIZE - 3))) + 1;
 3496              		.loc 1 622 5 is_stmt 0 discriminator 3 view .LVU982
 3497 003c 4946     		mov	r1, r9
 3498 003e 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 3499 0040 FFF7FEFF 		bl	drawLetter
 3500              	.LVL274:
 616:Src/main.c    ****   {
 3501              		.loc 1 616 42 discriminator 3 view .LVU983
 3502 0044 0134     		adds	r4, r4, #1
 3503              	.LVL275:
 616:Src/main.c    ****   {
 3504              		.loc 1 616 42 discriminator 3 view .LVU984
 3505 0046 E4E7     		b	.L216
 3506              	.LVL276:
 3507              	.L219:
 616:Src/main.c    ****   {
 3508              		.loc 1 616 42 discriminator 3 view .LVU985
 3509              	.LBE264:
 625:Src/main.c    **** 
 3510              		.loc 1 625 1 view .LVU986
 3511 0048 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3512              	.LVL277:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 280


 3513              	.L221:
 625:Src/main.c    **** 
 3514              		.loc 1 625 1 view .LVU987
 3515              		.align	2
 3516              	.L220:
 3517 004c CDCCCCCC 		.word	-858993459
 3518              		.cfi_endproc
 3519              	.LFE719:
 3521              		.section	.text.SystemClock_Config,"ax",%progbits
 3522              		.align	1
 3523              		.global	SystemClock_Config
 3524              		.syntax unified
 3525              		.thumb
 3526              		.thumb_func
 3527              		.fpu softvfp
 3529              	SystemClock_Config:
 3530              	.LFB721:
 726:Src/main.c    ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_2);
 3531              		.loc 1 726 1 is_stmt 1 view -0
 3532              		.cfi_startproc
 3533              		@ args = 0, pretend = 0, frame = 0
 3534              		@ frame_needed = 0, uses_anonymous_args = 0
 3535 0000 10B5     		push	{r4, lr}
 3536              	.LCFI44:
 3537              		.cfi_def_cfa_offset 8
 3538              		.cfi_offset 4, -8
 3539              		.cfi_offset 14, -4
 727:Src/main.c    **** 
 3540              		.loc 1 727 3 view .LVU989
 3541              	.LVL278:
 3542              	.LBB265:
 3543              	.LBI265:
 3544              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @file    stm32f1xx_ll_system.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   @verbatim
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ==============================================================================
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****                      ##### How to use this driver #####
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****     [..]
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****     used by user:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****       (+) Access to DBGCMU registers
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****       (+) Access to SYSCFG registers
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   @endverbatim
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ******************************************************************************
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @attention
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * Redistribution and use in source and binary forms, with or without modification,
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * are permitted provided that the following conditions are met:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 281


  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *      this list of conditions and the following disclaimer.
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *      this list of conditions and the following disclaimer in the documentation
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *      and/or other materials provided with the distribution.
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *      may be used to endorse or promote products derived from this software
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *      without specific prior written permission.
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   ******************************************************************************
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #ifndef __STM32F1xx_LL_SYSTEM_H
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define __STM32F1xx_LL_SYSTEM_H
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #ifdef __cplusplus
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** extern "C" {
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #include "stm32f1xx.h"
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @addtogroup STM32F1xx_LL_Driver
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined (FLASH) || defined (DBGMCU)
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 282


  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_TRACE DBGMCU TRACE Pin Assignment
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_NONE               0x00000000U                                     /*!< TRA
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_ASYNCH             DBGMCU_CR_TRACE_IOEN                            /*!< TRA
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE1        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_0) /*!< TRA
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE2        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE_1) /*!< TRA
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_TRACE_SYNCH_SIZE4        (DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE)   /*!< TRA
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP DBGMCU APB1 GRP1 STOP IP
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_CR_DBG_TIM2_STOP          /*!< TIM2 counter stopp
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_CR_DBG_TIM3_STOP          /*!< TIM3 counter stopp
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM4_STOP      DBGMCU_CR_DBG_TIM4_STOP          /*!< TIM4 counter stopp
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM5_STOP)
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM5_STOP      DBGMCU_CR_DBG_TIM5_STOP          /*!< TIM5 counter stopp
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM5_STOP */
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM6_STOP)
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_CR_DBG_TIM6_STOP          /*!< TIM6 counter stopp
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM6_STOP */
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM7_STOP)
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_CR_DBG_TIM7_STOP          /*!< TIM7 counter stopp
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM7_STOP */
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM12_STOP)
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM12_STOP     DBGMCU_CR_DBG_TIM12_STOP         /*!< TIM12 counter stop
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM12_STOP */
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM13_STOP)
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM13_STOP     DBGMCU_CR_DBG_TIM13_STOP         /*!< TIM13 counter stop
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM13_STOP */
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM14_STOP)
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM14_STOP     DBGMCU_CR_DBG_TIM14_STOP         /*!< TIM14 counter stop
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM14_STOP */
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_CR_DBG_WWDG_STOP          /*!< Debug Window Watch
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_CR_DBG_IWDG_STOP          /*!< Debug Independent 
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT /*!< I2C1 SMBUS timeout
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT)
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C2_STOP      DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT /*!< I2C2 SMBUS timeout
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT */
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_CAN1_STOP)
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN1_STOP      DBGMCU_CR_DBG_CAN1_STOP          /*!< CAN1 debug stopped
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN1_STOP */
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_CAN2_STOP)
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_CAN2_STOP      DBGMCU_CR_DBG_CAN2_STOP          /*!< CAN2 debug stopped
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN2_STOP */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 283


 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB2_GRP1_STOP_IP DBGMCU APB2 GRP1 STOP IP
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM1_STOP      DBGMCU_CR_DBG_TIM1_STOP   /*!< TIM1 counter stopped when
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM8_STOP)
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM8_STOP      DBGMCU_CR_DBG_TIM8_STOP   /*!< TIM8 counter stopped when
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_CAN1_STOP */
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM9_STOP)
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM9_STOP      DBGMCU_CR_DBG_TIM9_STOP   /*!< TIM9 counter stopped when
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM9_STOP */
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM10_STOP)
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM10_STOP     DBGMCU_CR_DBG_TIM10_STOP   /*!< TIM10 counter stopped wh
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM10_STOP */
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM11_STOP)
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM11_STOP     DBGMCU_CR_DBG_TIM11_STOP   /*!< TIM11 counter stopped wh
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM11_STOP */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM15_STOP)
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM15_STOP     DBGMCU_CR_DBG_TIM15_STOP   /*!< TIM15 counter stopped wh
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM15_STOP */
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM16_STOP)
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM16_STOP     DBGMCU_CR_DBG_TIM16_STOP   /*!< TIM16 counter stopped wh
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM16_STOP */
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(DBGMCU_CR_DBG_TIM17_STOP)
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM17_STOP     DBGMCU_CR_DBG_TIM17_STOP   /*!< TIM17 counter stopped wh
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* DBGMCU_CR_DBG_TIM17_STOP */
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(FLASH_ACR_LATENCY)
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 0x00000000U             /*!< FLASH Zero Latency cycle */
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY_0     /*!< FLASH One Latency cycle */
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #define LL_FLASH_LATENCY_2                 FLASH_ACR_LATENCY_1     /*!< FLASH Two wait states */
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #else
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #endif /* FLASH_ACR_LATENCY */
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 284


 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Return the device identifier
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For Low Density devices, the device ID is 0x412
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For Medium Density devices, the device ID is 0x410
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For High Density devices, the device ID is 0x414
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For XL Density devices, the device ID is 0x430
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note For Connectivity Line devices, the device ID is 0x418
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFF
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Return the device revision identifier
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @note This field indicates the revision of the device.
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x1000,for Low Density devices
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x0000, revB -> 0x2000, revZ -> 0x2001, rev1,2,3,X or 
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA or 1 -> 0x1000, revZ -> 0x1001,rev1,2,3,X or Y -> 0x1003,
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA or 1 -> 0x1003,for XL Density devices
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****           For example, it is read as revA -> 0x1000, revZ -> 0x1001 for  Connectivity line devices
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> DBGMCU_IDCODE_REV_ID_Pos);
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during SLEEP mode
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_EnableDBGSleepMode
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGSleepMode(void)
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during SLEEP mode
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_DisableDBGSleepMode
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGSleepMode(void)
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 285


 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Set Trace pin assignment control
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_SetTracePinAssignment\n
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_SetTracePinAssignment
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  PinAssignment This parameter can be one of the following values:
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_SetTracePinAssignment(uint32_t PinAssignment)
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   MODIFY_REG(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE, PinAssignment);
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 286


 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Get Trace pin assignment control
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR    TRACE_IOEN    LL_DBGMCU_GetTracePinAssignment\n
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR    TRACE_MODE    LL_DBGMCU_GetTracePinAssignment
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_NONE
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_ASYNCH
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE1
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE2
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_TRACE_SYNCH_SIZE4
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetTracePinAssignment(void)
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->CR, DBGMCU_CR_TRACE_IOEN | DBGMCU_CR_TRACE_MODE));
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB1      DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM4_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM5_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM12_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM13_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C2_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN1_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN2_STOP           LL_DBGMCU_APB1_GRP1_FreezePeriph
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM12_STOP
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM13_STOP
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN1_STOP (*)
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN2_STOP (*)
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, Periphs);
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 287


 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB1      DBG_TIM2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM3_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM4_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM5_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM6_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM7_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM12_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM13_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_TIM14_STOP          LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_RTC_STOP            LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_WWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_IWDG_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C1_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_I2C2_SMBUS_TIMEOUT  LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN1_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB1      DBG_CAN2_STOP           LL_DBGMCU_APB1_GRP1_UnFreezePeriph
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM4_STOP
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM5_STOP
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM12_STOP
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM13_STOP
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM14_STOP
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN1_STOP (*)
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_CAN2_STOP (*)
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, Periphs);
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Freeze APB2 peripherals
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB2      DBG_TIM1_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM8_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM9_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM10_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM11_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM15_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM16_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM17_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 288


 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP (*)
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM9_STOP (*)
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM10_STOP (*)
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM11_STOP (*)
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP (*)
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP (*)
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP (*)
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_FreezePeriph(uint32_t Periphs)
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   SET_BIT(DBGMCU->CR, Periphs);
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Unfreeze APB2 peripherals
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll DBGMCU_CR_APB2      DBG_TIM1_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM8_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM9_STOP    LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM10_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM11_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM15_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM16_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         DBGMCU_CR_APB2      DBG_TIM17_STOP   LL_DBGMCU_APB2_GRP1_FreezePeriph
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM1_STOP
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM8_STOP (*)
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM9_STOP (*)
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM10_STOP (*)
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM11_STOP (*)
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM15_STOP (*)
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM16_STOP (*)
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM17_STOP (*)
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         (*) value not defined in all devices.
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_UnFreezePeriph(uint32_t Periphs)
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, Periphs);
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @}
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** #if defined(FLASH_ACR_LATENCY)
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @{
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Set FLASH Latency
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 289


 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval None
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
 3545              		.loc 8 486 22 view .LVU990
 3546              	.LBB266:
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 3547              		.loc 8 488 3 view .LVU991
 3548 0002 254A     		ldr	r2, .L227
 3549 0004 1368     		ldr	r3, [r2]
 3550 0006 23F00703 		bic	r3, r3, #7
 3551 000a 43F00203 		orr	r3, r3, #2
 3552 000e 1360     		str	r3, [r2]
 3553              	.LVL279:
 3554              		.loc 8 488 3 is_stmt 0 view .LVU992
 3555              	.LBE266:
 3556              	.LBE265:
 729:Src/main.c    ****   {
 3557              		.loc 1 729 3 is_stmt 1 view .LVU993
 3558              	.LBB267:
 3559              	.LBI267:
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** }
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** 
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** /**
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @brief  Get FLASH Latency
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_2
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   */
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
 3560              		.loc 8 499 26 view .LVU994
 3561              	.LBB268:
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h **** {
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 3562              		.loc 8 501 3 view .LVU995
 3563              		.loc 8 501 21 is_stmt 0 view .LVU996
 3564 0010 1368     		ldr	r3, [r2]
 3565              	.LBE268:
 3566              	.LBE267:
 733:Src/main.c    **** 
 3567              		.loc 1 733 3 is_stmt 1 view .LVU997
 3568              	.LBB269:
 3569              	.LBI269:
 3570              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @file    stm32f1xx_ll_rcc.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @attention
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 290


   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *      without specific prior written permission.
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   ******************************************************************************
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #ifndef __STM32F1xx_LL_RCC_H
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __STM32F1xx_LL_RCC_H
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #ifdef __cplusplus
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** extern "C" {
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #include "stm32f1xx.h"
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @addtogroup STM32F1xx_LL_Driver
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC)
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 291


  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** typedef struct
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   uint32_t PCLK2_Frequency;         /*!< PCLK2 clock frequency */
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *           HW set-up.
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define HSE_VALUE    8000000U  /*!< Value of the HSE oscillator in Hz */
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* HSE_VALUE */
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define HSI_VALUE    8000000U  /*!< Value of the HSI oscillator in Hz */
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* HSI_VALUE */
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LSE_VALUE    32768U    /*!< Value of the LSE oscillator in Hz */
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* LSE_VALUE */
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 292


 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LSI_VALUE    32000U    /*!< Value of the LSI oscillator in Hz */
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* LSI_VALUE */
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYC                RCC_CIR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYC                RCC_CIR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYC                RCC_CIR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYC                RCC_CIR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYC                RCC_CIR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYC               RCC_CIR_PLL3RDYC    /*!< PLL3(PLLI2S) Ready Interrupt Cle
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYC               RCC_CIR_PLL2RDYC    /*!< PLL2 Ready Interrupt Clear */
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_CSSC                   RCC_CIR_CSSC        /*!< Clock Security System Interrupt 
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYF                RCC_CIR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYF                RCC_CIR_LSERDYF     /*!< LSE Ready Interrupt flag */
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYF                RCC_CIR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYF                RCC_CIR_HSERDYF     /*!< HSE Ready Interrupt flag */
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYF                RCC_CIR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYF               RCC_CIR_PLL3RDYF    /*!< PLL3(PLLI2S) Ready Interrupt fla
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYF               RCC_CIR_PLL2RDYF    /*!< PLL2 Ready Interrupt flag */
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_CSSF                   RCC_CIR_CSSF        /*!< Clock Security System Interrupt 
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                RCC_CSR_PINRSTF     /*!< PIN reset flag */
 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_PORRSTF                RCC_CSR_PORRSTF     /*!< POR/PDR reset flag */
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                RCC_CSR_SFTRSTF     /*!< Software Reset flag */
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF               RCC_CSR_IWDGRSTF    /*!< Independent Watchdog reset flag 
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF               RCC_CSR_WWDGRSTF    /*!< Window watchdog reset flag */
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF               RCC_CSR_LPWRRSTF    /*!< Low-Power reset flag */
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSIRDYIE               RCC_CIR_LSIRDYIE      /*!< LSI Ready Interrupt Enable */
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_LSERDYIE               RCC_CIR_LSERDYIE      /*!< LSE Ready Interrupt Enable */
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSIRDYIE               RCC_CIR_HSIRDYIE      /*!< HSI Ready Interrupt Enable */
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_HSERDYIE               RCC_CIR_HSERDYIE      /*!< HSE Ready Interrupt Enable */
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLLRDYIE               RCC_CIR_PLLRDYIE      /*!< PLL Ready Interrupt Enable */
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL3RDYIE              RCC_CIR_PLL3RDYIE     /*!< PLL3(PLLI2S) Ready Interrupt E
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_CIR_PLL2RDYIE              RCC_CIR_PLL2RDYIE     /*!< PLL2 Ready Interrupt Enable */
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 293


 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV2)
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_HSE_PREDIV2_DIV HSE PREDIV2 Division factor
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_1           RCC_CFGR2_PREDIV2_DIV1   /*!< PREDIV2 input clock not di
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_2           RCC_CFGR2_PREDIV2_DIV2   /*!< PREDIV2 input clock divide
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_3           RCC_CFGR2_PREDIV2_DIV3   /*!< PREDIV2 input clock divide
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_4           RCC_CFGR2_PREDIV2_DIV4   /*!< PREDIV2 input clock divide
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_5           RCC_CFGR2_PREDIV2_DIV5   /*!< PREDIV2 input clock divide
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_6           RCC_CFGR2_PREDIV2_DIV6   /*!< PREDIV2 input clock divide
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_7           RCC_CFGR2_PREDIV2_DIV7   /*!< PREDIV2 input clock divide
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_8           RCC_CFGR2_PREDIV2_DIV8   /*!< PREDIV2 input clock divide
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_9           RCC_CFGR2_PREDIV2_DIV9   /*!< PREDIV2 input clock divide
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_10          RCC_CFGR2_PREDIV2_DIV10  /*!< PREDIV2 input clock divide
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_11          RCC_CFGR2_PREDIV2_DIV11  /*!< PREDIV2 input clock divide
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_12          RCC_CFGR2_PREDIV2_DIV12  /*!< PREDIV2 input clock divide
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_13          RCC_CFGR2_PREDIV2_DIV13  /*!< PREDIV2 input clock divide
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_14          RCC_CFGR2_PREDIV2_DIV14  /*!< PREDIV2 input clock divide
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_15          RCC_CFGR2_PREDIV2_DIV15  /*!< PREDIV2 input clock divide
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_HSE_PREDIV2_DIV_16          RCC_CFGR2_PREDIV2_DIV16  /*!< PREDIV2 input clock divide
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_PREDIV2 */
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 294


 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE1_DIV1  /*!< HCLK not divided */
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE1_DIV2  /*!< HCLK divided by 2 */
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE1_DIV4  /*!< HCLK divided by 4 */
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE1_DIV8  /*!< HCLK divided by 8 */
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE1_DIV16 /*!< HCLK divided by 16 */
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB2_DIV  APB high-speed prescaler (APB2)
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_1                  RCC_CFGR_PPRE2_DIV1  /*!< HCLK not divided */
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_2                  RCC_CFGR_PPRE2_DIV2  /*!< HCLK divided by 2 */
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_4                  RCC_CFGR_PPRE2_DIV4  /*!< HCLK divided by 4 */
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_8                  RCC_CFGR_PPRE2_DIV8  /*!< HCLK divided by 8 */
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_16                 RCC_CFGR_PPRE2_DIV16 /*!< HCLK divided by 16 */
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          RCC_CFGR_MCOSEL_NOCLOCK      /*!< MCO output disabled, n
 272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCOSEL_SYSCLK       /*!< SYSCLK selection as MC
 273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              RCC_CFGR_MCOSEL_HSI          /*!< HSI selection as MCO s
 274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCOSEL_HSE          /*!< HSE selection as MCO s
 275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK_DIV_2     RCC_CFGR_MCOSEL_PLL_DIV2     /*!< PLL clock divided by 2
 276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOSEL_PLL2CLK)
 277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLL2CLK          RCC_CFGR_MCOSEL_PLL2         /*!< PLL2 clock selected as
 278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOSEL_PLL2CLK */
 279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOSEL_PLL3CLK_DIV2)
 280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLI2SCLK_DIV2   RCC_CFGR_MCOSEL_PLL3_DIV2    /*!< PLLI2S clock divided b
 281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOSEL_PLL3CLK_DIV2 */
 282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOSEL_EXT_HSE)
 283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_EXT_HSE          RCC_CFGR_MCOSEL_EXT_HSE      /*!< XT1 external 3-25 MHz 
 284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOSEL_EXT_HSE */
 285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOSEL_PLL3CLK)
 286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLI2SCLK        RCC_CFGR_MCOSEL_PLL3CLK      /*!< PLLI2S clock selected 
 287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOSEL_PLL3CLK */
 288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 295


 294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         0x00000000U      /*!< No clock enabled for the periphera
 297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         0xFFFFFFFFU      /*!< Frequency cannot be provided as ex
 298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
 304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S2CLKSOURCE Peripheral I2S clock source selection
 305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE_SYSCLK        RCC_CFGR2_I2S2SRC                                      
 308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO    (uint32_t)(RCC_CFGR2_I2S2SRC | (RCC_CFGR2_I2S2SRC >> 16
 309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE_SYSCLK        RCC_CFGR2_I2S3SRC                                      
 310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO    (uint32_t)(RCC_CFGR2_I2S3SRC | (RCC_CFGR2_I2S3SRC >> 16
 311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
 315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
 317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE Peripheral USB clock source selection
 318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_USBPRE)
 321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL             RCC_CFGR_USBPRE        /*!< PLL clock is not divided *
 322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5     0x00000000U            /*!< PLL clock is divided by 1.
 323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_USBPRE*/                   
 324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_OTGFSPRE)               
 325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_2       RCC_CFGR_OTGFSPRE      /*!< PLL clock is divided by 2 
 326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL_DIV_3       0x00000000U            /*!< PLL clock is divided by 3 
 327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_OTGFSPRE*/
 328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
 332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC_CLKSOURCE_PCLK2 Peripheral ADC clock source selection
 334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_2    RCC_CFGR_ADCPRE_DIV2 /*ADC prescaler PCLK2 divided by 2*/
 337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_4    RCC_CFGR_ADCPRE_DIV4 /*ADC prescaler PCLK2 divided by 4*/
 338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_6    RCC_CFGR_ADCPRE_DIV6 /*ADC prescaler PCLK2 divided by 6*/
 339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSRC_PCLK2_DIV_8    RCC_CFGR_ADCPRE_DIV8 /*ADC prescaler PCLK2 divided by 8*/
 340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
 345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2S2 Peripheral I2S get clock source
 346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S2_CLKSOURCE              RCC_CFGR2_I2S2SRC       /*!< I2S2 Clock source selection
 349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_I2S3_CLKSOURCE              RCC_CFGR2_I2S3SRC       /*!< I2S3 Clock source selection
 350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 296


 351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
 355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
 357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB Peripheral USB get clock source
 358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               0x00400000U     /*!< USB Clock source selection */
 361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
 366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_ADC Peripheral ADC get clock source
 368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ADC_CLKSOURCE               RCC_CFGR_ADCPRE /*!< ADC Clock source selection */
 371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          0x00000000U             /*!< No clock used as RTC clock 
 379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_BDCR_RTCSEL_0       /*!< LSE oscillator clock used a
 380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_BDCR_RTCSEL_1       /*!< LSI oscillator clock used a
 381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE_DIV128    RCC_BDCR_RTCSEL         /*!< HSE oscillator clock divide
 382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_MUL PLL Multiplicator factor
 387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL2)
 390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_2                   RCC_CFGR_PLLMULL2  /*!< PLL input clock*2 */
 391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL2*/
 392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL3)
 393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_3                   RCC_CFGR_PLLMULL3  /*!< PLL input clock*3 */
 394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL3*/
 395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_4                   RCC_CFGR_PLLMULL4  /*!< PLL input clock*4 */
 396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_5                   RCC_CFGR_PLLMULL5  /*!< PLL input clock*5 */
 397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6                   RCC_CFGR_PLLMULL6  /*!< PLL input clock*6 */
 398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_7                   RCC_CFGR_PLLMULL7  /*!< PLL input clock*7 */
 399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_8                   RCC_CFGR_PLLMULL8  /*!< PLL input clock*8 */
 400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_9                   RCC_CFGR_PLLMULL9  /*!< PLL input clock*9 */
 401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL6_5)
 402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6_5                 RCC_CFGR_PLLMULL6_5 /*!< PLL input clock*6 */
 403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else
 404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_10                  RCC_CFGR_PLLMULL10  /*!< PLL input clock*10 */
 405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_11                  RCC_CFGR_PLLMULL11  /*!< PLL input clock*11 */
 406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_12                  RCC_CFGR_PLLMULL12  /*!< PLL input clock*12 */
 407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_13                  RCC_CFGR_PLLMULL13  /*!< PLL input clock*13 */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 297


 408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_14                  RCC_CFGR_PLLMULL14  /*!< PLL input clock*14 */
 409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_15                  RCC_CFGR_PLLMULL15  /*!< PLL input clock*15 */
 410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_16                  RCC_CFGR_PLLMULL16  /*!< PLL input clock*16 */
 411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_PLLMULL6_5*/
 412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE PLL SOURCE
 417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI_DIV_2         0x00000000U                                    /*!< HSI 
 420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_CFGR_PLLSRC                                /*!< HSE/
 421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1SRC)
 422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2              (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1SRC << 4U) /*!< PLL2
 423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1)
 426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_1         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV1)    /*!< HSE/1
 427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_2         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV2)    /*!< HSE/2
 428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_3         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV3)    /*!< HSE/3
 429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_4         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV4)    /*!< HSE/4
 430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_5         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV5)    /*!< HSE/5
 431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_6         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV6)    /*!< HSE/6
 432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_7         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV7)    /*!< HSE/7
 433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_8         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV8)    /*!< HSE/8
 434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_9         (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV9)    /*!< HSE/9
 435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_10        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV10)   /*!< HSE/1
 436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_11        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV11)   /*!< HSE/1
 437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_12        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV12)   /*!< HSE/1
 438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_13        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV13)   /*!< HSE/1
 439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_14        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV14)   /*!< HSE/1
 440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_15        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV15)   /*!< HSE/1
 441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_16        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV16)   /*!< HSE/1
 442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1SRC)
 443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_1        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV1 | RCC_CFGR2_PR
 444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_2        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV2 | RCC_CFGR2_PR
 445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_3        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV3 | RCC_CFGR2_PR
 446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_4        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV4 | RCC_CFGR2_PR
 447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_5        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV5 | RCC_CFGR2_PR
 448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_6        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV6 | RCC_CFGR2_PR
 449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_7        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV7 | RCC_CFGR2_PR
 450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_8        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV8 | RCC_CFGR2_PR
 451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_9        (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV9 | RCC_CFGR2_PR
 452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_10       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV10 | RCC_CFGR2_P
 453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_11       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV11 | RCC_CFGR2_P
 454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_12       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV12 | RCC_CFGR2_P
 455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_13       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV13 | RCC_CFGR2_P
 456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_14       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV14 | RCC_CFGR2_P
 457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_15       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV15 | RCC_CFGR2_P
 458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_PLL2_DIV_16       (RCC_CFGR_PLLSRC | RCC_CFGR2_PREDIV1_DIV16 | RCC_CFGR2_P
 459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else
 461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_1         (RCC_CFGR_PLLSRC | 0x00000000U)               /*!< HSE/1
 462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE_DIV_2         (RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE)         /*!< HSE/2
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1*/
 464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 298


 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PREDIV_DIV PREDIV Division factor
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV1)
 472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_1                RCC_CFGR2_PREDIV1_DIV1   /*!< PREDIV1 input clock not di
 473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_2                RCC_CFGR2_PREDIV1_DIV2   /*!< PREDIV1 input clock divide
 474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_3                RCC_CFGR2_PREDIV1_DIV3   /*!< PREDIV1 input clock divide
 475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_4                RCC_CFGR2_PREDIV1_DIV4   /*!< PREDIV1 input clock divide
 476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_5                RCC_CFGR2_PREDIV1_DIV5   /*!< PREDIV1 input clock divide
 477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_6                RCC_CFGR2_PREDIV1_DIV6   /*!< PREDIV1 input clock divide
 478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_7                RCC_CFGR2_PREDIV1_DIV7   /*!< PREDIV1 input clock divide
 479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_8                RCC_CFGR2_PREDIV1_DIV8   /*!< PREDIV1 input clock divide
 480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_9                RCC_CFGR2_PREDIV1_DIV9   /*!< PREDIV1 input clock divide
 481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_10               RCC_CFGR2_PREDIV1_DIV10  /*!< PREDIV1 input clock divide
 482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_11               RCC_CFGR2_PREDIV1_DIV11  /*!< PREDIV1 input clock divide
 483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_12               RCC_CFGR2_PREDIV1_DIV12  /*!< PREDIV1 input clock divide
 484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_13               RCC_CFGR2_PREDIV1_DIV13  /*!< PREDIV1 input clock divide
 485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_14               RCC_CFGR2_PREDIV1_DIV14  /*!< PREDIV1 input clock divide
 486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_15               RCC_CFGR2_PREDIV1_DIV15  /*!< PREDIV1 input clock divide
 487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_16               RCC_CFGR2_PREDIV1_DIV16  /*!< PREDIV1 input clock divide
 488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_1                0x00000000U              /*!< HSE divider clock clock no
 490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PREDIV_DIV_2                RCC_CFGR_PLLXTPRE        /*!< HSE divider clock divided 
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR2_PREDIV1*/
 492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLLI2S_SUPPORT)
 497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLI2S_MUL PLLI2S MUL
 498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_8                RCC_CFGR2_PLL3MUL8   /*!< PLLI2S input clock * 8 */
 501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_9                RCC_CFGR2_PLL3MUL9   /*!< PLLI2S input clock * 9 */
 502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_10               RCC_CFGR2_PLL3MUL10  /*!< PLLI2S input clock * 10 */
 503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_11               RCC_CFGR2_PLL3MUL11  /*!< PLLI2S input clock * 11 */
 504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_12               RCC_CFGR2_PLL3MUL12  /*!< PLLI2S input clock * 12 */
 505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_13               RCC_CFGR2_PLL3MUL13  /*!< PLLI2S input clock * 13 */
 506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_14               RCC_CFGR2_PLL3MUL14  /*!< PLLI2S input clock * 14 */
 507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_16               RCC_CFGR2_PLL3MUL16  /*!< PLLI2S input clock * 16 */
 508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLLI2S_MUL_20               RCC_CFGR2_PLL3MUL20  /*!< PLLI2S input clock * 20 */
 509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLLI2S_SUPPORT */
 514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLL2_SUPPORT)
 516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL2_MUL PLL2 MUL
 517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_8                  RCC_CFGR2_PLL2MUL8   /*!< PLL2 input clock * 8 */
 520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_9                  RCC_CFGR2_PLL2MUL9   /*!< PLL2 input clock * 9 */
 521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_10                 RCC_CFGR2_PLL2MUL10  /*!< PLL2 input clock * 10 */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 299


 522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_11                 RCC_CFGR2_PLL2MUL11  /*!< PLL2 input clock * 11 */
 523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_12                 RCC_CFGR2_PLL2MUL12  /*!< PLL2 input clock * 12 */
 524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_13                 RCC_CFGR2_PLL2MUL13  /*!< PLL2 input clock * 13 */
 525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_14                 RCC_CFGR2_PLL2MUL14  /*!< PLL2 input clock * 14 */
 526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_16                 RCC_CFGR2_PLL2MUL16  /*!< PLL2 input clock * 16 */
 527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_PLL2_MUL_20                 RCC_CFGR2_PLL2MUL20  /*!< PLL2 input clock * 20 */
 528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLL2_SUPPORT */
 533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
 539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
 540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
 544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Write a value in RCC register
 549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __REG__ Register to be written
 550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
 551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
 554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Read a value in RCC register
 557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __REG__ Register to be read
 558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Register value
 559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
 561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
 566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_PLLMULL6_5)
 570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE / (@ref LL_RCC_PLL_GetPrediv () + 1), @ref 
 573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE div Prediv1 / HSI div 2 / PLL2 div Pred
 574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLMUL__: This parameter can be one of the following values:
 575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 300


 579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6_5
 582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__) \
 585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****           (((__PLLMUL__) != RCC_CFGR_PLLMULL6_5) ? \
 586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****               ((__INPUTFREQ__) * ((((__PLLMUL__) & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos) + 2U)
 587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****               (((__INPUTFREQ__) * 13U) / 2U))
 588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else
 590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE / (@ref LL_RCC_PLL_GetPrediv () + 1), @ref 
 593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on HSE div Prediv1 or div 2 / HSI div 2)
 594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLMUL__: This parameter can be one of the following values:
 595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2
 596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
 599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
 601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
 603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10
 604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11
 605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13
 607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14
 608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15
 609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 611:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 612:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__) ((__INPUTFREQ__) * (((__PLLMUL__) >> R
 613:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR_PLLMULL6_5 */
 614:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 615:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLLI2S_SUPPORT)
 616:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 617:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLI2S frequency
 618:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLI2SCLK_FREQ (HSE_VALUE, @ref LL_RCC_PLLI2S_GetMultiplicator (),
 619:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLLI2S Input frequency (based on HSE value)
 620:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLI2SMUL__: This parameter can be one of the following values:
 621:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_8
 622:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_9
 623:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_10
 624:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_11
 625:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_12
 626:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_13
 627:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_14
 628:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_16
 629:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLI2S_MUL_20
 630:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLLI2SDIV__: This parameter can be one of the following values:
 631:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 632:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 633:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 634:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 635:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 301


 636:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 637:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
 638:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 639:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 640:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 641:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 642:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 643:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
 644:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 645:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 646:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 647:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PLLI2S clock frequency (in Hz)
 648:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 649:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLI2SCLK_FREQ(__INPUTFREQ__, __PLLI2SMUL__, __PLLI2SDIV__) (((__INPUTFREQ__)
 650:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLLI2S_SUPPORT */
 651:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 652:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_PLL2_SUPPORT)
 653:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 654:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLL2 frequency
 655:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLL2CLK_FREQ (HSE_VALUE, @ref LL_RCC_PLL2_GetMultiplicator (), @re
 656:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL2 Input frequency (based on HSE value)
 657:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLL2MUL__: This parameter can be one of the following values:
 658:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_8
 659:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_9
 660:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_10
 661:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_11
 662:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_12
 663:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_13
 664:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_14
 665:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_16
 666:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL2_MUL_20
 667:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __PLL2DIV__: This parameter can be one of the following values:
 668:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 669:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 670:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 671:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 672:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
 673:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 674:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
 675:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 676:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 677:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 678:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 679:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 680:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
 681:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 682:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 683:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 684:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PLL2 clock frequency (in Hz)
 685:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 686:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PLL2CLK_FREQ(__INPUTFREQ__, __PLL2MUL__, __PLL2DIV__) (((__INPUTFREQ__) * (((
 687:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_PLL2_SUPPORT */
 688:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 689:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 690:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
 691:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note: __AHBPRESCALER__ be retrieved by @ref LL_RCC_GetAHBPrescaler
 692:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_HCLK_FREQ(LL_RCC_GetAHBPrescaler())
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 302


 693:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on HSE/HSI/PLLCLK)
 694:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __AHBPRESCALER__: This parameter can be one of the following values:
 695:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
 696:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
 697:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
 698:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
 699:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
 700:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
 701:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
 702:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
 703:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
 704:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
 705:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 706:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
 707:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 708:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 709:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
 710:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note: __APB1PRESCALER__ be retrieved by @ref LL_RCC_GetAPB1Prescaler
 711:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK1_FREQ(LL_RCC_GetAPB1Prescaler())
 712:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 713:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __APB1PRESCALER__: This parameter can be one of the following values:
 714:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
 715:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
 716:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
 717:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
 718:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
 719:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
 720:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 721:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 722:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 723:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 724:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK2 frequency (ABP2)
 725:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note: __APB2PRESCALER__ be retrieved by @ref LL_RCC_GetAPB2Prescaler
 726:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK2_FREQ(LL_RCC_GetAPB2Prescaler())
 727:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 728:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  __APB2PRESCALER__: This parameter can be one of the following values:
 729:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
 730:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
 731:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
 732:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
 733:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
 734:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval PCLK2 clock frequency (in Hz)
 735:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 736:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK2_FREQ(__HCLKFREQ__, __APB2PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 737:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 738:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 739:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 740:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 741:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 742:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 743:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 744:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 745:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 746:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
 747:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
 748:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 749:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 303


 750:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 751:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
 752:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 753:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 754:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 755:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 756:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
 757:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           CSSON         LL_RCC_HSE_EnableCSS
 758:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 759:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 760:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
 761:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 762:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 763:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 764:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 765:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 766:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
 767:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
 768:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 769:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 770:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
 771:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 772:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 773:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 774:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 775:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 776:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
 777:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
 778:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 780:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 783:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 785:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 786:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
 787:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
 788:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 789:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 790:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
 3571              		.loc 9 790 22 view .LVU998
 3572              	.LBB270:
 791:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 792:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
 3573              		.loc 9 792 3 view .LVU999
 3574 0012 A2F58052 		sub	r2, r2, #4096
 3575 0016 1368     		ldr	r3, [r2]
 3576 0018 43F48033 		orr	r3, r3, #65536
 3577 001c 1360     		str	r3, [r2]
 3578              	.L223:
 3579              	.LBE270:
 3580              	.LBE269:
 738:Src/main.c    ****   LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSE_DIV_1, LL_RCC_PLL_MUL_9);
 3581              		.loc 1 738 3 discriminator 1 view .LVU1000
 3582              	.LBB271:
 3583              	.LBI271:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 304


 793:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 794:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 795:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 796:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
 797:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
 798:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 799:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 800:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
 801:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 802:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
 803:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 804:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 805:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 806:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
 807:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
 808:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 809:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 810:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
 3584              		.loc 9 810 26 discriminator 1 view .LVU1001
 3585              	.LBB272:
 811:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 812:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
 3586              		.loc 9 812 3 discriminator 1 view .LVU1002
 3587              		.loc 9 812 11 is_stmt 0 discriminator 1 view .LVU1003
 3588 001e 1F4B     		ldr	r3, .L227+4
 3589 0020 1B68     		ldr	r3, [r3]
 3590              	.LBE272:
 3591              	.LBE271:
 736:Src/main.c    ****   {
 3592              		.loc 1 736 9 discriminator 1 view .LVU1004
 3593 0022 13F4003F 		tst	r3, #131072
 3594 0026 FAD0     		beq	.L223
 739:Src/main.c    ****   LL_RCC_PLL_Enable();
 3595              		.loc 1 739 3 is_stmt 1 view .LVU1005
 3596              	.LVL280:
 3597              	.LBB273:
 3598              	.LBI273:
 813:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 814:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 815:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_PREDIV2)
 816:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 817:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get PREDIV2 division factor
 818:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        PREDIV2       LL_RCC_HSE_GetPrediv2
 819:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
 820:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_1
 821:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_2
 822:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_3
 823:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_4
 824:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_5
 825:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_6
 826:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_7
 827:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_8
 828:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_9
 829:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_10
 830:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_11
 831:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_12
 832:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_13
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 305


 833:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_14
 834:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_15
 835:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_HSE_PREDIV2_DIV_16
 836:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 837:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_GetPrediv2(void)
 838:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 839:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV2));
 840:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 841:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_PREDIV2 */
 842:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 843:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 844:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 845:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 846:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 847:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
 848:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 849:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 850:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 851:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSICAL        LL_RCC_HSI_GetCalibration
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 306


 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSICAL) >> RCC_CR_HSICAL_Pos);
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, Value << RCC_CR_HSITRIM_Pos);
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_Pos);
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Enable
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEON         LL_RCC_LSE_Disable
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEON);
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 307


 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_EnableBypass
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSEBYP        LL_RCC_LSE_DisableBypass
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSEBYP);
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         LSERDY        LL_RCC_LSE_IsReady
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == (RCC_BDCR_LSERDY));
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 308


1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == (RCC_CSR_LSIRDY));
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure the system clock source
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get the system clock source
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set AHB prescaler
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 309


1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_SetAPB1Prescaler
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set APB2 prescaler
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_SetAPB2Prescaler
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get AHB prescaler
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 310


1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_GetAPB1Prescaler
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get APB2 prescaler
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_GetAPB2Prescaler
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure MCOx
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         MCO           LL_RCC_ConfigMCO
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK_DIV_2
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLL2CLK (*)
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLI2SCLK_DIV2 (*)
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_EXT_HSE (*)
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLI2SCLK (*)
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 311


1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL, MCOxSource);
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure I2Sx clock source
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        I2S2SRC       LL_RCC_SetI2SClockSource\n
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        I2S3SRC       LL_RCC_SetI2SClockSource
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  I2SxSource This parameter can be one of the following values:
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_SYSCLK
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_SYSCLK
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetI2SClockSource(uint32_t I2SxSource)
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR2, (I2SxSource & 0xFFFF0000U), (I2SxSource << 16U));
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure USB clock source
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         OTGFSPRE      LL_RCC_SetUSBClockSource\n
1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR         USBPRE        LL_RCC_SetUSBClockSource
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  USBxSource This parameter can be one of the following values:
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL (*)
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5 (*)
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_2 (*)
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_3 (*)
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSBClockSource(uint32_t USBxSource)
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR_USBPRE)
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_USBPRE, USBxSource);
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #else /*RCC_CFGR_OTGFSPRE*/
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_OTGFSPRE, USBxSource);
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /*RCC_CFGR_USBPRE*/
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure ADC clock source
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         ADCPRE        LL_RCC_SetADCClockSource
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 312


1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  ADCxSource This parameter can be one of the following values:
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_2
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_4
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_6
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_8
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetADCClockSource(uint32_t ADCxSource)
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_ADCPRE, ADCxSource);
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(RCC_CFGR2_I2S2SRC)
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get I2Sx clock source
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR2        I2S2SRC       LL_RCC_GetI2SClockSource\n
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        I2S3SRC       LL_RCC_GetI2SClockSource
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  I2Sx This parameter can be one of the following values:
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_SYSCLK
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S2_CLKSOURCE_PLLI2S_VCO
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_SYSCLK
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_I2S3_CLKSOURCE_PLLI2S_VCO
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetI2SClockSource(uint32_t I2Sx)
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR2, I2Sx) >> 16U | I2Sx);
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* RCC_CFGR2_I2S2SRC */
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #if defined(USB_OTG_FS) || defined(USB)
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get USBx clock source
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         OTGFSPRE      LL_RCC_GetUSBClockSource\n
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR         USBPRE        LL_RCC_GetUSBClockSource
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  USBx This parameter can be one of the following values:
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL (*)
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_1_5 (*)
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_2 (*)
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USB_CLKSOURCE_PLL_DIV_3 (*)
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetUSBClockSource(uint32_t USBx)
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, USBx));
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** #endif /* USB_OTG_FS || USB */
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get ADCx clock source
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         ADCPRE        LL_RCC_GetADCClockSource
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  ADCx This parameter can be one of the following values:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 313


1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSOURCE
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_2
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_4
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_6
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_ADC_CLKSRC_PCLK2_DIV_8
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetADCClockSource(uint32_t ADCx)
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, ADCx));
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_RTC RTC
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Set RTC Clock Source
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note Once the RTC clock source has been selected, it cannot be changed any more unless
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *       the Backup domain is reset. The BDRST bit can be used to reset them.
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_SetRTCClockSource
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV128
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTCClockSource(uint32_t Source)
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->BDCR, RCC_BDCR_RTCSEL, Source);
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Get RTC Clock Source
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCSEL        LL_RCC_GetRTCClockSource
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_NONE
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSE
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_LSI
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_CLKSOURCE_HSE_DIV128
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTCClockSource(void)
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->BDCR, RCC_BDCR_RTCSEL));
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable RTC
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_EnableRTC
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_EnableRTC(void)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 314


1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable RTC
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_DisableRTC
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_DisableRTC(void)
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_RTCEN);
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if RTC has been enabled or not
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         RTCEN         LL_RCC_IsEnabledRTC
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_IsEnabledRTC(void)
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->BDCR, RCC_BDCR_RTCEN) == (RCC_BDCR_RTCEN));
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Force the Backup domain reset
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ForceBackupDomainReset
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ForceBackupDomainReset(void)
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->BDCR, RCC_BDCR_BDRST);
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Release the Backup domain reset
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll BDCR         BDRST         LL_RCC_ReleaseBackupDomainReset
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ReleaseBackupDomainReset(void)
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_BDRST);
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @}
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_PLL PLL
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @{
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Enable PLL
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Enable
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 315


1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Enable(void)
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_PLLON);
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Disable PLL
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @note Cannot be disabled if the PLL clock is used as the system clock
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLON         LL_RCC_PLL_Disable
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_Disable(void)
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Check if PLL Ready
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CR           PLLRDY        LL_RCC_PLL_IsReady
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_PLL_IsReady(void)
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == (RCC_CR_PLLRDY));
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** 
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** /**
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @brief  Configure PLL used for SYSCLK Domain
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @rmtoll CFGR         PLLSRC        LL_RCC_PLL_ConfigDomain_SYS\n
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR         PLLXTPRE      LL_RCC_PLL_ConfigDomain_SYS\n
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR         PLLMULL       LL_RCC_PLL_ConfigDomain_SYS\n
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        PREDIV1       LL_RCC_PLL_ConfigDomain_SYS\n
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         CFGR2        PREDIV1SRC    LL_RCC_PLL_ConfigDomain_SYS
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSI_DIV_2
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_1
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_2 (*)
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_3 (*)
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_4 (*)
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_5 (*)
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_6 (*)
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_7 (*)
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_8 (*)
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_9 (*)
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_10 (*)
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_11 (*)
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_12 (*)
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_13 (*)
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_14 (*)
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_15 (*)
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_HSE_DIV_16 (*)
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_1 (*)
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_2 (*)
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_3 (*)
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_4 (*)
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_5 (*)
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_6 (*)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 316


1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_7 (*)
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_8 (*)
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_9 (*)
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_10 (*)
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_11 (*)
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_12 (*)
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_13 (*)
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_14 (*)
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_15 (*)
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLLSOURCE_PLL2_DIV_16 (*)
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @param  PLLMul This parameter can be one of the following values:
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_2 (*)
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3 (*)
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_5
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_7
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_9
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6_5 (*)
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_10 (*)
1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_11 (*)
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12 (*)
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_13 (*)
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_14 (*)
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_15 (*)
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16 (*)
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   *         (*) value not defined in all devices
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   * @retval None
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   */
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_PLL_ConfigDomain_SYS(uint32_t Source, uint32_t PLLMul)
 3599              		.loc 9 1493 22 view .LVU1006
 3600              	.LBB274:
1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL,
 3601              		.loc 9 1495 3 view .LVU1007
 3602 0028 1C4A     		ldr	r2, .L227+4
 3603 002a 5368     		ldr	r3, [r2, #4]
 3604 002c 23F47C13 		bic	r3, r3, #4128768
 3605 0030 43F4E813 		orr	r3, r3, #1900544
 3606 0034 5360     		str	r3, [r2, #4]
 3607              	.LVL281:
 3608              		.loc 9 1495 3 is_stmt 0 view .LVU1008
 3609              	.LBE274:
 3610              	.LBE273:
 740:Src/main.c    **** 
 3611              		.loc 1 740 3 is_stmt 1 view .LVU1009
 3612              	.LBB275:
 3613              	.LBI275:
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 3614              		.loc 9 1403 22 view .LVU1010
 3615              	.LBB276:
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3616              		.loc 9 1405 3 view .LVU1011
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 317


 3617 0036 1368     		ldr	r3, [r2]
 3618 0038 43F08073 		orr	r3, r3, #16777216
 3619 003c 1360     		str	r3, [r2]
 3620              	.L224:
 3621              	.LBE276:
 3622              	.LBE275:
 745:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 3623              		.loc 1 745 3 discriminator 1 view .LVU1012
 3624              	.LBB277:
 3625              	.LBI277:
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 3626              		.loc 9 1424 26 discriminator 1 view .LVU1013
 3627              	.LBB278:
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3628              		.loc 9 1426 3 discriminator 1 view .LVU1014
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3629              		.loc 9 1426 11 is_stmt 0 discriminator 1 view .LVU1015
 3630 003e 174B     		ldr	r3, .L227+4
 3631 0040 1B68     		ldr	r3, [r3]
 3632              	.LBE278:
 3633              	.LBE277:
 743:Src/main.c    ****   {
 3634              		.loc 1 743 9 discriminator 1 view .LVU1016
 3635 0042 13F0007F 		tst	r3, #33554432
 3636 0046 FAD0     		beq	.L224
 746:Src/main.c    ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_2);
 3637              		.loc 1 746 3 is_stmt 1 view .LVU1017
 3638              	.LVL282:
 3639              	.LBB279:
 3640              	.LBI279:
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 3641              		.loc 9 1063 22 view .LVU1018
 3642              	.LBB280:
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3643              		.loc 9 1065 3 view .LVU1019
 3644 0048 144B     		ldr	r3, .L227+4
 3645 004a 5A68     		ldr	r2, [r3, #4]
 3646 004c 22F0F002 		bic	r2, r2, #240
 3647 0050 5A60     		str	r2, [r3, #4]
 3648              	.LVL283:
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3649              		.loc 9 1065 3 is_stmt 0 view .LVU1020
 3650              	.LBE280:
 3651              	.LBE279:
 747:Src/main.c    ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 3652              		.loc 1 747 3 is_stmt 1 view .LVU1021
 3653              	.LBB281:
 3654              	.LBI281:
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 3655              		.loc 9 1079 22 view .LVU1022
 3656              	.LBB282:
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3657              		.loc 9 1081 3 view .LVU1023
 3658 0052 5A68     		ldr	r2, [r3, #4]
 3659 0054 22F4E062 		bic	r2, r2, #1792
 3660 0058 42F48062 		orr	r2, r2, #1024
 3661 005c 5A60     		str	r2, [r3, #4]
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 318


 3662              	.LVL284:
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3663              		.loc 9 1081 3 is_stmt 0 view .LVU1024
 3664              	.LBE282:
 3665              	.LBE281:
 748:Src/main.c    ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
 3666              		.loc 1 748 3 is_stmt 1 view .LVU1025
 3667              	.LBB283:
 3668              	.LBI283:
1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 3669              		.loc 9 1095 22 view .LVU1026
 3670              	.LBB284:
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3671              		.loc 9 1097 3 view .LVU1027
 3672 005e 5A68     		ldr	r2, [r3, #4]
 3673 0060 22F46052 		bic	r2, r2, #14336
 3674 0064 5A60     		str	r2, [r3, #4]
 3675              	.LVL285:
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3676              		.loc 9 1097 3 is_stmt 0 view .LVU1028
 3677              	.LBE284:
 3678              	.LBE283:
 749:Src/main.c    **** 
 3679              		.loc 1 749 3 is_stmt 1 view .LVU1029
 3680              	.LBB285:
 3681              	.LBI285:
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 3682              		.loc 9 1030 22 view .LVU1030
 3683              	.LBB286:
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3684              		.loc 9 1032 3 view .LVU1031
 3685 0066 5A68     		ldr	r2, [r3, #4]
 3686 0068 22F00302 		bic	r2, r2, #3
 3687 006c 42F00202 		orr	r2, r2, #2
 3688 0070 5A60     		str	r2, [r3, #4]
 3689              	.L225:
 3690              	.LBE286:
 3691              	.LBE285:
 754:Src/main.c    ****   LL_Init1msTick(72000000);
 3692              		.loc 1 754 3 discriminator 1 view .LVU1032
 3693              	.LBB287:
 3694              	.LBI287:
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** {
 3695              		.loc 9 1043 26 discriminator 1 view .LVU1033
 3696              	.LBB288:
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3697              		.loc 9 1045 3 discriminator 1 view .LVU1034
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3698              		.loc 9 1045 21 is_stmt 0 discriminator 1 view .LVU1035
 3699 0072 0A4B     		ldr	r3, .L227+4
 3700 0074 5B68     		ldr	r3, [r3, #4]
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_rcc.h **** }
 3701              		.loc 9 1045 10 discriminator 1 view .LVU1036
 3702 0076 03F00C03 		and	r3, r3, #12
 3703              	.LBE288:
 3704              	.LBE287:
 752:Src/main.c    ****   {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 319


 3705              		.loc 1 752 9 discriminator 1 view .LVU1037
 3706 007a 082B     		cmp	r3, #8
 3707 007c F9D1     		bne	.L225
 755:Src/main.c    ****   LL_SYSTICK_SetClkSource(LL_SYSTICK_CLKSOURCE_HCLK);
 3708              		.loc 1 755 3 is_stmt 1 view .LVU1038
 3709 007e 084C     		ldr	r4, .L227+8
 3710 0080 2046     		mov	r0, r4
 3711 0082 FFF7FEFF 		bl	LL_Init1msTick
 3712              	.LVL286:
 756:Src/main.c    ****   LL_SetSystemCoreClock(72000000);
 3713              		.loc 1 756 3 view .LVU1039
 3714              	.LBB289:
 3715              	.LBI289:
 3716              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h"
   1:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @file    stm32f1xx_ll_cortex.h
   4:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @brief   Header file of CORTEX LL module.
   6:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   @verbatim
   7:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   ==============================================================================
   8:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****                      ##### How to use this driver #####
   9:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****     [..]
  11:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****     The LL CORTEX driver contains a set of generic APIs that can be
  12:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****     used by user:
  13:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****       (+) SYSTICK configuration used by @ref LL_mDelay and @ref LL_Init1msTick
  14:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****           functions
  15:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****       (+) Low power mode configuration (SCB register of Cortex-MCU)
  16:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****       (+) MPU API to configure and enable regions
  17:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****           (MPU services provided only on some devices)
  18:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****       (+) API to access to MCU info (CPUID register)
  19:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****       (+) API to enable fault handler (SHCSR accesses)
  20:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  21:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   @endverbatim
  22:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   ******************************************************************************
  23:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @attention
  24:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *
  25:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  26:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *
  27:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * Redistribution and use in source and binary forms, with or without modification,
  28:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * are permitted provided that the following conditions are met:
  29:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  30:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer.
  31:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  32:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer in the documentation
  33:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *      and/or other materials provided with the distribution.
  34:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  35:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *      may be used to endorse or promote products derived from this software
  36:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *      without specific prior written permission.
  37:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *
  38:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  39:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  40:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  41:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  42:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  43:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 320


  44:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  45:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  46:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  47:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  48:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *
  49:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   ******************************************************************************
  50:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
  51:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  52:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  53:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #ifndef __STM32F1xx_LL_CORTEX_H
  54:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define __STM32F1xx_LL_CORTEX_H
  55:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  56:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #ifdef __cplusplus
  57:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** extern "C" {
  58:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #endif
  59:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  60:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Includes ------------------------------------------------------------------*/
  61:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #include "stm32f1xx.h"
  62:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  63:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @addtogroup STM32F1xx_LL_Driver
  64:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
  65:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
  66:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  67:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL CORTEX
  68:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
  69:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
  70:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  71:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Private types -------------------------------------------------------------*/
  72:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Private variables ---------------------------------------------------------*/
  73:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  74:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Private constants ---------------------------------------------------------*/
  75:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  76:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Private macros ------------------------------------------------------------*/
  77:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  78:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Exported types ------------------------------------------------------------*/
  79:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Exported constants --------------------------------------------------------*/
  80:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Constants CORTEX Exported Constants
  81:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
  82:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
  83:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  84:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CLKSOURCE_HCLK SYSTICK Clock Source
  85:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
  86:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
  87:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK_DIV8     0x00000000U                 /*!< AHB clock divided by 8 
  88:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK          SysTick_CTRL_CLKSOURCE_Msk  /*!< AHB clock selected as S
  89:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
  90:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
  91:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
  92:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
  93:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_FAULT Handler Fault type
  94:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
  95:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
  96:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_HANDLER_FAULT_USG               SCB_SHCSR_USGFAULTENA_Msk              /*!< Usage fault 
  97:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_HANDLER_FAULT_BUS               SCB_SHCSR_BUSFAULTENA_Msk              /*!< Bus fault */
  98:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_HANDLER_FAULT_MEM               SCB_SHCSR_MEMFAULTENA_Msk              /*!< Memory manag
  99:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 321


 101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #if __MPU_PRESENT
 104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CTRL_HFNMI_PRIVDEF MPU Control
 106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF_NONE     0x00000000U                                       /*!< D
 109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_CTRL_HARDFAULT_NMI          MPU_CTRL_HFNMIENA_Msk                             /*!< E
 110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_CTRL_PRIVILEGED_DEFAULT     MPU_CTRL_PRIVDEFENA_Msk                           /*!< E
 111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF          (MPU_CTRL_HFNMIENA_Msk | MPU_CTRL_PRIVDEFENA_Msk) /*!< E
 112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION MPU Region Number
 117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER0              0x00U /*!< REGION Number 0 */
 120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER1              0x01U /*!< REGION Number 1 */
 121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER2              0x02U /*!< REGION Number 2 */
 122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER3              0x03U /*!< REGION Number 3 */
 123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER4              0x04U /*!< REGION Number 4 */
 124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER5              0x05U /*!< REGION Number 5 */
 125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER6              0x06U /*!< REGION Number 6 */
 126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER7              0x07U /*!< REGION Number 7 */
 127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_SIZE MPU Region Size
 132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32B             (0x04U << MPU_RASR_SIZE_Pos) /*!< 32B Size of the MPU pr
 135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64B             (0x05U << MPU_RASR_SIZE_Pos) /*!< 64B Size of the MPU pr
 136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128B            (0x06U << MPU_RASR_SIZE_Pos) /*!< 128B Size of the MPU p
 137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256B            (0x07U << MPU_RASR_SIZE_Pos) /*!< 256B Size of the MPU p
 138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512B            (0x08U << MPU_RASR_SIZE_Pos) /*!< 512B Size of the MPU p
 139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1KB             (0x09U << MPU_RASR_SIZE_Pos) /*!< 1KB Size of the MPU pr
 140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2KB             (0x0AU << MPU_RASR_SIZE_Pos) /*!< 2KB Size of the MPU pr
 141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4KB             (0x0BU << MPU_RASR_SIZE_Pos) /*!< 4KB Size of the MPU pr
 142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8KB             (0x0CU << MPU_RASR_SIZE_Pos) /*!< 8KB Size of the MPU pr
 143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16KB            (0x0DU << MPU_RASR_SIZE_Pos) /*!< 16KB Size of the MPU p
 144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32KB            (0x0EU << MPU_RASR_SIZE_Pos) /*!< 32KB Size of the MPU p
 145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64KB            (0x0FU << MPU_RASR_SIZE_Pos) /*!< 64KB Size of the MPU p
 146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128KB           (0x10U << MPU_RASR_SIZE_Pos) /*!< 128KB Size of the MPU 
 147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256KB           (0x11U << MPU_RASR_SIZE_Pos) /*!< 256KB Size of the MPU 
 148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512KB           (0x12U << MPU_RASR_SIZE_Pos) /*!< 512KB Size of the MPU 
 149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1MB             (0x13U << MPU_RASR_SIZE_Pos) /*!< 1MB Size of the MPU pr
 150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2MB             (0x14U << MPU_RASR_SIZE_Pos) /*!< 2MB Size of the MPU pr
 151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4MB             (0x15U << MPU_RASR_SIZE_Pos) /*!< 4MB Size of the MPU pr
 152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8MB             (0x16U << MPU_RASR_SIZE_Pos) /*!< 8MB Size of the MPU pr
 153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16MB            (0x17U << MPU_RASR_SIZE_Pos) /*!< 16MB Size of the MPU p
 154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32MB            (0x18U << MPU_RASR_SIZE_Pos) /*!< 32MB Size of the MPU p
 155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64MB            (0x19U << MPU_RASR_SIZE_Pos) /*!< 64MB Size of the MPU p
 156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128MB           (0x1AU << MPU_RASR_SIZE_Pos) /*!< 128MB Size of the MPU 
 157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256MB           (0x1BU << MPU_RASR_SIZE_Pos) /*!< 256MB Size of the MPU 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 322


 158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512MB           (0x1CU << MPU_RASR_SIZE_Pos) /*!< 512MB Size of the MPU 
 159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1GB             (0x1DU << MPU_RASR_SIZE_Pos) /*!< 1GB Size of the MPU pr
 160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2GB             (0x1EU << MPU_RASR_SIZE_Pos) /*!< 2GB Size of the MPU pr
 161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4GB             (0x1FU << MPU_RASR_SIZE_Pos) /*!< 4GB Size of the MPU pr
 162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_PRIVILEDGES MPU Region Privileges
 167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_NO_ACCESS            (0x00U << MPU_RASR_AP_Pos) /*!< No access*/
 170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW              (0x01U << MPU_RASR_AP_Pos) /*!< RW privileged (privilege
 171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW_URO          (0x02U << MPU_RASR_AP_Pos) /*!< RW privileged - RO user 
 172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_FULL_ACCESS          (0x03U << MPU_RASR_AP_Pos) /*!< RW privileged & user (Fu
 173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO              (0x05U << MPU_RASR_AP_Pos) /*!< RO privileged (privilege
 174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO_URO          (0x06U << MPU_RASR_AP_Pos) /*!< RO privileged & user (re
 175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_TEX MPU TEX Level
 180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL0                  (0x00U << MPU_RASR_TEX_Pos) /*!< b000 for TEX bits */
 183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL1                  (0x01U << MPU_RASR_TEX_Pos) /*!< b001 for TEX bits */
 184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL2                  (0x02U << MPU_RASR_TEX_Pos) /*!< b010 for TEX bits */
 185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL4                  (0x04U << MPU_RASR_TEX_Pos) /*!< b100 for TEX bits */
 186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_INSTRUCTION_ACCESS MPU Instruction Access
 191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_ENABLE   0x00U            /*!< Instruction fetches enabled */
 194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_DISABLE  MPU_RASR_XN_Msk  /*!< Instruction fetches disabled*/
 195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_SHAREABLE_ACCESS MPU Shareable Access
 200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_ACCESS_SHAREABLE            MPU_RASR_S_Msk   /*!< Shareable memory attribute */
 203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_SHAREABLE        0x00U            /*!< Not Shareable memory attribute */
 204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CACHEABLE_ACCESS MPU Cacheable Access
 209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_ACCESS_CACHEABLE            MPU_RASR_C_Msk   /*!< Cacheable memory attribute */
 212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_CACHEABLE        0x00U            /*!< Not Cacheable memory attribute */
 213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 323


 215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_BUFFERABLE_ACCESS MPU Bufferable Access
 218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_ACCESS_BUFFERABLE           MPU_RASR_B_Msk   /*!< Bufferable memory attribute */
 221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_BUFFERABLE       0x00U            /*!< Not Bufferable memory attribute */
 222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** #endif /* __MPU_PRESENT */
 226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @}
 228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Exported macro ------------------------------------------------------------*/
 231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /* Exported functions --------------------------------------------------------*/
 233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Functions CORTEX Exported Functions
 234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EF_SYSTICK SYSTICK
 238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @{
 239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @brief  This function checks if the Systick counter flag is active or not.
 243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @note   It can be used in timeout function on application side.
 244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @rmtoll STK_CTRL     COUNTFLAG     LL_SYSTICK_IsActiveCounterFlag
 245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @retval State of bit (1 or 0).
 246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag(void)
 248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** {
 249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   return ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk));
 250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** }
 251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** 
 252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** /**
 253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @brief  Configures the SysTick clock source
 254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @rmtoll STK_CTRL     CLKSOURCE     LL_SYSTICK_SetClkSource
 255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @param  Source This parameter can be one of the following values:
 256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK_DIV8
 257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK
 258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   * @retval None
 259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   */
 260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** __STATIC_INLINE void LL_SYSTICK_SetClkSource(uint32_t Source)
 3717              		.loc 10 260 22 view .LVU1040
 3718              	.LBB290:
 261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h **** {
 262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   if (Source == LL_SYSTICK_CLKSOURCE_HCLK)
 3719              		.loc 10 262 3 view .LVU1041
 263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****   {
 264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_cortex.h ****     SET_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
 3720              		.loc 10 264 5 view .LVU1042
 3721 0086 074A     		ldr	r2, .L227+12
 3722 0088 1368     		ldr	r3, [r2]
 3723 008a 43F00403 		orr	r3, r3, #4
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 324


 3724 008e 1360     		str	r3, [r2]
 3725              	.LVL287:
 3726              		.loc 10 264 5 is_stmt 0 view .LVU1043
 3727              	.LBE290:
 3728              	.LBE289:
 757:Src/main.c    **** }
 3729              		.loc 1 757 3 is_stmt 1 view .LVU1044
 3730 0090 2046     		mov	r0, r4
 3731 0092 FFF7FEFF 		bl	LL_SetSystemCoreClock
 3732              	.LVL288:
 758:Src/main.c    **** 
 3733              		.loc 1 758 1 is_stmt 0 view .LVU1045
 3734 0096 10BD     		pop	{r4, pc}
 3735              	.L228:
 3736              		.align	2
 3737              	.L227:
 3738 0098 00200240 		.word	1073881088
 3739 009c 00100240 		.word	1073876992
 3740 00a0 00A24A04 		.word	72000000
 3741 00a4 10E000E0 		.word	-536813552
 3742              		.cfi_endproc
 3743              	.LFE721:
 3745              		.section	.text.main,"ax",%progbits
 3746              		.align	1
 3747              		.global	main
 3748              		.syntax unified
 3749              		.thumb
 3750              		.thumb_func
 3751              		.fpu softvfp
 3753              	main:
 3754              	.LFB720:
 632:Src/main.c    ****   /* USER CODE BEGIN 1 */
 3755              		.loc 1 632 1 is_stmt 1 view -0
 3756              		.cfi_startproc
 3757              		@ Volatile: function does not return.
 3758              		@ args = 0, pretend = 0, frame = 16
 3759              		@ frame_needed = 0, uses_anonymous_args = 0
 3760 0000 00B5     		push	{lr}
 3761              	.LCFI45:
 3762              		.cfi_def_cfa_offset 4
 3763              		.cfi_offset 14, -4
 3764 0002 89B0     		sub	sp, sp, #36
 3765              	.LCFI46:
 3766              		.cfi_def_cfa_offset 40
 641:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
 3767              		.loc 1 641 3 view .LVU1047
 3768              	.LVL289:
 3769              	.LBB291:
 3770              	.LBI291:
 779:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 3771              		.loc 2 779 22 view .LVU1048
 3772              	.LBB292:
 781:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 3773              		.loc 2 781 3 view .LVU1049
 782:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 3774              		.loc 2 782 3 view .LVU1050
 3775 0004 2A4B     		ldr	r3, .L232
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 325


 3776 0006 9A69     		ldr	r2, [r3, #24]
 3777 0008 42F00102 		orr	r2, r2, #1
 3778 000c 9A61     		str	r2, [r3, #24]
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 3779              		.loc 2 784 3 view .LVU1051
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 3780              		.loc 2 784 12 is_stmt 0 view .LVU1052
 3781 000e 9A69     		ldr	r2, [r3, #24]
 3782 0010 02F00102 		and	r2, r2, #1
 784:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 3783              		.loc 2 784 10 view .LVU1053
 3784 0014 0592     		str	r2, [sp, #20]
 3785              		.loc 2 785 3 is_stmt 1 view .LVU1054
 3786 0016 059A     		ldr	r2, [sp, #20]
 3787              	.LVL290:
 3788              		.loc 2 785 3 is_stmt 0 view .LVU1055
 3789              	.LBE292:
 3790              	.LBE291:
 642:Src/main.c    **** 
 3791              		.loc 1 642 3 is_stmt 1 view .LVU1056
 3792              	.LBB293:
 3793              	.LBI293:
 463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** {
 3794              		.loc 2 463 22 view .LVU1057
 3795              	.LBB294:
 465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 3796              		.loc 2 465 3 view .LVU1058
 466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 3797              		.loc 2 466 3 view .LVU1059
 3798 0018 DA69     		ldr	r2, [r3, #28]
 3799 001a 42F08052 		orr	r2, r2, #268435456
 3800 001e DA61     		str	r2, [r3, #28]
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 3801              		.loc 2 468 3 view .LVU1060
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 3802              		.loc 2 468 12 is_stmt 0 view .LVU1061
 3803 0020 DB69     		ldr	r3, [r3, #28]
 3804 0022 03F08053 		and	r3, r3, #268435456
 468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h ****   (void)tmpreg;
 3805              		.loc 2 468 10 view .LVU1062
 3806 0026 0493     		str	r3, [sp, #16]
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 3807              		.loc 2 469 3 is_stmt 1 view .LVU1063
 3808 0028 049B     		ldr	r3, [sp, #16]
 3809              	.LVL291:
 469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_bus.h **** }
 3810              		.loc 2 469 3 is_stmt 0 view .LVU1064
 3811              	.LBE294:
 3812              	.LBE293:
 644:Src/main.c    **** 
 3813              		.loc 1 644 3 is_stmt 1 view .LVU1065
 3814              	.LBB295:
 3815              	.LBI295:
1422:Drivers/CMSIS/Include/core_cm3.h **** {
 3816              		.loc 3 1422 22 view .LVU1066
 3817              	.LBB296:
1424:Drivers/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 326


 3818              		.loc 3 1424 3 view .LVU1067
1425:Drivers/CMSIS/Include/core_cm3.h **** 
 3819              		.loc 3 1425 3 view .LVU1068
1427:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
 3820              		.loc 3 1427 3 view .LVU1069
1427:Drivers/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
 3821              		.loc 3 1427 14 is_stmt 0 view .LVU1070
 3822 002a 2249     		ldr	r1, .L232+4
 3823 002c CA68     		ldr	r2, [r1, #12]
 3824              	.LVL292:
1428:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
 3825              		.loc 3 1428 3 is_stmt 1 view .LVU1071
1428:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
 3826              		.loc 3 1428 13 is_stmt 0 view .LVU1072
 3827 002e 22F4E062 		bic	r2, r2, #1792
 3828              	.LVL293:
1428:Drivers/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
 3829              		.loc 3 1428 13 view .LVU1073
 3830 0032 1204     		lsls	r2, r2, #16
 3831 0034 120C     		lsrs	r2, r2, #16
 3832              	.LVL294:
1429:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 3833              		.loc 3 1429 3 is_stmt 1 view .LVU1074
1429:Drivers/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 3834              		.loc 3 1429 14 is_stmt 0 view .LVU1075
 3835 0036 204B     		ldr	r3, .L232+8
 3836 0038 1343     		orrs	r3, r3, r2
 3837              	.LVL295:
1432:Drivers/CMSIS/Include/core_cm3.h **** }
 3838              		.loc 3 1432 3 is_stmt 1 view .LVU1076
1432:Drivers/CMSIS/Include/core_cm3.h **** }
 3839              		.loc 3 1432 14 is_stmt 0 view .LVU1077
 3840 003a CB60     		str	r3, [r1, #12]
 3841              	.LVL296:
1432:Drivers/CMSIS/Include/core_cm3.h **** }
 3842              		.loc 3 1432 14 view .LVU1078
 3843              	.LBE296:
 3844              	.LBE295:
 650:Src/main.c    **** 
 3845              		.loc 1 650 3 is_stmt 1 view .LVU1079
 3846              	.LBB297:
 3847              	.LBI297:
 852:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 853:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 854:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 855:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Toggle data value for several pin of dedicated port.
 856:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_TogglePin
 857:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 858:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 859:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 860:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 861:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 862:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 863:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 864:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 865:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 866:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 327


 867:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 868:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 869:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 870:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 871:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 872:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 873:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 874:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 875:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 876:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 877:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 878:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 879:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 880:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, READ_REG(GPIOx->ODR) ^ ((PinMask >> GPIO_PIN_MASK_POS) & 0x0000FFFFU));
 881:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 882:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 883:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 884:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @}
 885:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 886:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 887:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /** @defgroup GPIO_AF_REMAPPING Alternate Function Remapping
 888:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief This section propose definition to remap the alternate function to some other port/pins.
 889:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @{
 890:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 891:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 892:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 893:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Enable the remapping of SPI1 alternate function NSS, SCK, MISO and MOSI.
 894:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          SPI1_REMAP           LL_GPIO_AF_EnableRemap_SPI1
 895:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note   ENABLE: Remap (NSS/PA15, SCK/PB3, MISO/PB4, MOSI/PB5)
 896:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 897:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 898:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_SPI1(void)
 899:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 900:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_SPI1_REMAP);
 901:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 902:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 903:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 904:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of SPI1 alternate function NSS, SCK, MISO and MOSI.
 905:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          SPI1_REMAP           LL_GPIO_AF_DisableRemap_SPI1
 906:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap (NSS/PA4,  SCK/PA5, MISO/PA6, MOSI/PA7)
 907:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 908:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 909:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_SPI1(void)
 910:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 911:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_SPI1_REMAP);
 912:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 913:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 914:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 915:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if SPI1 has been remaped or not
 916:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         SPI1_REMAP         LL_GPIO_AF_IsEnabledRemap_SPI1
 917:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 918:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 919:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_SPI1(void)
 920:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 921:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_SPI1_REMAP) == (AFIO_MAPR_SPI1_REMAP));
 922:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 923:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 328


 924:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 925:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of I2C1 alternate function SCL and SDA.
 926:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          I2C1_REMAP           LL_GPIO_AF_EnableRemap_I2C1
 927:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Remap     (SCL/PB8, SDA/PB9)
 928:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 929:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_I2C1(void)
 931:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_I2C1_REMAP);
 933:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 934:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 935:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 936:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of I2C1 alternate function SCL and SDA.
 937:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          I2C1_REMAP           LL_GPIO_AF_DisableRemap_I2C1
 938:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap (SCL/PB6, SDA/PB7)
 939:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 940:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 941:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_I2C1(void)
 942:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 943:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_I2C1_REMAP);
 944:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 945:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 946:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 947:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if I2C1 has been remaped or not
 948:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         I2C1_REMAP         LL_GPIO_AF_IsEnabledRemap_I2C1
 949:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 950:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 951:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_I2C1(void)
 952:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 953:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_I2C1_REMAP) == (AFIO_MAPR_I2C1_REMAP));
 954:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 955:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 956:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 957:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of USART1 alternate function TX and RX.
 958:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          USART1_REMAP           LL_GPIO_AF_EnableRemap_USART1
 959:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Remap     (TX/PB6, RX/PB7)
 960:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 961:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 962:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_USART1(void)
 963:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 964:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_USART1_REMAP);
 965:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 966:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 967:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 968:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of USART1 alternate function TX and RX.
 969:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          USART1_REMAP           LL_GPIO_AF_DisableRemap_USART1
 970:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap (TX/PA9, RX/PA10)
 971:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 972:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 973:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_USART1(void)
 974:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 975:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_USART1_REMAP);
 976:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 977:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 978:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 979:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if USART1 has been remaped or not
 980:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         USART1_REMAP         LL_GPIO_AF_IsEnabledRemap_USART1
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 329


 981:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 982:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 983:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_USART1(void)
 984:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 985:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_USART1_REMAP) == (AFIO_MAPR_USART1_REMAP));
 986:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 987:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 988:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
 989:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of USART2 alternate function CTS, RTS, CK, TX and RX.
 990:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          USART2_REMAP           LL_GPIO_AF_EnableRemap_USART2
 991:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Remap     (CTS/PD3, RTS/PD4, TX/PD5, RX/PD6, CK/PD7)
 992:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
 993:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
 994:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_USART2(void)
 995:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
 996:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_USART2_REMAP);
 997:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
 998:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
 999:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1000:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of USART2 alternate function CTS, RTS, CK, TX and RX.
1001:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          USART2_REMAP           LL_GPIO_AF_DisableRemap_USART2
1002:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap (CTS/PA0, RTS/PA1, TX/PA2, RX/PA3, CK/PA4)
1003:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1004:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1005:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_USART2(void)
1006:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1007:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_USART2_REMAP);
1008:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1009:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1010:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1011:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if USART2 has been remaped or not
1012:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         USART2_REMAP         LL_GPIO_AF_IsEnabledRemap_USART2
1013:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1014:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1015:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_USART2(void)
1016:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1017:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_USART2_REMAP) == (AFIO_MAPR_USART2_REMAP));
1018:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1019:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1020:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined (AFIO_MAPR_USART3_REMAP)
1021:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1022:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of USART3 alternate function CTS, RTS, CK, TX and RX.
1023:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          USART3_REMAP           LL_GPIO_AF_EnableRemap_USART3
1024:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Full remap     (TX/PD8,  RX/PD9,  CK/PD10, CTS/PD11, RTS/PD12)
1025:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1026:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1027:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_USART3(void)
1028:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1029:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_USART3_REMAP);
1030:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_USART3_REMAP_FULLREMAP);
1031:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1032:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1033:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1034:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of USART3 alternate function CTS, RTS, CK, TX and RX.
1035:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          USART3_REMAP           LL_GPIO_AF_RemapPartial_USART3
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  PARTIAL: Partial remap (TX/PC10, RX/PC11, CK/PC12, CTS/PB13, RTS/PB14)
1037:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 330


1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1039:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_RemapPartial_USART3(void)
1040:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1041:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_USART3_REMAP);
1042:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_USART3_REMAP_PARTIALREMAP);
1043:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1044:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1045:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1046:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of USART3 alternate function CTS, RTS, CK, TX and RX.
1047:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          USART3_REMAP           LL_GPIO_AF_DisableRemap_USART3
1048:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap      (TX/PB10, RX/PB11, CK/PB12, CTS/PB13, RTS/PB14)
1049:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1050:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1051:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_USART3(void)
1052:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1053:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_USART3_REMAP);
1054:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_USART3_REMAP_NOREMAP);
1055:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1056:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1057:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1058:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1059:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM1 alternate function channels 1 to 4, 1N to 3N, external trig
1060:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM1_REMAP           LL_GPIO_AF_EnableRemap_TIM1
1061:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Full remap     (ETR/PE7,  CH1/PE9, CH2/PE11, CH3/PE13, CH4/PE14, BKIN/PE15, CH1N
1062:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1063:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1064:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_TIM1(void)
1065:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1066:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM1_REMAP);
1067:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM1_REMAP_FULLREMAP);
1068:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1069:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1070:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1071:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM1 alternate function channels 1 to 4, 1N to 3N, external trig
1072:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM1_REMAP           LL_GPIO_AF_RemapPartial_TIM1
1073:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  PARTIAL: Partial remap (ETR/PA12, CH1/PA8, CH2/PA9,  CH3/PA10, CH4/PA11, BKIN/PA6,  CH1N
1074:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1075:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1076:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_RemapPartial_TIM1(void)
1077:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1078:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM1_REMAP);
1079:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM1_REMAP_PARTIALREMAP);
1080:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1081:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1082:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1083:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of TIM1 alternate function channels 1 to 4, 1N to 3N, external tri
1084:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM1_REMAP           LL_GPIO_AF_DisableRemap_TIM1
1085:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap      (ETR/PA12, CH1/PA8, CH2/PA9,  CH3/PA10, CH4/PA11, BKIN/PB12, CH1N
1086:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1087:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1088:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_TIM1(void)
1089:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1090:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM1_REMAP);
1091:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM1_REMAP_NOREMAP);
1092:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1093:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1094:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 331


1095:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM2 alternate function channels 1 to 4 and external trigger (ET
1096:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM2_REMAP           LL_GPIO_AF_EnableRemap_TIM2
1097:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Full remap       (CH1/ETR/PA15, CH2/PB3, CH3/PB10, CH4/PB11)
1098:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1099:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1100:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_TIM2(void)
1101:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1102:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM2_REMAP);
1103:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM2_REMAP_FULLREMAP);
1104:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1105:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1106:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1107:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM2 alternate function channels 1 to 4 and external trigger (ET
1108:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM2_REMAP           LL_GPIO_AF_RemapPartial2_TIM2
1109:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  PARTIAL_2: Partial remap (CH1/ETR/PA0,  CH2/PA1, CH3/PB10, CH4/PB11)
1110:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1111:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1112:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_RemapPartial2_TIM2(void)
1113:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1114:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM2_REMAP);
1115:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2);
1116:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1117:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1118:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1119:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM2 alternate function channels 1 to 4 and external trigger (ET
1120:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM2_REMAP           LL_GPIO_AF_RemapPartial1_TIM2
1121:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  PARTIAL_1: Partial remap (CH1/ETR/PA15, CH2/PB3, CH3/PA2,  CH4/PA3)
1122:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1123:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1124:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_RemapPartial1_TIM2(void)
1125:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1126:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM2_REMAP);
1127:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1);
1128:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1129:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1130:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1131:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of TIM2 alternate function channels 1 to 4 and external trigger (E
1132:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM2_REMAP           LL_GPIO_AF_DisableRemap_TIM2
1133:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap        (CH1/ETR/PA0,  CH2/PA1, CH3/PA2,  CH4/PA3)
1134:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1135:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1136:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_TIM2(void)
1137:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1138:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM2_REMAP);
1139:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM2_REMAP_NOREMAP);
1140:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1141:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1142:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1143:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM3 alternate function channels 1 to 4
1144:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM3_REMAP           LL_GPIO_AF_EnableRemap_TIM3
1145:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Full remap     (CH1/PC6, CH2/PC7, CH3/PC8, CH4/PC9)
1146:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  TIM3_ETR on PE0 is not re-mapped.
1147:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1148:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1149:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_TIM3(void)
1150:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1151:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM3_REMAP);
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 332


1152:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM3_REMAP_FULLREMAP);
1153:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1154:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1155:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1156:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM3 alternate function channels 1 to 4
1157:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM3_REMAP           LL_GPIO_AF_RemapPartial_TIM3
1158:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  PARTIAL: Partial remap (CH1/PB4, CH2/PB5, CH3/PB0, CH4/PB1)
1159:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  TIM3_ETR on PE0 is not re-mapped.
1160:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1161:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1162:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_RemapPartial_TIM3(void)
1163:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1164:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM3_REMAP);
1165:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM3_REMAP_PARTIALREMAP);
1166:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1167:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1168:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1169:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of TIM3 alternate function channels 1 to 4
1170:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM3_REMAP           LL_GPIO_AF_DisableRemap_TIM3
1171:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap      (CH1/PA6, CH2/PA7, CH3/PB0, CH4/PB1)
1172:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  TIM3_ETR on PE0 is not re-mapped.
1173:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1174:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1175:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_TIM3(void)
1176:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1177:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM3_REMAP);
1178:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM3_REMAP_NOREMAP);
1179:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1180:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1181:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_TIM4_REMAP)
1182:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1183:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM4 alternate function channels 1 to 4.
1184:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM4_REMAP           LL_GPIO_AF_EnableRemap_TIM4
1185:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Full remap (TIM4_CH1/PD12, TIM4_CH2/PD13, TIM4_CH3/PD14, TIM4_CH4/PD15)
1186:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  TIM4_ETR on PE0 is not re-mapped.
1187:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1188:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1189:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_TIM4(void)
1190:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1191:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM4_REMAP);
1192:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1193:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1194:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of TIM4 alternate function channels 1 to 4.
1195:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM4_REMAP           LL_GPIO_AF_DisableRemap_TIM4
1196:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap  (TIM4_CH1/PB6,  TIM4_CH2/PB7,  TIM4_CH3/PB8,  TIM4_CH4/PB9)
1197:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  TIM4_ETR on PE0 is not re-mapped.
1198:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1199:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1200:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_TIM4(void)
1201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1202:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM4_REMAP);
1203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1204:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1205:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1206:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if TIM4 has been remaped or not
1207:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         TIM4_REMAP         LL_GPIO_AF_IsEnabledRemap_TIM4
1208:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 333


1209:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1210:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_TIM4(void)
1211:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_TIM4_REMAP) == (AFIO_MAPR_TIM4_REMAP));
1213:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1215:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1216:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_CAN_REMAP_REMAP1)
1217:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1218:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1219:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable or disable the remapping of CAN alternate function CAN_RX and CAN_TX in devices w
1220:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          CAN_REMAP           LL_GPIO_AF_RemapPartial1_CAN1
1221:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  CASE 1: CAN_RX mapped to PA11, CAN_TX mapped to PA12
1222:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1223:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1224:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_RemapPartial1_CAN1(void)
1225:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1226:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_CAN_REMAP);
1227:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_CAN_REMAP_REMAP1);
1228:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1229:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1230:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1231:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable or disable the remapping of CAN alternate function CAN_RX and CAN_TX in devices w
1232:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          CAN_REMAP           LL_GPIO_AF_RemapPartial2_CAN1
1233:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  CASE 2: CAN_RX mapped to PB8,  CAN_TX mapped to PB9 (not available on 36-pin package)
1234:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1235:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1236:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_RemapPartial2_CAN1(void)
1237:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1238:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_CAN_REMAP);
1239:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_CAN_REMAP_REMAP2);
1240:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1241:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1242:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1243:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable or disable the remapping of CAN alternate function CAN_RX and CAN_TX in devices w
1244:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          CAN_REMAP           LL_GPIO_AF_RemapPartial3_CAN1
1245:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  CASE 3: CAN_RX mapped to PD0,  CAN_TX mapped to PD1
1246:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1247:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1248:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_RemapPartial3_CAN1(void)
1249:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1250:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_CAN_REMAP);
1251:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_CAN_REMAP_REMAP3);
1252:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1253:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1254:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1255:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1256:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of PD0 and PD1. When the HSE oscillator is not used
1257:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *        (application running on internal 8 MHz RC) PD0 and PD1 can be mapped on OSC_IN and
1258:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *        OSC_OUT. This is available only on 36, 48 and 64 pins packages (PD0 and PD1 are availabl
1259:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *        on 100-pin and 144-pin packages, no need for remapping).
1260:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          PD01_REMAP           LL_GPIO_AF_EnableRemap_PD01
1261:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: PD0 remapped on OSC_IN, PD1 remapped on OSC_OUT.
1262:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1263:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1264:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_PD01(void)
1265:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 334


1266:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_PD01_REMAP);
1267:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1268:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1269:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1270:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of PD0 and PD1. When the HSE oscillator is not used
1271:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *        (application running on internal 8 MHz RC) PD0 and PD1 can be mapped on OSC_IN and
1272:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *        OSC_OUT. This is available only on 36, 48 and 64 pins packages (PD0 and PD1 are availabl
1273:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   *        on 100-pin and 144-pin packages, no need for remapping).
1274:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          PD01_REMAP           LL_GPIO_AF_DisableRemap_PD01
1275:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remapping of PD0 and PD1
1276:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1277:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1278:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_PD01(void)
1279:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1280:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_PD01_REMAP);
1281:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1282:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1283:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1284:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if PD01 has been remaped or not
1285:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         PD01_REMAP         LL_GPIO_AF_IsEnabledRemap_PD01
1286:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1287:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1288:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_PD01(void)
1289:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1290:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_PD01_REMAP) == (AFIO_MAPR_PD01_REMAP));
1291:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1292:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1293:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_TIM5CH4_IREMAP)
1294:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1295:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of TIM5CH4.
1296:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM5CH4_IREMAP           LL_GPIO_AF_EnableRemap_TIM5CH4
1297:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: LSI internal clock is connected to TIM5_CH4 input for calibration purpose.
1298:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  This function is available only in high density value line devices.
1299:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1300:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1301:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_TIM5CH4(void)
1302:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1303:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_TIM5CH4_IREMAP);
1304:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1305:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1306:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1307:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of TIM5CH4.
1308:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          TIM5CH4_IREMAP           LL_GPIO_AF_DisableRemap_TIM5CH4
1309:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: TIM5_CH4 is connected to PA3
1310:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  This function is available only in high density value line devices.
1311:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1312:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1313:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_TIM5CH4(void)
1314:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1315:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_TIM5CH4_IREMAP);
1316:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1317:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1318:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1319:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if TIM5CH4 has been remaped or not
1320:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         TIM5CH4_IREMAP         LL_GPIO_AF_IsEnabledRemap_TIM5CH4
1321:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1322:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 335


1323:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_TIM5CH4(void)
1324:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1325:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_TIM5CH4_IREMAP) == (AFIO_MAPR_TIM5CH4_IREMAP));
1326:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1327:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1328:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1329:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_ETH_REMAP)
1330:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1331:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of Ethernet MAC connections with the PHY.
1332:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ETH_REMAP           LL_GPIO_AF_EnableRemap_ETH
1333:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Remap     (RX_DV-CRS_DV/PD8, RXD0/PD9, RXD1/PD10, RXD2/PD11, RXD3/PD12)
1334:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  This bit is available only in connectivity line devices and is reserved otherwise.
1335:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1336:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1337:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_ETH(void)
1338:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1339:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_ETH_REMAP);
1340:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1341:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1342:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1343:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of Ethernet MAC connections with the PHY.
1344:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ETH_REMAP           LL_GPIO_AF_DisableRemap_ETH
1345:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap (RX_DV-CRS_DV/PA7, RXD0/PC4, RXD1/PC5,  RXD2/PB0,  RXD3/PB1)
1346:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  This bit is available only in connectivity line devices and is reserved otherwise.
1347:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1348:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1349:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_ETH(void)
1350:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1351:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_ETH_REMAP);
1352:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1353:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1354:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1355:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if ETH has been remaped or not
1356:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         ETH_REMAP         LL_GPIO_AF_IsEnabledRemap_ETH
1357:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1358:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1359:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_ETH(void)
1360:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1361:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_ETH_REMAP) == (AFIO_MAPR_ETH_REMAP));
1362:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1363:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1364:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1365:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_CAN2_REMAP)
1366:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1367:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1368:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of CAN2 alternate function CAN2_RX and CAN2_TX.
1369:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          CAN2_REMAP           LL_GPIO_AF_EnableRemap_CAN2
1370:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Remap     (CAN2_RX/PB5,  CAN2_TX/PB6)
1371:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  This bit is available only in connectivity line devices and is reserved otherwise.
1372:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1373:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1374:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_CAN2(void)
1375:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1376:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_CAN2_REMAP);
1377:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1378:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1379:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of CAN2 alternate function CAN2_RX and CAN2_TX.
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 336


1380:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          CAN2_REMAP           LL_GPIO_AF_DisableRemap_CAN2
1381:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: No remap (CAN2_RX/PB12, CAN2_TX/PB13)
1382:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  This bit is available only in connectivity line devices and is reserved otherwise.
1383:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1384:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1385:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_CAN2(void)
1386:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1387:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_CAN2_REMAP);
1388:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1389:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1390:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1391:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if CAN2 has been remaped or not
1392:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         CAN2_REMAP         LL_GPIO_AF_IsEnabledRemap_CAN2
1393:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1394:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1395:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_CAN2(void)
1396:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1397:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_CAN2_REMAP) == (AFIO_MAPR_CAN2_REMAP));
1398:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1399:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1400:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1401:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_MII_RMII_SEL)
1402:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1403:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Configures the Ethernet MAC internally for use with an external MII or RMII PHY.
1404:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          MII_RMII_SEL           LL_GPIO_AF_Select_ETH_RMII
1405:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ETH_RMII: Configure Ethernet MAC for connection with an RMII PHY
1406:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  This bit is available only in connectivity line devices and is reserved otherwise.
1407:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1408:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1409:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_Select_ETH_RMII(void)
1410:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1411:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_MII_RMII_SEL);
1412:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1413:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1414:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1415:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Configures the Ethernet MAC internally for use with an external MII or RMII PHY.
1416:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          MII_RMII_SEL           LL_GPIO_AF_Select_ETH_MII
1417:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ETH_MII: Configure Ethernet MAC for connection with an MII PHY
1418:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  This bit is available only in connectivity line devices and is reserved otherwise.
1419:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1420:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1421:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_Select_ETH_MII(void)
1422:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1423:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_MII_RMII_SEL);
1424:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1425:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1426:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1427:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_ADC1_ETRGINJ_REMAP)
1428:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1429:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of ADC1_ETRGINJ (ADC 1 External trigger injected conversion).
1430:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ADC1_ETRGINJ_REMAP           LL_GPIO_AF_EnableRemap_ADC1_ETRGINJ
1431:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: ADC1 External Event injected conversion is connected to TIM8 Channel4.
1432:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1433:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1434:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_ADC1_ETRGINJ(void)
1435:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1436:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_ADC1_ETRGINJ_REMAP);
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 337


1437:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1438:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1439:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1440:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of ADC1_ETRGINJ (ADC 1 External trigger injected conversion).
1441:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ADC1_ETRGINJ_REMAP           LL_GPIO_AF_DisableRemap_ADC1_ETRGINJ
1442:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: ADC1 External trigger injected conversion is connected to EXTI15
1443:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1444:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1445:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_ADC1_ETRGINJ(void)
1446:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1447:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_ADC1_ETRGINJ_REMAP);
1448:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1449:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1450:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1451:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if ADC1_ETRGINJ has been remaped or not
1452:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         ADC1_ETRGINJ_REMAP         LL_GPIO_AF_IsEnabledRemap_ADC1_ETRGINJ
1453:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1454:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1455:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_ADC1_ETRGINJ(void)
1456:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1457:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_ADC1_ETRGINJ_REMAP) == (AFIO_MAPR_ADC1_ETRGINJ_REMAP));
1458:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1459:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1460:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1461:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_ADC1_ETRGREG_REMAP)
1462:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1463:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of ADC1_ETRGREG (ADC 1 External trigger regular conversion).
1464:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ADC1_ETRGREG_REMAP           LL_GPIO_AF_EnableRemap_ADC1_ETRGREG
1465:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: ADC1 External Event regular conversion is connected to TIM8 TRG0.
1466:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1467:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1468:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_ADC1_ETRGREG(void)
1469:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1470:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_ADC1_ETRGREG_REMAP);
1471:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1472:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1473:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1474:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of ADC1_ETRGREG (ADC 1 External trigger regular conversion).
1475:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ADC1_ETRGREG_REMAP           LL_GPIO_AF_DisableRemap_ADC1_ETRGREG
1476:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: ADC1 External trigger regular conversion is connected to EXTI11
1477:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1478:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1479:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_ADC1_ETRGREG(void)
1480:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1481:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_ADC1_ETRGREG_REMAP);
1482:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1484:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if ADC1_ETRGREG has been remaped or not
1486:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         ADC1_ETRGREG_REMAP         LL_GPIO_AF_IsEnabledRemap_ADC1_ETRGREG
1487:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1488:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_ADC1_ETRGREG(void)
1490:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_ADC1_ETRGREG_REMAP) == (AFIO_MAPR_ADC1_ETRGREG_REMAP));
1492:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1493:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 338


1494:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1495:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined(AFIO_MAPR_ADC2_ETRGINJ_REMAP)
1496:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1497:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1498:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of ADC2_ETRGREG (ADC 2 External trigger injected conversion).
1499:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ADC2_ETRGINJ_REMAP           LL_GPIO_AF_EnableRemap_ADC2_ETRGINJ
1500:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: ADC2 External Event injected conversion is connected to TIM8 Channel4.
1501:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1502:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1503:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_ADC2_ETRGINJ(void)
1504:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1505:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_ADC2_ETRGINJ_REMAP);
1506:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1507:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1508:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1509:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of ADC2_ETRGREG (ADC 2 External trigger injected conversion).
1510:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ADC2_ETRGINJ_REMAP           LL_GPIO_AF_DisableRemap_ADC2_ETRGINJ
1511:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: ADC2 External trigger injected conversion is connected to EXTI15
1512:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1513:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1514:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_ADC2_ETRGINJ(void)
1515:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_ADC2_ETRGINJ_REMAP);
1517:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1519:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1520:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if ADC2_ETRGINJ has been remaped or not
1521:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         ADC2_ETRGINJ_REMAP         LL_GPIO_AF_IsEnabledRemap_ADC2_ETRGINJ
1522:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1523:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1524:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_ADC2_ETRGINJ(void)
1525:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1526:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_ADC2_ETRGINJ_REMAP) == (AFIO_MAPR_ADC2_ETRGINJ_REMAP));
1527:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1528:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1529:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1530:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #if defined (AFIO_MAPR_ADC2_ETRGREG_REMAP)
1531:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1532:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1533:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the remapping of ADC2_ETRGREG (ADC 2 External trigger regular conversion).
1534:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ADC2_ETRGREG_REMAP           LL_GPIO_AF_EnableRemap_ADC2_ETRGREG
1535:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: ADC2 External Event regular conversion is connected to TIM8 TRG0.
1536:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1537:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1538:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_ADC2_ETRGREG(void)
1539:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1540:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_ADC2_ETRGREG_REMAP);
1541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the remapping of ADC2_ETRGREG (ADC 2 External trigger regular conversion).
1545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          ADC2_ETRGREG_REMAP           LL_GPIO_AF_DisableRemap_ADC2_ETRGREG
1546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: ADC2 External trigger regular conversion is connected to EXTI11
1547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_ADC2_ETRGREG(void)
1550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 339


1551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR, AFIO_MAPR_ADC2_ETRGREG_REMAP);
1552:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1553:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1554:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1555:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief  Check if ADC2_ETRGREG has been remaped or not
1556:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR         ADC2_ETRGREG_REMAP         LL_GPIO_AF_IsEnabledRemap_ADC2_ETRGREG
1557:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
1558:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1559:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_AF_IsEnabledRemap_ADC2_ETRGREG(void)
1560:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1561:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   return (READ_BIT(AFIO->MAPR, AFIO_MAPR_ADC2_ETRGREG_REMAP) == (AFIO_MAPR_ADC2_ETRGREG_REMAP));
1562:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1563:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** #endif
1564:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1565:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1566:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the Serial wire JTAG configuration
1567:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          SWJ_CFG           LL_GPIO_AF_EnableRemap_SWJ
1568:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  ENABLE: Full SWJ (JTAG-DP + SW-DP): Reset State
1569:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1570:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1571:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_EnableRemap_SWJ(void)
1572:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1573:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR,AFIO_MAPR_SWJ_CFG);
1574:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_SWJ_CFG_RESET);
1575:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1576:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1577:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1578:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the Serial wire JTAG configuration
1579:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          SWJ_CFG           LL_GPIO_AF_Remap_SWJ_NONJTRST
1580:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  NONJTRST: Full SWJ (JTAG-DP + SW-DP) but without NJTRST
1581:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1582:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1583:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_Remap_SWJ_NONJTRST(void)
1584:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1585:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR,AFIO_MAPR_SWJ_CFG);
1586:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_SWJ_CFG_NOJNTRST);
1587:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1588:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1589:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1590:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Enable the Serial wire JTAG configuration
1591:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          SWJ_CFG           LL_GPIO_AF_Remap_SWJ_NOJTAG
1592:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  NOJTAG: JTAG-DP Disabled and SW-DP Enabled
1593:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1594:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1595:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_Remap_SWJ_NOJTAG(void)
1596:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR,AFIO_MAPR_SWJ_CFG);
1598:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_SWJ_CFG_JTAGDISABLE);
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** }
1600:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** 
1601:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** /**
1602:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @brief Disable the Serial wire JTAG configuration
1603:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @rmtoll MAPR          SWJ_CFG           LL_GPIO_AF_DisableRemap_SWJ
1604:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @note  DISABLE: JTAG-DP Disabled and SW-DP Disabled
1605:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   * @retval None
1606:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   */
1607:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_AF_DisableRemap_SWJ(void)
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 340


 3848              		.loc 4 1607 22 view .LVU1080
 3849              	.LBB298:
1608:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h **** {
1609:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   CLEAR_BIT(AFIO->MAPR,AFIO_MAPR_SWJ_CFG);
 3850              		.loc 4 1609 3 view .LVU1081
 3851 003c 1F4B     		ldr	r3, .L232+12
 3852 003e 5A68     		ldr	r2, [r3, #4]
 3853 0040 22F0E062 		bic	r2, r2, #117440512
 3854 0044 5A60     		str	r2, [r3, #4]
1610:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_gpio.h ****   SET_BIT(AFIO->MAPR, AFIO_MAPR_SWJ_CFG_DISABLE);
 3855              		.loc 4 1610 3 view .LVU1082
 3856 0046 5A68     		ldr	r2, [r3, #4]
 3857 0048 42F08062 		orr	r2, r2, #67108864
 3858 004c 5A60     		str	r2, [r3, #4]
 3859              	.LBE298:
 3860              	.LBE297:
 657:Src/main.c    **** 
 3861              		.loc 1 657 3 view .LVU1083
 3862 004e FFF7FEFF 		bl	SystemClock_Config
 3863              	.LVL297:
 664:Src/main.c    ****   MX_USART3_UART_Init();
 3864              		.loc 1 664 3 view .LVU1084
 3865 0052 FFF7FEFF 		bl	MX_GPIO_Init
 3866              	.LVL298:
 665:Src/main.c    ****   MX_DMA_Init();
 3867              		.loc 1 665 3 view .LVU1085
 3868 0056 FFF7FEFF 		bl	MX_USART3_UART_Init
 3869              	.LVL299:
 666:Src/main.c    ****   MX_TIM2_Init();
 3870              		.loc 1 666 3 view .LVU1086
 3871 005a FFF7FEFF 		bl	MX_DMA_Init
 3872              	.LVL300:
 667:Src/main.c    ****   /* USER CODE BEGIN 2 */
 3873              		.loc 1 667 3 view .LVU1087
 3874 005e FFF7FEFF 		bl	MX_TIM2_Init
 3875              	.LVL301:
 671:Src/main.c    ****   uint8_t colorLetter[] = {10, 0, 0};
 3876              		.loc 1 671 3 view .LVU1088
 671:Src/main.c    ****   uint8_t colorLetter[] = {10, 0, 0};
 3877              		.loc 1 671 11 is_stmt 0 view .LVU1089
 3878 0062 174B     		ldr	r3, .L232+16
 3879 0064 1B68     		ldr	r3, [r3]
 3880 0066 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 3881 006a 1B0C     		lsrs	r3, r3, #16
 3882 006c 8DF81E30 		strb	r3, [sp, #30]
 672:Src/main.c    **** 
 3883              		.loc 1 672 3 is_stmt 1 view .LVU1090
 672:Src/main.c    **** 
 3884              		.loc 1 672 11 is_stmt 0 view .LVU1091
 3885 0070 0A23     		movs	r3, #10
 3886 0072 8DF81830 		strb	r3, [sp, #24]
 3887 0076 0024     		movs	r4, #0
 3888 0078 8DF81940 		strb	r4, [sp, #25]
 3889 007c 8DF81A40 		strb	r4, [sp, #26]
 677:Src/main.c    ****   drawColor(background);
 3890              		.loc 1 677 3 is_stmt 1 view .LVU1092
 3891 0080 FFF7FEFF 		bl	clearFramebuffer
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 341


 3892              	.LVL302:
 678:Src/main.c    ****   fillFramebuffer();
 3893              		.loc 1 678 3 view .LVU1093
 3894 0084 07A8     		add	r0, sp, #28
 3895 0086 FFF7FEFF 		bl	drawColor
 3896              	.LVL303:
 679:Src/main.c    ****   WS2812_sendbuf(24 * NLEDSCH);
 3897              		.loc 1 679 3 view .LVU1094
 3898 008a FFF7FEFF 		bl	fillFramebuffer
 3899              	.LVL304:
 680:Src/main.c    **** 
 3900              		.loc 1 680 3 view .LVU1095
 3901 008e 4FF4A870 		mov	r0, #336
 3902 0092 FFF7FEFF 		bl	WS2812_sendbuf
 3903              	.LVL305:
 682:Src/main.c    **** 
 3904              		.loc 1 682 3 view .LVU1096
 3905 0096 0294     		str	r4, [sp, #8]
 3906 0098 0194     		str	r4, [sp, #4]
 3907 009a 0123     		movs	r3, #1
 3908 009c 0093     		str	r3, [sp]
 3909 009e 4FF4FA73 		mov	r3, #500
 3910 00a2 06AA     		add	r2, sp, #24
 3911 00a4 07A9     		add	r1, sp, #28
 3912 00a6 0748     		ldr	r0, .L232+20
 3913 00a8 FFF7FEFF 		bl	drawScrollingLine
 3914              	.LVL306:
 3915              	.L230:
 686:Src/main.c    ****   {
 3916              		.loc 1 686 3 discriminator 1 view .LVU1097
 717:Src/main.c    ****   /* USER CODE END 3 */
 3917              		.loc 1 717 3 discriminator 1 view .LVU1098
 3918 00ac FEE7     		b	.L230
 3919              	.L233:
 3920 00ae 00BF     		.align	2
 3921              	.L232:
 3922 00b0 00100240 		.word	1073876992
 3923 00b4 00ED00E0 		.word	-536810240
 3924 00b8 0003FA05 		.word	100270848
 3925 00bc 00000140 		.word	1073807360
 3926 00c0 00000000 		.word	.LANCHOR14
 3927 00c4 00000000 		.word	.LC14
 3928              		.cfi_endproc
 3929              	.LFE720:
 3931              		.section	.text.DMA1_Channel7_IRQHandler,"ax",%progbits
 3932              		.align	1
 3933              		.global	DMA1_Channel7_IRQHandler
 3934              		.syntax unified
 3935              		.thumb
 3936              		.thumb_func
 3937              		.fpu softvfp
 3939              	DMA1_Channel7_IRQHandler:
 3940              	.LFB726:
 933:Src/main.c    **** 
 934:Src/main.c    **** void DMA1_Channel7_IRQHandler(void)
 935:Src/main.c    **** {
 3941              		.loc 1 935 1 view -0
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 342


 3942              		.cfi_startproc
 3943              		@ args = 0, pretend = 0, frame = 0
 3944              		@ frame_needed = 0, uses_anonymous_args = 0
 3945              		@ link register save eliminated.
 936:Src/main.c    ****   LL_DMA_ClearFlag_TC7(DMA1);
 3946              		.loc 1 936 3 view .LVU1100
 3947              	.LVL307:
 3948              	.LBB299:
 3949              	.LBI299:
1597:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 3950              		.loc 6 1597 22 view .LVU1101
 3951              	.LBB300:
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 3952              		.loc 6 1599 3 view .LVU1102
 3953 0000 124B     		ldr	r3, .L235
 3954 0002 4FF00072 		mov	r2, #33554432
 3955 0006 5A60     		str	r2, [r3, #4]
 3956              	.LVL308:
1599:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 3957              		.loc 6 1599 3 is_stmt 0 view .LVU1103
 3958              	.LBE300:
 3959              	.LBE299:
 937:Src/main.c    ****   // enable TIM2 Update interrupt to append 50us dead period
 938:Src/main.c    ****   LL_TIM_EnableIT_UPDATE(TIM2);
 3960              		.loc 1 938 3 is_stmt 1 view .LVU1104
 3961              	.LBB301:
 3962              	.LBI301:
3201:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 3963              		.loc 7 3201 22 view .LVU1105
 3964              	.LBB302:
3203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 3965              		.loc 7 3203 3 view .LVU1106
 3966 0008 4FF08043 		mov	r3, #1073741824
 3967 000c DA68     		ldr	r2, [r3, #12]
 3968 000e 42F00102 		orr	r2, r2, #1
 3969 0012 DA60     		str	r2, [r3, #12]
 3970              	.LVL309:
3203:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 3971              		.loc 7 3203 3 is_stmt 0 view .LVU1107
 3972              	.LBE302:
 3973              	.LBE301:
 939:Src/main.c    ****   // disable the DMA channels
 940:Src/main.c    ****   LL_DMA_DisableChannel(DMA1, LL_DMA_CHANNEL_2);
 3974              		.loc 1 940 3 is_stmt 1 view .LVU1108
 3975              	.LBB303:
 3976              	.LBI303:
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 3977              		.loc 6 489 22 view .LVU1109
 3978              	.LBB304:
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 3979              		.loc 6 491 3 view .LVU1110
 3980 0014 0E49     		ldr	r1, .L235+4
 3981 0016 0A68     		ldr	r2, [r1]
 3982 0018 22F00102 		bic	r2, r2, #1
 3983 001c 0A60     		str	r2, [r1]
 3984              	.LVL310:
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 343


 3985              		.loc 6 491 3 is_stmt 0 view .LVU1111
 3986              	.LBE304:
 3987              	.LBE303:
 941:Src/main.c    ****   LL_DMA_DisableChannel(DMA1, LL_DMA_CHANNEL_5);
 3988              		.loc 1 941 3 is_stmt 1 view .LVU1112
 3989              	.LBB305:
 3990              	.LBI305:
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 3991              		.loc 6 489 22 view .LVU1113
 3992              	.LBB306:
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 3993              		.loc 6 491 3 view .LVU1114
 3994 001e 3C31     		adds	r1, r1, #60
 3995 0020 0A68     		ldr	r2, [r1]
 3996 0022 22F00102 		bic	r2, r2, #1
 3997 0026 0A60     		str	r2, [r1]
 3998              	.LVL311:
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 3999              		.loc 6 491 3 is_stmt 0 view .LVU1115
 4000              	.LBE306:
 4001              	.LBE305:
 942:Src/main.c    ****   LL_DMA_DisableChannel(DMA1, LL_DMA_CHANNEL_7);
 4002              		.loc 1 942 3 is_stmt 1 view .LVU1116
 4003              	.LBB307:
 4004              	.LBI307:
 489:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** {
 4005              		.loc 6 489 22 view .LVU1117
 4006              	.LBB308:
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 4007              		.loc 6 491 3 view .LVU1118
 4008 0028 2831     		adds	r1, r1, #40
 4009 002a 0A68     		ldr	r2, [r1]
 4010 002c 22F00102 		bic	r2, r2, #1
 4011 0030 0A60     		str	r2, [r1]
 4012              	.LVL312:
 491:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h **** }
 4013              		.loc 6 491 3 is_stmt 0 view .LVU1119
 4014              	.LBE308:
 4015              	.LBE307:
 943:Src/main.c    ****   // IMPORTANT: disable the DMA requests, too!
 944:Src/main.c    ****   LL_TIM_DisableDMAReq_CC1(TIM2);
 4016              		.loc 1 944 3 is_stmt 1 view .LVU1120
 4017              	.LBB309:
 4018              	.LBI309:
3516:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 4019              		.loc 7 3516 22 view .LVU1121
 4020              	.LBB310:
3518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4021              		.loc 7 3518 3 view .LVU1122
 4022 0032 DA68     		ldr	r2, [r3, #12]
 4023 0034 22F40072 		bic	r2, r2, #512
 4024 0038 DA60     		str	r2, [r3, #12]
 4025              	.LVL313:
3518:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4026              		.loc 7 3518 3 is_stmt 0 view .LVU1123
 4027              	.LBE310:
 4028              	.LBE309:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 344


 945:Src/main.c    ****   LL_TIM_DisableDMAReq_CC2(TIM2);
 4029              		.loc 1 945 3 is_stmt 1 view .LVU1124
 4030              	.LBB311:
 4031              	.LBI311:
3541:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
3542:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** 
3543:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** /**
3544:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @brief  Disable capture/compare 2  DMA request (CC2DE).
3545:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @rmtoll DIER         CC2DE         LL_TIM_DisableDMAReq_CC2
3546:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @param  TIMx Timer instance
3547:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   * @retval None
3548:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   */
3549:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableDMAReq_CC2(TIM_TypeDef *TIMx)
 4032              		.loc 7 3549 22 view .LVU1125
 4033              	.LBB312:
3550:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
3551:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h ****   CLEAR_BIT(TIMx->DIER, TIM_DIER_CC2DE);
 4034              		.loc 7 3551 3 view .LVU1126
 4035 003a DA68     		ldr	r2, [r3, #12]
 4036 003c 22F48062 		bic	r2, r2, #1024
 4037 0040 DA60     		str	r2, [r3, #12]
 4038              	.LVL314:
 4039              		.loc 7 3551 3 is_stmt 0 view .LVU1127
 4040              	.LBE312:
 4041              	.LBE311:
 946:Src/main.c    ****   LL_TIM_DisableDMAReq_UPDATE(TIM2);
 4042              		.loc 1 946 3 is_stmt 1 view .LVU1128
 4043              	.LBB313:
 4044              	.LBI313:
3483:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 4045              		.loc 7 3483 22 view .LVU1129
 4046              	.LBB314:
3485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4047              		.loc 7 3485 3 view .LVU1130
 4048 0042 DA68     		ldr	r2, [r3, #12]
 4049 0044 22F48072 		bic	r2, r2, #256
 4050 0048 DA60     		str	r2, [r3, #12]
 4051              	.LVL315:
3485:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4052              		.loc 7 3485 3 is_stmt 0 view .LVU1131
 4053              	.LBE314:
 4054              	.LBE313:
 947:Src/main.c    **** }
 4055              		.loc 1 947 1 view .LVU1132
 4056 004a 7047     		bx	lr
 4057              	.L236:
 4058              		.align	2
 4059              	.L235:
 4060 004c 00000240 		.word	1073872896
 4061 0050 1C000240 		.word	1073872924
 4062              		.cfi_endproc
 4063              	.LFE726:
 4065              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 4066              		.align	1
 4067              		.global	TIM2_IRQHandler
 4068              		.syntax unified
 4069              		.thumb
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 345


 4070              		.thumb_func
 4071              		.fpu softvfp
 4073              	TIM2_IRQHandler:
 4074              	.LFB727:
 948:Src/main.c    **** 
 949:Src/main.c    **** void TIM2_IRQHandler(void)
 950:Src/main.c    **** {
 4075              		.loc 1 950 1 is_stmt 1 view -0
 4076              		.cfi_startproc
 4077              		@ args = 0, pretend = 0, frame = 0
 4078              		@ frame_needed = 0, uses_anonymous_args = 0
 4079              		@ link register save eliminated.
 951:Src/main.c    ****   // Clear TIM2 Interrupt Flag
 952:Src/main.c    ****   LL_TIM_ClearFlag_UPDATE(TIM2);
 4080              		.loc 1 952 3 view .LVU1134
 4081              	.LVL316:
 4082              	.LBB315:
 4083              	.LBI315:
2930:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 4084              		.loc 7 2930 22 view .LVU1135
 4085              	.LBB316:
2932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4086              		.loc 7 2932 3 view .LVU1136
 4087 0000 4FF08043 		mov	r3, #1073741824
 4088 0004 6FF00102 		mvn	r2, #1
 4089 0008 1A61     		str	r2, [r3, #16]
 4090              	.LVL317:
2932:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4091              		.loc 7 2932 3 is_stmt 0 view .LVU1137
 4092              	.LBE316:
 4093              	.LBE315:
 953:Src/main.c    **** 
 954:Src/main.c    ****   /* check if certain number of overflows has occured yet 
 955:Src/main.c    **** 	 * this ISR is used to guarantee a 50us dead time on the data lines
 956:Src/main.c    **** 	 * before another frame is transmitted */
 957:Src/main.c    ****   if (TIM2_overflows < (uint8_t)WS2812_DEADPERIOD)
 4094              		.loc 1 957 3 is_stmt 1 view .LVU1138
 4095              		.loc 1 957 22 is_stmt 0 view .LVU1139
 4096 000a 0E4B     		ldr	r3, .L240
 4097 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4098 000e DBB2     		uxtb	r3, r3
 4099              		.loc 1 957 6 view .LVU1140
 4100 0010 272B     		cmp	r3, #39
 4101 0012 05D8     		bhi	.L238
 958:Src/main.c    ****   {
 959:Src/main.c    ****     // count the number of occured overflows
 960:Src/main.c    ****     TIM2_overflows++;
 4102              		.loc 1 960 5 is_stmt 1 view .LVU1141
 4103              		.loc 1 960 19 is_stmt 0 view .LVU1142
 4104 0014 0B4A     		ldr	r2, .L240
 4105 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4106 0018 0133     		adds	r3, r3, #1
 4107 001a DBB2     		uxtb	r3, r3
 4108 001c 1370     		strb	r3, [r2]
 4109 001e 7047     		bx	lr
 4110              	.L238:
 961:Src/main.c    ****   }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 346


 962:Src/main.c    ****   else
 963:Src/main.c    ****   {
 964:Src/main.c    ****     // clear the number of overflows
 965:Src/main.c    ****     TIM2_overflows = 0;
 4111              		.loc 1 965 5 is_stmt 1 view .LVU1143
 4112              		.loc 1 965 20 is_stmt 0 view .LVU1144
 4113 0020 084B     		ldr	r3, .L240
 4114 0022 0022     		movs	r2, #0
 4115 0024 1A70     		strb	r2, [r3]
 966:Src/main.c    ****     // stop TIM2 now because dead period has been reached
 967:Src/main.c    ****     LL_TIM_DisableCounter(TIM2);
 4116              		.loc 1 967 5 is_stmt 1 view .LVU1145
 4117              	.LVL318:
 4118              	.LBB317:
 4119              	.LBI317:
1036:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 4120              		.loc 7 1036 22 view .LVU1146
 4121              	.LBB318:
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4122              		.loc 7 1038 3 view .LVU1147
 4123 0026 4FF08043 		mov	r3, #1073741824
 4124 002a 1A68     		ldr	r2, [r3]
 4125 002c 22F00102 		bic	r2, r2, #1
 4126 0030 1A60     		str	r2, [r3]
 4127              	.LVL319:
1038:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4128              		.loc 7 1038 3 is_stmt 0 view .LVU1148
 4129              	.LBE318:
 4130              	.LBE317:
 968:Src/main.c    ****     /* disable the TIM2 Update interrupt again 
 969:Src/main.c    **** 		 * so it doesn't occur while transmitting data */
 970:Src/main.c    ****     LL_TIM_DisableIT_UPDATE(TIM2);
 4131              		.loc 1 970 5 is_stmt 1 view .LVU1149
 4132              	.LBB319:
 4133              	.LBI319:
3212:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** {
 4134              		.loc 7 3212 22 view .LVU1150
 4135              	.LBB320:
3214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4136              		.loc 7 3214 3 view .LVU1151
 4137 0032 DA68     		ldr	r2, [r3, #12]
 4138 0034 22F00102 		bic	r2, r2, #1
 4139 0038 DA60     		str	r2, [r3, #12]
 4140              	.LVL320:
3214:Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_tim.h **** }
 4141              		.loc 7 3214 3 is_stmt 0 view .LVU1152
 4142              	.LBE320:
 4143              	.LBE319:
 971:Src/main.c    ****     // finally indicate that the data frame has been transmitted
 972:Src/main.c    ****     WS2812_TC = 1;
 4144              		.loc 1 972 5 is_stmt 1 view .LVU1153
 4145              		.loc 1 972 15 is_stmt 0 view .LVU1154
 4146 003a 034B     		ldr	r3, .L240+4
 4147 003c 0122     		movs	r2, #1
 4148 003e 1A70     		strb	r2, [r3]
 973:Src/main.c    ****   }
 974:Src/main.c    **** }
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 347


 4149              		.loc 1 974 1 view .LVU1155
 4150 0040 7047     		bx	lr
 4151              	.L241:
 4152 0042 00BF     		.align	2
 4153              	.L240:
 4154 0044 00000000 		.word	.LANCHOR15
 4155 0048 00000000 		.word	.LANCHOR12
 4156              		.cfi_endproc
 4157              	.LFE727:
 4159              		.section	.text.drawNote,"ax",%progbits
 4160              		.align	1
 4161              		.global	drawNote
 4162              		.syntax unified
 4163              		.thumb
 4164              		.thumb_func
 4165              		.fpu softvfp
 4167              	drawNote:
 4168              	.LVL321:
 4169              	.LFB728:
 975:Src/main.c    **** 
 976:Src/main.c    **** void drawNote(int nt, volatile uint8_t *colorLetter)
 977:Src/main.c    **** {
 4170              		.loc 1 977 1 is_stmt 1 view -0
 4171              		.cfi_startproc
 4172              		@ args = 0, pretend = 0, frame = 8
 4173              		@ frame_needed = 0, uses_anonymous_args = 0
 4174              		.loc 1 977 1 is_stmt 0 view .LVU1157
 4175 0000 70B5     		push	{r4, r5, r6, lr}
 4176              	.LCFI47:
 4177              		.cfi_def_cfa_offset 16
 4178              		.cfi_offset 4, -16
 4179              		.cfi_offset 5, -12
 4180              		.cfi_offset 6, -8
 4181              		.cfi_offset 14, -4
 4182 0002 82B0     		sub	sp, sp, #8
 4183              	.LCFI48:
 4184              		.cfi_def_cfa_offset 24
 4185 0004 0D46     		mov	r5, r1
 978:Src/main.c    ****   resto = nt % MIDI_OCTAVE;
 4186              		.loc 1 978 3 is_stmt 1 view .LVU1158
 4187              		.loc 1 978 14 is_stmt 0 view .LVU1159
 4188 0006 3D4A     		ldr	r2, .L258
 4189 0008 82FB0032 		smull	r3, r2, r2, r0
 4190 000c C317     		asrs	r3, r0, #31
 4191 000e C3EB6203 		rsb	r3, r3, r2, asr #1
 4192 0012 1C46     		mov	r4, r3
 4193 0014 03EB4303 		add	r3, r3, r3, lsl #1
 4194 0018 9A00     		lsls	r2, r3, #2
 4195 001a 831A     		subs	r3, r0, r2
 4196              		.loc 1 978 9 view .LVU1160
 4197 001c 384E     		ldr	r6, .L258+4
 4198 001e 3360     		str	r3, [r6]
 979:Src/main.c    ****   uint8_t res = nt / MIDI_OCTAVE;
 4199              		.loc 1 979 3 is_stmt 1 view .LVU1161
 4200              		.loc 1 979 11 is_stmt 0 view .LVU1162
 4201 0020 E4B2     		uxtb	r4, r4
 4202              	.LVL322:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 348


 980:Src/main.c    ****   char resStr[1];
 4203              		.loc 1 980 3 is_stmt 1 view .LVU1163
 981:Src/main.c    ****   sprintf(resStr, "%1d", res);
 4204              		.loc 1 981 3 view .LVU1164
 4205 0022 2246     		mov	r2, r4
 4206 0024 3749     		ldr	r1, .L258+8
 4207              	.LVL323:
 4208              		.loc 1 981 3 is_stmt 0 view .LVU1165
 4209 0026 01A8     		add	r0, sp, #4
 4210              	.LVL324:
 4211              		.loc 1 981 3 view .LVU1166
 4212 0028 FFF7FEFF 		bl	sprintf
 4213              	.LVL325:
 982:Src/main.c    ****   //strcpy(note.octave,resStr);
 983:Src/main.c    ****   switch (resto)
 4214              		.loc 1 983 3 is_stmt 1 view .LVU1167
 4215 002c 3368     		ldr	r3, [r6]
 4216 002e 0B2B     		cmp	r3, #11
 4217 0030 0DD8     		bhi	.L243
 4218 0032 DFE803F0 		tbb	[pc, r3]
 4219              	.L245:
 4220 0036 06       		.byte	(.L256-.L245)/2
 4221 0037 16       		.byte	(.L255-.L245)/2
 4222 0038 1D       		.byte	(.L254-.L245)/2
 4223 0039 24       		.byte	(.L253-.L245)/2
 4224 003a 2B       		.byte	(.L252-.L245)/2
 4225 003b 32       		.byte	(.L251-.L245)/2
 4226 003c 39       		.byte	(.L250-.L245)/2
 4227 003d 40       		.byte	(.L249-.L245)/2
 4228 003e 47       		.byte	(.L248-.L245)/2
 4229 003f 4E       		.byte	(.L247-.L245)/2
 4230 0040 55       		.byte	(.L246-.L245)/2
 4231 0041 5C       		.byte	(.L244-.L245)/2
 4232              		.p2align 1
 4233              	.L256:
 984:Src/main.c    ****   {
 985:Src/main.c    ****   case MIDI_C0:
 986:Src/main.c    ****     drawLetter('C', colorLetter, 0, 1);
 4234              		.loc 1 986 5 view .LVU1168
 4235 0042 0123     		movs	r3, #1
 4236 0044 0022     		movs	r2, #0
 4237 0046 2946     		mov	r1, r5
 4238 0048 4320     		movs	r0, #67
 4239 004a FFF7FEFF 		bl	drawLetter
 4240              	.LVL326:
 987:Src/main.c    ****     break;
 4241              		.loc 1 987 5 view .LVU1169
 4242              	.L243:
 988:Src/main.c    ****   case MIDI_C0 + MIDI_SHARP:
 989:Src/main.c    ****     drawLetter('C', colorLetter, 0, 1);
 990:Src/main.c    ****     break;
 991:Src/main.c    ****   case MIDI_D0:
 992:Src/main.c    ****     drawLetter('D', colorLetter, 0, 1);
 993:Src/main.c    ****     break;
 994:Src/main.c    ****   case MIDI_E0 + MIDI_FLAT:
 995:Src/main.c    ****     drawLetter('E', colorLetter, 0, 1);
 996:Src/main.c    ****     break;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 349


 997:Src/main.c    ****   case MIDI_E0:
 998:Src/main.c    ****     drawLetter('E', colorLetter, 0, 1);
 999:Src/main.c    ****     break;
1000:Src/main.c    ****   case MIDI_F0:
1001:Src/main.c    ****     drawLetter('F', colorLetter, 0, 1);
1002:Src/main.c    ****     break;
1003:Src/main.c    ****   case MIDI_F0 + MIDI_SHARP:
1004:Src/main.c    ****     drawLetter('F', colorLetter, 0, 1);
1005:Src/main.c    ****     break;
1006:Src/main.c    ****   case MIDI_G0:
1007:Src/main.c    ****     drawLetter('F', colorLetter, 0, 1);
1008:Src/main.c    ****     break;
1009:Src/main.c    ****   case MIDI_A0 + MIDI_FLAT:
1010:Src/main.c    ****     drawLetter('A', colorLetter, 0, 1);
1011:Src/main.c    ****     break;
1012:Src/main.c    ****   case MIDI_A0:
1013:Src/main.c    ****     drawLetter('A', colorLetter, 0, 1);
1014:Src/main.c    ****     break;
1015:Src/main.c    ****   case MIDI_B0 + MIDI_FLAT:
1016:Src/main.c    ****     drawLetter('B', colorLetter, 0, 1);
1017:Src/main.c    ****     break;
1018:Src/main.c    ****   case MIDI_B0:
1019:Src/main.c    ****     drawLetter('B', colorLetter, 0, 1);
1020:Src/main.c    ****     break;
1021:Src/main.c    ****   }
1022:Src/main.c    ****   drawLetter('0' + res, colorLetter, 4, 1);
 4243              		.loc 1 1022 3 view .LVU1170
 4244 004e 04F13000 		add	r0, r4, #48
 4245 0052 0123     		movs	r3, #1
 4246 0054 0422     		movs	r2, #4
 4247 0056 2946     		mov	r1, r5
 4248 0058 C0B2     		uxtb	r0, r0
 4249 005a FFF7FEFF 		bl	drawLetter
 4250              	.LVL327:
1023:Src/main.c    **** }
 4251              		.loc 1 1023 1 is_stmt 0 view .LVU1171
 4252 005e 02B0     		add	sp, sp, #8
 4253              	.LCFI49:
 4254              		.cfi_remember_state
 4255              		.cfi_def_cfa_offset 16
 4256              		@ sp needed
 4257 0060 70BD     		pop	{r4, r5, r6, pc}
 4258              	.LVL328:
 4259              	.L255:
 4260              	.LCFI50:
 4261              		.cfi_restore_state
 989:Src/main.c    ****     break;
 4262              		.loc 1 989 5 is_stmt 1 view .LVU1172
 4263 0062 0123     		movs	r3, #1
 4264 0064 0022     		movs	r2, #0
 4265 0066 2946     		mov	r1, r5
 4266 0068 4320     		movs	r0, #67
 4267 006a FFF7FEFF 		bl	drawLetter
 4268              	.LVL329:
 990:Src/main.c    ****   case MIDI_D0:
 4269              		.loc 1 990 5 view .LVU1173
 4270 006e EEE7     		b	.L243
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 350


 4271              	.L254:
 992:Src/main.c    ****     break;
 4272              		.loc 1 992 5 view .LVU1174
 4273 0070 0123     		movs	r3, #1
 4274 0072 0022     		movs	r2, #0
 4275 0074 2946     		mov	r1, r5
 4276 0076 4420     		movs	r0, #68
 4277 0078 FFF7FEFF 		bl	drawLetter
 4278              	.LVL330:
 993:Src/main.c    ****   case MIDI_E0 + MIDI_FLAT:
 4279              		.loc 1 993 5 view .LVU1175
 4280 007c E7E7     		b	.L243
 4281              	.L253:
 995:Src/main.c    ****     break;
 4282              		.loc 1 995 5 view .LVU1176
 4283 007e 0123     		movs	r3, #1
 4284 0080 0022     		movs	r2, #0
 4285 0082 2946     		mov	r1, r5
 4286 0084 4520     		movs	r0, #69
 4287 0086 FFF7FEFF 		bl	drawLetter
 4288              	.LVL331:
 996:Src/main.c    ****   case MIDI_E0:
 4289              		.loc 1 996 5 view .LVU1177
 4290 008a E0E7     		b	.L243
 4291              	.L252:
 998:Src/main.c    ****     break;
 4292              		.loc 1 998 5 view .LVU1178
 4293 008c 0123     		movs	r3, #1
 4294 008e 0022     		movs	r2, #0
 4295 0090 2946     		mov	r1, r5
 4296 0092 4520     		movs	r0, #69
 4297 0094 FFF7FEFF 		bl	drawLetter
 4298              	.LVL332:
 999:Src/main.c    ****   case MIDI_F0:
 4299              		.loc 1 999 5 view .LVU1179
 4300 0098 D9E7     		b	.L243
 4301              	.L251:
1001:Src/main.c    ****     break;
 4302              		.loc 1 1001 5 view .LVU1180
 4303 009a 0123     		movs	r3, #1
 4304 009c 0022     		movs	r2, #0
 4305 009e 2946     		mov	r1, r5
 4306 00a0 4620     		movs	r0, #70
 4307 00a2 FFF7FEFF 		bl	drawLetter
 4308              	.LVL333:
1002:Src/main.c    ****   case MIDI_F0 + MIDI_SHARP:
 4309              		.loc 1 1002 5 view .LVU1181
 4310 00a6 D2E7     		b	.L243
 4311              	.L250:
1004:Src/main.c    ****     break;
 4312              		.loc 1 1004 5 view .LVU1182
 4313 00a8 0123     		movs	r3, #1
 4314 00aa 0022     		movs	r2, #0
 4315 00ac 2946     		mov	r1, r5
 4316 00ae 4620     		movs	r0, #70
 4317 00b0 FFF7FEFF 		bl	drawLetter
 4318              	.LVL334:
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 351


1005:Src/main.c    ****   case MIDI_G0:
 4319              		.loc 1 1005 5 view .LVU1183
 4320 00b4 CBE7     		b	.L243
 4321              	.L249:
1007:Src/main.c    ****     break;
 4322              		.loc 1 1007 5 view .LVU1184
 4323 00b6 0123     		movs	r3, #1
 4324 00b8 0022     		movs	r2, #0
 4325 00ba 2946     		mov	r1, r5
 4326 00bc 4620     		movs	r0, #70
 4327 00be FFF7FEFF 		bl	drawLetter
 4328              	.LVL335:
1008:Src/main.c    ****   case MIDI_A0 + MIDI_FLAT:
 4329              		.loc 1 1008 5 view .LVU1185
 4330 00c2 C4E7     		b	.L243
 4331              	.L248:
1010:Src/main.c    ****     break;
 4332              		.loc 1 1010 5 view .LVU1186
 4333 00c4 0123     		movs	r3, #1
 4334 00c6 0022     		movs	r2, #0
 4335 00c8 2946     		mov	r1, r5
 4336 00ca 4120     		movs	r0, #65
 4337 00cc FFF7FEFF 		bl	drawLetter
 4338              	.LVL336:
1011:Src/main.c    ****   case MIDI_A0:
 4339              		.loc 1 1011 5 view .LVU1187
 4340 00d0 BDE7     		b	.L243
 4341              	.L247:
1013:Src/main.c    ****     break;
 4342              		.loc 1 1013 5 view .LVU1188
 4343 00d2 0123     		movs	r3, #1
 4344 00d4 0022     		movs	r2, #0
 4345 00d6 2946     		mov	r1, r5
 4346 00d8 4120     		movs	r0, #65
 4347 00da FFF7FEFF 		bl	drawLetter
 4348              	.LVL337:
1014:Src/main.c    ****   case MIDI_B0 + MIDI_FLAT:
 4349              		.loc 1 1014 5 view .LVU1189
 4350 00de B6E7     		b	.L243
 4351              	.L246:
1016:Src/main.c    ****     break;
 4352              		.loc 1 1016 5 view .LVU1190
 4353 00e0 0123     		movs	r3, #1
 4354 00e2 0022     		movs	r2, #0
 4355 00e4 2946     		mov	r1, r5
 4356 00e6 4220     		movs	r0, #66
 4357 00e8 FFF7FEFF 		bl	drawLetter
 4358              	.LVL338:
1017:Src/main.c    ****   case MIDI_B0:
 4359              		.loc 1 1017 5 view .LVU1191
 4360 00ec AFE7     		b	.L243
 4361              	.L244:
1019:Src/main.c    ****     break;
 4362              		.loc 1 1019 5 view .LVU1192
 4363 00ee 0123     		movs	r3, #1
 4364 00f0 0022     		movs	r2, #0
 4365 00f2 2946     		mov	r1, r5
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 352


 4366 00f4 4220     		movs	r0, #66
 4367 00f6 FFF7FEFF 		bl	drawLetter
 4368              	.LVL339:
1020:Src/main.c    ****   }
 4369              		.loc 1 1020 5 view .LVU1193
 4370 00fa A8E7     		b	.L243
 4371              	.L259:
 4372              		.align	2
 4373              	.L258:
 4374 00fc ABAAAA2A 		.word	715827883
 4375 0100 00000000 		.word	.LANCHOR8
 4376 0104 00000000 		.word	.LC1
 4377              		.cfi_endproc
 4378              	.LFE728:
 4380              		.section	.text.Error_Handler,"ax",%progbits
 4381              		.align	1
 4382              		.global	Error_Handler
 4383              		.syntax unified
 4384              		.thumb
 4385              		.thumb_func
 4386              		.fpu softvfp
 4388              	Error_Handler:
 4389              	.LFB729:
1024:Src/main.c    **** 
1025:Src/main.c    **** // void USART3_IRQHandler(void)
1026:Src/main.c    **** // {
1027:Src/main.c    **** //   static uint8_t usart_rx_buffer;
1028:Src/main.c    **** //   static uint8_t usart_rx_message[3];
1029:Src/main.c    **** //   char str[100];
1030:Src/main.c    **** //   long temp, noteTemp = 0;
1031:Src/main.c    **** //   static uint8_t sizeMsg;
1032:Src/main.c    **** //   volatile uint8_t colorLetter[] = {0, 0, 0};
1033:Src/main.c    **** //   LL_GPIO_TogglePin(GPIOC, LL_GPIO_PIN_13);
1034:Src/main.c    **** //   if (LL_USART_IsActiveFlag_RXNE(USART3) && LL_USART_IsEnabledIT_RXNE(USART3))
1035:Src/main.c    **** //   {
1036:Src/main.c    **** //     usart_rx_buffer = LL_USART_ReceiveData8(USART3);
1037:Src/main.c    **** //     if (cntMessage == 0 && waitForMessage == 0)
1038:Src/main.c    **** //     {
1039:Src/main.c    **** //       switch (usart_rx_buffer)
1040:Src/main.c    **** //       {
1041:Src/main.c    **** //       case NOTE_ON: //NOTE_ON Channel 1
1042:Src/main.c    **** //         sizeMsg = 3;
1043:Src/main.c    **** //         cntMessage = 3;
1044:Src/main.c    **** //         waitForMessage = 1;
1045:Src/main.c    **** //         break;
1046:Src/main.c    **** 
1047:Src/main.c    **** //       case NOTE_OFF: //NOTE_OFF Channel 1
1048:Src/main.c    **** //         sizeMsg = 3;
1049:Src/main.c    **** //         cntMessage = 3;
1050:Src/main.c    **** //         waitForMessage = 1;
1051:Src/main.c    **** //         break;
1052:Src/main.c    **** 
1053:Src/main.c    **** //       case CTRL_CHANGE: //CTRL_CHANGE Channel 1
1054:Src/main.c    **** //         sizeMsg = 3;
1055:Src/main.c    **** //         cntMessage = 3;
1056:Src/main.c    **** //         waitForMessage = 1;
1057:Src/main.c    **** //         break;
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 353


1058:Src/main.c    **** //       }
1059:Src/main.c    **** //     }
1060:Src/main.c    **** //     if (cntMessage > 1)
1061:Src/main.c    **** //     {
1062:Src/main.c    **** //       usart_rx_message[sizeMsg - cntMessage] = usart_rx_buffer;
1063:Src/main.c    **** //       cntMessage--;
1064:Src/main.c    **** //     }
1065:Src/main.c    **** //     else if (waitForMessage)
1066:Src/main.c    **** //     {
1067:Src/main.c    **** //       usart_rx_message[sizeMsg - cntMessage] = usart_rx_buffer;
1068:Src/main.c    **** //       switch (usart_rx_message[0])
1069:Src/main.c    **** //       {
1070:Src/main.c    **** //       case NOTE_ON: //NOTE_ON Channel 1
1071:Src/main.c    **** //         for (int i = 0; i < ARRAY_LEN(usart_rx_message); i++)
1072:Src/main.c    **** //         {
1073:Src/main.c    **** //           sprintf(&str[i * 4], "%03x ", usart_rx_message[i]);
1074:Src/main.c    **** //           temp = strtol(&str[i * 4], NULL, 16);
1075:Src/main.c    **** //           if (i != 0)
1076:Src/main.c    **** //             sprintf(&str[i * 4], "%03ld ", temp);
1077:Src/main.c    **** //           if (i == 1)
1078:Src/main.c    **** //           {
1079:Src/main.c    **** //             setNote(temp);
1080:Src/main.c    **** //             noteTemp = temp;
1081:Src/main.c    **** //           }
1082:Src/main.c    **** //           if (i == 2)
1083:Src/main.c    **** //             setVelocity(temp);
1084:Src/main.c    **** //         }
1085:Src/main.c    **** 
1086:Src/main.c    **** //         calculateLeds();
1087:Src/main.c    **** //         // drawColor(arr);
1088:Src/main.c    **** //         // drawNote(noteTemp, colorLetter);
1089:Src/main.c    **** //         drawColor(colorLetter);
1090:Src/main.c    **** //         drawNote(noteTemp, arr);
1091:Src/main.c    **** //         fillFramebuffer();
1092:Src/main.c    **** //         WS2812_sendbuf(24 * NLEDSCH);
1093:Src/main.c    **** //         break;
1094:Src/main.c    **** 
1095:Src/main.c    **** //       case NOTE_OFF: //NOTE_OFF Channel 1
1096:Src/main.c    **** //         for (int i = 0; i < ARRAY_LEN(usart_rx_message); i++)
1097:Src/main.c    **** //         {
1098:Src/main.c    **** //           sprintf(&str[i * 4], "%03x ", usart_rx_message[i]);
1099:Src/main.c    **** //           temp = strtol(&str[i * 4], NULL, 16);
1100:Src/main.c    **** //           if (i != 0)
1101:Src/main.c    **** //             sprintf(&str[i * 4], "%03ld ", temp);
1102:Src/main.c    **** //           if (i == 1)
1103:Src/main.c    **** //             setNote(temp);
1104:Src/main.c    **** //           if (i == 2)
1105:Src/main.c    **** //             setVelocity(temp);
1106:Src/main.c    **** //         }
1107:Src/main.c    **** 
1108:Src/main.c    **** //         break;
1109:Src/main.c    **** 
1110:Src/main.c    **** //       case CTRL_CHANGE: //Velocity Channel 1
1111:Src/main.c    **** //         for (int i = 0; i < ARRAY_LEN(usart_rx_message); i++)
1112:Src/main.c    **** //         {
1113:Src/main.c    **** //           sprintf(&str[i * 4], "%03x ", usart_rx_message[i]);
1114:Src/main.c    **** //           temp = strtol(&str[i * 4], NULL, 16);
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 354


1115:Src/main.c    **** //           if (i != 0)
1116:Src/main.c    **** //             sprintf(&str[i * 4], "%03ld ", temp);
1117:Src/main.c    **** //           if (i == 2)
1118:Src/main.c    **** //             setVelocity(temp);
1119:Src/main.c    **** //         }
1120:Src/main.c    **** //         if (WS2812_TC)
1121:Src/main.c    **** //         {
1122:Src/main.c    **** //           //calculateLeds();
1123:Src/main.c    **** //           //fillFramebufferColor(arr);
1124:Src/main.c    **** //           //WS2812_sendbuf(24 * NLEDSCHCH);
1125:Src/main.c    **** //         }
1126:Src/main.c    **** //         break;
1127:Src/main.c    **** //       }
1128:Src/main.c    **** //       waitForMessage = 0;
1129:Src/main.c    **** //       cntMessage = 0;
1130:Src/main.c    **** //     }
1131:Src/main.c    **** //   }
1132:Src/main.c    **** // }
1133:Src/main.c    **** 
1134:Src/main.c    **** /**
1135:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1136:Src/main.c    ****   * @retval None
1137:Src/main.c    ****   */
1138:Src/main.c    **** void Error_Handler(void)
1139:Src/main.c    **** {
 4390              		.loc 1 1139 1 view -0
 4391              		.cfi_startproc
 4392              		@ args = 0, pretend = 0, frame = 0
 4393              		@ frame_needed = 0, uses_anonymous_args = 0
 4394              		@ link register save eliminated.
1140:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
1141:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
1142:Src/main.c    **** 
1143:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
1144:Src/main.c    **** }
 4395              		.loc 1 1144 1 view .LVU1195
 4396 0000 7047     		bx	lr
 4397              		.cfi_endproc
 4398              	.LFE729:
 4400              		.global	USART_InitStruct
 4401              		.global	DMA_InitStruct
 4402              		.global	GPIO_InitStruct
 4403              		.global	TIM_OC_InitStruct
 4404              		.global	TIM_InitStruct
 4405              		.comm	effect,147,4
 4406              		.global	currColor
 4407              		.comm	WS2812_IO_framedata,672,4
 4408              		.comm	note,6,4
 4409              		.global	velocity
 4410              		.global	font4x6
 4411              		.global	arrCol
 4412              		.global	arr
 4413              		.global	resto
 4414              		.global	waitForMessage
 4415              		.global	cntMessage
 4416              		.global	TIM2_overflows
 4417              		.global	WS2812_TC
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 355


 4418              		.global	WS2812_IO_Low
 4419              		.global	WS2812_IO_High
 4420              		.section	.rodata
 4421              		.align	2
 4422              		.set	.LANCHOR14,. + 0
 4423              	.LC0:
 4424 0000 01       		.byte	1
 4425 0001 01       		.byte	1
 4426 0002 05       		.byte	5
 4427              		.section	.bss.DMA_InitStruct,"aw",%nobits
 4428              		.align	2
 4429              		.set	.LANCHOR2,. + 0
 4432              	DMA_InitStruct:
 4433 0000 00000000 		.space	40
 4433      00000000 
 4433      00000000 
 4433      00000000 
 4433      00000000 
 4434              		.section	.bss.GPIO_InitStruct,"aw",%nobits
 4435              		.align	2
 4436              		.set	.LANCHOR0,. + 0
 4439              	GPIO_InitStruct:
 4440 0000 00000000 		.space	20
 4440      00000000 
 4440      00000000 
 4440      00000000 
 4440      00000000 
 4441              		.section	.bss.TIM2_overflows,"aw",%nobits
 4442              		.set	.LANCHOR15,. + 0
 4445              	TIM2_overflows:
 4446 0000 00       		.space	1
 4447              		.section	.bss.TIM_InitStruct,"aw",%nobits
 4448              		.align	2
 4449              		.set	.LANCHOR5,. + 0
 4452              	TIM_InitStruct:
 4453 0000 00000000 		.space	20
 4453      00000000 
 4453      00000000 
 4453      00000000 
 4453      00000000 
 4454              		.section	.bss.TIM_OC_InitStruct,"aw",%nobits
 4455              		.align	2
 4456              		.set	.LANCHOR6,. + 0
 4459              	TIM_OC_InitStruct:
 4460 0000 00000000 		.space	32
 4460      00000000 
 4460      00000000 
 4460      00000000 
 4460      00000000 
 4461              		.section	.bss.USART_InitStruct,"aw",%nobits
 4462              		.align	2
 4463              		.set	.LANCHOR1,. + 0
 4466              	USART_InitStruct:
 4467 0000 00000000 		.space	24
 4467      00000000 
 4467      00000000 
 4467      00000000 
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 356


 4467      00000000 
 4468              		.section	.bss.WS2812_IO_Low,"aw",%nobits
 4469              		.align	1
 4470              		.set	.LANCHOR4,. + 0
 4473              	WS2812_IO_Low:
 4474 0000 0000     		.space	2
 4475              		.section	.bss.arr,"aw",%nobits
 4476              		.align	2
 4477              		.set	.LANCHOR11,. + 0
 4480              	arr:
 4481 0000 000000   		.space	3
 4482              		.section	.bss.cntMessage,"aw",%nobits
 4483              		.align	2
 4486              	cntMessage:
 4487 0000 00000000 		.space	4
 4488              		.section	.bss.velocity,"aw",%nobits
 4489              		.set	.LANCHOR10,. + 0
 4492              	velocity:
 4493 0000 00       		.space	1
 4494              		.section	.bss.waitForMessage,"aw",%nobits
 4495              		.align	2
 4498              	waitForMessage:
 4499 0000 00000000 		.space	4
 4500              		.section	.data.WS2812_IO_High,"aw"
 4501              		.align	1
 4502              		.set	.LANCHOR3,. + 0
 4505              	WS2812_IO_High:
 4506 0000 FFFF     		.short	-1
 4507              		.section	.data.WS2812_TC,"aw"
 4508              		.set	.LANCHOR12,. + 0
 4511              	WS2812_TC:
 4512 0000 01       		.byte	1
 4513              		.section	.data.arrCol,"aw"
 4514              		.align	2
 4515              		.set	.LANCHOR9,. + 0
 4518              	arrCol:
 4519 0000 32       		.byte	50
 4520 0001 00       		.byte	0
 4521 0002 00       		.byte	0
 4522 0003 32       		.byte	50
 4523 0004 19       		.byte	25
 4524 0005 00       		.byte	0
 4525 0006 32       		.byte	50
 4526 0007 32       		.byte	50
 4527 0008 00       		.byte	0
 4528 0009 32       		.byte	50
 4529 000a 26       		.byte	38
 4530 000b 00       		.byte	0
 4531 000c 00       		.byte	0
 4532 000d 32       		.byte	50
 4533 000e 24       		.byte	36
 4534 000f 19       		.byte	25
 4535 0010 00       		.byte	0
 4536 0011 32       		.byte	50
 4537 0012 32       		.byte	50
 4538 0013 00       		.byte	0
 4539 0014 19       		.byte	25
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 357


 4540 0015 32       		.byte	50
 4541 0016 00       		.byte	0
 4542 0017 32       		.byte	50
 4543 0018 00       		.byte	0
 4544 0019 00       		.byte	0
 4545 001a 28       		.byte	40
 4546 001b 1E       		.byte	30
 4547 001c 1E       		.byte	30
 4548 001d 1E       		.byte	30
 4549 001e 3C       		.byte	60
 4550 001f 3C       		.byte	60
 4551 0020 14       		.byte	20
 4552 0021 3C       		.byte	60
 4553 0022 1E       		.byte	30
 4554 0023 14       		.byte	20
 4555 0024 00       		.byte	0
 4556 0025 00       		.byte	0
 4557 0026 00       		.byte	0
 4558              		.section	.data.currColor,"aw"
 4559              		.align	2
 4560              		.set	.LANCHOR13,. + 0
 4563              	currColor:
 4564 0000 3C       		.byte	60
 4565 0001 19       		.byte	25
 4566 0002 00       		.byte	0
 4567              		.section	.data.resto,"aw"
 4568              		.align	2
 4569              		.set	.LANCHOR8,. + 0
 4572              	resto:
 4573 0000 0C000000 		.word	12
 4574              		.section	.rodata.font4x6,"a"
 4575              		.align	2
 4576              		.set	.LANCHOR7,. + 0
 4579              	font4x6:
 4580 0000 00       		.byte	0
 4581 0001 00       		.byte	0
 4582 0002 49       		.byte	73
 4583 0003 08       		.byte	8
 4584 0004 B4       		.byte	-76
 4585 0005 00       		.byte	0
 4586 0006 BE       		.byte	-66
 4587 0007 F6       		.byte	-10
 4588 0008 7B       		.byte	123
 4589 0009 7A       		.byte	122
 4590 000a A5       		.byte	-91
 4591 000b 94       		.byte	-108
 4592 000c 55       		.byte	85
 4593 000d B8       		.byte	-72
 4594 000e 48       		.byte	72
 4595 000f 00       		.byte	0
 4596 0010 29       		.byte	41
 4597 0011 44       		.byte	68
 4598 0012 44       		.byte	68
 4599 0013 2A       		.byte	42
 4600 0014 15       		.byte	21
 4601 0015 A0       		.byte	-96
 4602 0016 0B       		.byte	11
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 358


 4603 0017 42       		.byte	66
 4604 0018 00       		.byte	0
 4605 0019 50       		.byte	80
 4606 001a 03       		.byte	3
 4607 001b 02       		.byte	2
 4608 001c 00       		.byte	0
 4609 001d 08       		.byte	8
 4610 001e 25       		.byte	37
 4611 001f 90       		.byte	-112
 4612 0020 76       		.byte	118
 4613 0021 BA       		.byte	-70
 4614 0022 59       		.byte	89
 4615 0023 5C       		.byte	92
 4616 0024 C5       		.byte	-59
 4617 0025 9E       		.byte	-98
 4618 0026 C5       		.byte	-59
 4619 0027 38       		.byte	56
 4620 0028 92       		.byte	-110
 4621 0029 E6       		.byte	-26
 4622 002a F3       		.byte	-13
 4623 002b 3A       		.byte	58
 4624 002c 73       		.byte	115
 4625 002d BA       		.byte	-70
 4626 002e E5       		.byte	-27
 4627 002f 90       		.byte	-112
 4628 0030 77       		.byte	119
 4629 0031 BA       		.byte	-70
 4630 0032 77       		.byte	119
 4631 0033 3A       		.byte	58
 4632 0034 08       		.byte	8
 4633 0035 40       		.byte	64
 4634 0036 08       		.byte	8
 4635 0037 50       		.byte	80
 4636 0038 2A       		.byte	42
 4637 0039 44       		.byte	68
 4638 003a 1C       		.byte	28
 4639 003b E0       		.byte	-32
 4640 003c 88       		.byte	-120
 4641 003d 52       		.byte	82
 4642 003e E5       		.byte	-27
 4643 003f 08       		.byte	8
 4644 0040 56       		.byte	86
 4645 0041 8E       		.byte	-114
 4646 0042 77       		.byte	119
 4647 0043 B6       		.byte	-74
 4648 0044 77       		.byte	119
 4649 0045 B8       		.byte	-72
 4650 0046 72       		.byte	114
 4651 0047 8C       		.byte	-116
 4652 0048 D6       		.byte	-42
 4653 0049 BA       		.byte	-70
 4654 004a 73       		.byte	115
 4655 004b 9E       		.byte	-98
 4656 004c 73       		.byte	115
 4657 004d 92       		.byte	-110
 4658 004e 72       		.byte	114
 4659 004f AE       		.byte	-82
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 359


 4660 0050 B7       		.byte	-73
 4661 0051 B6       		.byte	-74
 4662 0052 E9       		.byte	-23
 4663 0053 5C       		.byte	92
 4664 0054 64       		.byte	100
 4665 0055 AA       		.byte	-86
 4666 0056 B7       		.byte	-73
 4667 0057 B4       		.byte	-76
 4668 0058 92       		.byte	-110
 4669 0059 9C       		.byte	-100
 4670 005a BE       		.byte	-66
 4671 005b B6       		.byte	-74
 4672 005c D6       		.byte	-42
 4673 005d B6       		.byte	-74
 4674 005e 56       		.byte	86
 4675 005f AA       		.byte	-86
 4676 0060 D7       		.byte	-41
 4677 0061 92       		.byte	-110
 4678 0062 76       		.byte	118
 4679 0063 EE       		.byte	-18
 4680 0064 77       		.byte	119
 4681 0065 B4       		.byte	-76
 4682 0066 71       		.byte	113
 4683 0067 38       		.byte	56
 4684 0068 E9       		.byte	-23
 4685 0069 48       		.byte	72
 4686 006a B6       		.byte	-74
 4687 006b AE       		.byte	-82
 4688 006c B6       		.byte	-74
 4689 006d AA       		.byte	-86
 4690 006e B6       		.byte	-74
 4691 006f F6       		.byte	-10
 4692 0070 B5       		.byte	-75
 4693 0071 B4       		.byte	-76
 4694 0072 B5       		.byte	-75
 4695 0073 48       		.byte	72
 4696 0074 E5       		.byte	-27
 4697 0075 9C       		.byte	-100
 4698 0076 69       		.byte	105
 4699 0077 4C       		.byte	76
 4700 0078 91       		.byte	-111
 4701 0079 24       		.byte	36
 4702 007a 64       		.byte	100
 4703 007b 2E       		.byte	46
 4704 007c 54       		.byte	84
 4705 007d 00       		.byte	0
 4706 007e 00       		.byte	0
 4707 007f 1C       		.byte	28
 4708 0080 44       		.byte	68
 4709 0081 00       		.byte	0
 4710 0082 0E       		.byte	14
 4711 0083 AE       		.byte	-82
 4712 0084 9A       		.byte	-102
 4713 0085 BA       		.byte	-70
 4714 0086 0E       		.byte	14
 4715 0087 8C       		.byte	-116
 4716 0088 2E       		.byte	46
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 360


 4717 0089 AE       		.byte	-82
 4718 008a 0E       		.byte	14
 4719 008b CE       		.byte	-50
 4720 008c 56       		.byte	86
 4721 008d D0       		.byte	-48
 4722 008e 55       		.byte	85
 4723 008f 3B       		.byte	59
 4724 0090 93       		.byte	-109
 4725 0091 B4       		.byte	-76
 4726 0092 41       		.byte	65
 4727 0093 44       		.byte	68
 4728 0094 41       		.byte	65
 4729 0095 51       		.byte	81
 4730 0096 97       		.byte	-105
 4731 0097 B4       		.byte	-76
 4732 0098 49       		.byte	73
 4733 0099 44       		.byte	68
 4734 009a 17       		.byte	23
 4735 009b B6       		.byte	-74
 4736 009c 1A       		.byte	26
 4737 009d B6       		.byte	-74
 4738 009e 0A       		.byte	10
 4739 009f AA       		.byte	-86
 4740 00a0 D6       		.byte	-42
 4741 00a1 D3       		.byte	-45
 4742 00a2 76       		.byte	118
 4743 00a3 67       		.byte	103
 4744 00a4 17       		.byte	23
 4745 00a5 90       		.byte	-112
 4746 00a6 0F       		.byte	15
 4747 00a7 38       		.byte	56
 4748 00a8 9A       		.byte	-102
 4749 00a9 8C       		.byte	-116
 4750 00aa 16       		.byte	22
 4751 00ab AE       		.byte	-82
 4752 00ac 16       		.byte	22
 4753 00ad BA       		.byte	-70
 4754 00ae 16       		.byte	22
 4755 00af F6       		.byte	-10
 4756 00b0 15       		.byte	21
 4757 00b1 B4       		.byte	-76
 4758 00b2 B5       		.byte	-75
 4759 00b3 2B       		.byte	43
 4760 00b4 1C       		.byte	28
 4761 00b5 5E       		.byte	94
 4762 00b6 6B       		.byte	107
 4763 00b7 4C       		.byte	76
 4764 00b8 49       		.byte	73
 4765 00b9 48       		.byte	72
 4766 00ba C9       		.byte	-55
 4767 00bb 5A       		.byte	90
 4768 00bc 54       		.byte	84
 4769 00bd 00       		.byte	0
 4770 00be 56       		.byte	86
 4771 00bf E2       		.byte	-30
 4772              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 4773              		.align	2
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 361


 4774              	.LC14:
 4775 0000 4F726465 		.ascii	"Ordem dos Engenheiros Tecnicos\000"
 4775      6D20646F 
 4775      7320456E 
 4775      67656E68 
 4775      6569726F 
 4776              		.section	.rodata.setNote.str1.4,"aMS",%progbits,1
 4777              		.align	2
 4778              	.LC1:
 4779 0000 25316400 		.ascii	"%1d\000"
 4780              	.LC3:
 4781 0004 432300   		.ascii	"C#\000"
 4782 0007 00       		.space	1
 4783              	.LC5:
 4784 0008 456200   		.ascii	"Eb\000"
 4785 000b 00       		.space	1
 4786              	.LC8:
 4787 000c 462300   		.ascii	"F#\000"
 4788 000f 00       		.space	1
 4789              	.LC10:
 4790 0010 416200   		.ascii	"Ab\000"
 4791 0013 00       		.space	1
 4792              	.LC12:
 4793 0014 426200   		.ascii	"Bb\000"
 4794 0017 00       		.space	1
 4795              	.LC2:
 4796 0018 4300     		.ascii	"C\000"
 4797 001a 0000     		.space	2
 4798              	.LC4:
 4799 001c 4400     		.ascii	"D\000"
 4800 001e 0000     		.space	2
 4801              	.LC6:
 4802 0020 4500     		.ascii	"E\000"
 4803 0022 0000     		.space	2
 4804              	.LC7:
 4805 0024 4600     		.ascii	"F\000"
 4806 0026 0000     		.space	2
 4807              	.LC9:
 4808 0028 4700     		.ascii	"G\000"
 4809 002a 0000     		.space	2
 4810              	.LC11:
 4811 002c 4100     		.ascii	"A\000"
 4812 002e 0000     		.space	2
 4813              	.LC13:
 4814 0030 4200     		.ascii	"B\000"
 4815              		.text
 4816              	.Letext0:
 4817              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 4818              		.file 12 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_de
 4819              		.file 13 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint
 4820              		.file 14 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 4821              		.file 15 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/inclu
 4822              		.file 16 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 4823              		.file 17 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.
 4824              		.file 18 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h
 4825              		.file 19 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/stdlib.h"
 4826              		.file 20 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 362


 4827              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_utils.h"
 4828              		.file 22 "/Users/luissousa/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/string.h"
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 363


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:16     .text.MX_DMA_Init:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:23     .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:115    .text.MX_DMA_Init:000000000000002c $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:122    .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:128    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:290    .text.MX_GPIO_Init:0000000000000084 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:299    .text.MX_USART3_UART_Init:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:305    .text.MX_USART3_UART_Init:0000000000000000 MX_USART3_UART_Init
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:527    .text.MX_USART3_UART_Init:00000000000000a4 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:540    .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:546    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:907    .text.MX_TIM2_Init:000000000000014c $d
                            *COM*:00000000000002a0 WS2812_IO_framedata
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:925    .text.getFontLine:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:932    .text.getFontLine:0000000000000000 getFontLine
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1041   .text.getFontLine:0000000000000060 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1049   .text.calculateLeds:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1056   .text.calculateLeds:0000000000000000 calculateLeds
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1155   .text.calculateLeds:000000000000009c $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1165   .text.setVelocity:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1172   .text.setVelocity:0000000000000000 setVelocity
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1192   .text.setVelocity:0000000000000008 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1197   .text.setNote:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1204   .text.setNote:0000000000000000 setNote
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1251   .text.setNote:0000000000000032 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1263   .text.setNote:000000000000003e $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1411   .text.setNote:00000000000000fc $d
                            *COM*:0000000000000006 note
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1433   .text.WS2812_framedata_setPixel:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1440   .text.WS2812_framedata_setPixel:0000000000000000 WS2812_framedata_setPixel
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1547   .text.WS2812_framedata_setPixel:000000000000009c $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1552   .text.WS2812_framedata_setRow:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1559   .text.WS2812_framedata_setRow:0000000000000000 WS2812_framedata_setRow
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1624   .text.move:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1631   .text.move:0000000000000000 move
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1879   .text.move:00000000000000d8 $d
                            *COM*:0000000000000093 effect
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1884   .text.clearFramebuffer:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:1891   .text.clearFramebuffer:0000000000000000 clearFramebuffer
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2002   .text.clearFramebuffer:000000000000005c $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2007   .text.fillFramebuffer:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2014   .text.fillFramebuffer:0000000000000000 fillFramebuffer
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2209   .text.fillFramebuffer:00000000000000d0 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2214   .text.WS2812_sendbuf:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2221   .text.WS2812_sendbuf:0000000000000000 WS2812_sendbuf
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2446   .text.WS2812_sendbuf:0000000000000084 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2455   .text.drawColor:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2462   .text.drawColor:0000000000000000 drawColor
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2552   .text.drawColor:0000000000000038 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2563   .text.drawCircle:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2570   .text.drawCircle:0000000000000000 drawCircle
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2837   .text.drawCircle:00000000000000f8 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2845   .text.drawScrollingString:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:2852   .text.drawScrollingString:0000000000000000 drawScrollingString
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3139   .text.drawScrollingString:0000000000000120 $d
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 364


/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3144   .text.drawScrollingLine:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3151   .text.drawScrollingLine:0000000000000000 drawScrollingLine
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3255   .text.drawLetter:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3262   .text.drawLetter:0000000000000000 drawLetter
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3416   .text.drawLetter:0000000000000084 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3421   .text.drawString:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3428   .text.drawString:0000000000000000 drawString
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3517   .text.drawString:000000000000004c $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3522   .text.SystemClock_Config:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3529   .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3738   .text.SystemClock_Config:0000000000000098 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3746   .text.main:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3753   .text.main:0000000000000000 main
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3922   .text.main:00000000000000b0 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3932   .text.DMA1_Channel7_IRQHandler:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:3939   .text.DMA1_Channel7_IRQHandler:0000000000000000 DMA1_Channel7_IRQHandler
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4060   .text.DMA1_Channel7_IRQHandler:000000000000004c $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4066   .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4073   .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4154   .text.TIM2_IRQHandler:0000000000000044 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4160   .text.drawNote:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4167   .text.drawNote:0000000000000000 drawNote
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4220   .text.drawNote:0000000000000036 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4232   .text.drawNote:0000000000000042 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4374   .text.drawNote:00000000000000fc $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4381   .text.Error_Handler:0000000000000000 $t
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4388   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4466   .bss.USART_InitStruct:0000000000000000 USART_InitStruct
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4432   .bss.DMA_InitStruct:0000000000000000 DMA_InitStruct
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4439   .bss.GPIO_InitStruct:0000000000000000 GPIO_InitStruct
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4459   .bss.TIM_OC_InitStruct:0000000000000000 TIM_OC_InitStruct
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4452   .bss.TIM_InitStruct:0000000000000000 TIM_InitStruct
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4563   .data.currColor:0000000000000000 currColor
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4492   .bss.velocity:0000000000000000 velocity
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4579   .rodata.font4x6:0000000000000000 font4x6
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4518   .data.arrCol:0000000000000000 arrCol
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4480   .bss.arr:0000000000000000 arr
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4572   .data.resto:0000000000000000 resto
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4498   .bss.waitForMessage:0000000000000000 waitForMessage
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4486   .bss.cntMessage:0000000000000000 cntMessage
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4445   .bss.TIM2_overflows:0000000000000000 TIM2_overflows
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4511   .data.WS2812_TC:0000000000000000 WS2812_TC
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4473   .bss.WS2812_IO_Low:0000000000000000 WS2812_IO_Low
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4505   .data.WS2812_IO_High:0000000000000000 WS2812_IO_High
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4421   .rodata:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4428   .bss.DMA_InitStruct:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4435   .bss.GPIO_InitStruct:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4446   .bss.TIM2_overflows:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4448   .bss.TIM_InitStruct:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4455   .bss.TIM_OC_InitStruct:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4462   .bss.USART_InitStruct:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4469   .bss.WS2812_IO_Low:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4476   .bss.arr:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4483   .bss.cntMessage:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4493   .bss.velocity:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4495   .bss.waitForMessage:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4501   .data.WS2812_IO_High:0000000000000000 $d
ARM GAS  /var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s 			page 365


/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4514   .data.arrCol:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4559   .data.currColor:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4568   .data.resto:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4575   .rodata.font4x6:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4773   .rodata.main.str1.4:0000000000000000 $d
/var/folders/hv/f19l0kw128sbpybv1h43gz3c0000gn/T//cczivR5k.s:4777   .rodata.setNote.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
LL_GPIO_Init
LL_USART_Init
LL_DMA_DeInit
LL_DMA_Init
LL_TIM_Init
LL_TIM_OC_Init
SystemCoreClock
__aeabi_i2d
__aeabi_dmul
__aeabi_d2uiz
sprintf
__aeabi_i2f
__aeabi_fdiv
__aeabi_fsub
__aeabi_fmul
__aeabi_fcmple
__aeabi_fcmpge
strlen
LL_mDelay
LL_Init1msTick
LL_SetSystemCoreClock
